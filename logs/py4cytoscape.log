2025-03-06 13:29:21,804 [DEBUG] py4...: Calling open_session('/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys')
2025-03-06 13:29:21,805 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:29:21,805 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 13:29:23,802 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 13:29:23,802 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys'}
2025-03-06 13:29:33,443 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:29:33,443 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:29:33,444 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:29:33,444 [DEBUG] py4...: --------------------
2025-03-06 13:30:48,024 [DEBUG] py4...: Calling open_session('/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys')
2025-03-06 13:30:48,024 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:30:48,024 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 13:30:48,107 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 13:30:48,107 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys'}
2025-03-06 13:30:57,298 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:30:57,299 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:30:57,299 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:30:57,299 [DEBUG] py4...: --------------------
2025-03-06 13:38:00,148 [DEBUG] py4...: Calling open_session('/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys')
2025-03-06 13:38:00,148 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:38:00,148 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 13:38:00,256 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 13:38:00,256 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys'}
2025-03-06 13:38:06,976 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:38:06,977 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:38:06,977 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:38:06,977 [DEBUG] py4...: --------------------
2025-03-06 13:38:41,675 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:38:41,676 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:38:41,676 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:38:41,737 [DEBUG] py4...: ǀOK[200], content: [{"name":"Glutathione metabolism [bvu00480]","SUID":24048},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":23110},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":23670},{"name":"D-Amino acid metabolism [bvu00470]","SUID":24358},{"name":"Other glycan degradation [bvu00511]","SUID":24714}]
2025-03-06 13:38:41,737 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Glutathione metabolism [bvu00480]', 'SUID': 24048}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 23110}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 23670}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 24358}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 24714}]
2025-03-06 13:38:41,737 [DEBUG] py4...: Returning 'get_network_list': ['Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]']
2025-03-06 13:38:41,737 [DEBUG] py4...: --------------------
2025-03-06 13:39:02,768 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:39:02,768 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:39:02,769 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:39:02,801 [DEBUG] py4...: ǀOK[200], content: [{"name":"Glutathione metabolism [bvu00480]","SUID":24048},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":23110},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":23670},{"name":"D-Amino acid metabolism [bvu00470]","SUID":24358},{"name":"Other glycan degradation [bvu00511]","SUID":24714}]
2025-03-06 13:39:02,801 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Glutathione metabolism [bvu00480]', 'SUID': 24048}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 23110}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 23670}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 24358}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 24714}]
2025-03-06 13:39:02,801 [DEBUG] py4...: Returning 'get_network_list': ['Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]']
2025-03-06 13:39:02,801 [DEBUG] py4...: --------------------
2025-03-06 13:39:56,155 [DEBUG] py4...: Calling get_network_suid('Glutathione metabolism [bvu00480]')
2025-03-06 13:39:56,155 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:39:56,155 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:39:56,155 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:39:56,322 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glutathione metabolism [bvu00480]","SUID":24048},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":23110},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":23670},{"name":"D-Amino acid metabolism [bvu00470]","SUID":24358},{"name":"Other glycan degradation [bvu00511]","SUID":24714}]
2025-03-06 13:39:56,323 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glutathione metabolism [bvu00480]', 'SUID': 24048}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 23110}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 23670}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 24358}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 24714}]
2025-03-06 13:39:56,323 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]']
2025-03-06 13:39:56,323 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glutathione metabolism [bvu00480]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:39:56,323 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glutathione metabolism [bvu00480]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:39:56,556 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 24048
}
],
 "errors":[]
}
2025-03-06 13:39:56,557 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 24048}]
2025-03-06 13:39:56,557 [DEBUG] py4...: Returning 'get_network_suid': 24048
2025-03-06 13:39:56,557 [DEBUG] py4...: --------------------
2025-03-06 13:39:56,557 [DEBUG] py4...: Calling get_network_suid('Amino sugar and nucleotide sugar metabolism [bvu00520]')
2025-03-06 13:39:56,557 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:39:56,557 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:39:56,557 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:39:56,590 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glutathione metabolism [bvu00480]","SUID":24048},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":23110},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":23670},{"name":"D-Amino acid metabolism [bvu00470]","SUID":24358},{"name":"Other glycan degradation [bvu00511]","SUID":24714}]
2025-03-06 13:39:56,590 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glutathione metabolism [bvu00480]', 'SUID': 24048}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 23110}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 23670}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 24358}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 24714}]
2025-03-06 13:39:56,591 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]']
2025-03-06 13:39:56,591 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Amino sugar and nucleotide sugar metabolism [bvu00520]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:39:56,591 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:39:56,772 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 23110
}
],
 "errors":[]
}
2025-03-06 13:39:56,773 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 23110}]
2025-03-06 13:39:56,773 [DEBUG] py4...: Returning 'get_network_suid': 23110
2025-03-06 13:39:56,773 [DEBUG] py4...: --------------------
2025-03-06 13:39:56,773 [DEBUG] py4...: Calling get_network_suid('Lipopolysaccharide biosynthesis [bvu00540]')
2025-03-06 13:39:56,773 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:39:56,773 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:39:56,774 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:39:56,841 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glutathione metabolism [bvu00480]","SUID":24048},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":23110},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":23670},{"name":"D-Amino acid metabolism [bvu00470]","SUID":24358},{"name":"Other glycan degradation [bvu00511]","SUID":24714}]
2025-03-06 13:39:56,841 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glutathione metabolism [bvu00480]', 'SUID': 24048}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 23110}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 23670}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 24358}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 24714}]
2025-03-06 13:39:56,841 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]']
2025-03-06 13:39:56,841 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Lipopolysaccharide biosynthesis [bvu00540]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:39:56,842 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Lipopolysaccharide biosynthesis [bvu00540]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:39:56,935 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 23670
}
],
 "errors":[]
}
2025-03-06 13:39:56,935 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 23670}]
2025-03-06 13:39:56,935 [DEBUG] py4...: Returning 'get_network_suid': 23670
2025-03-06 13:39:56,935 [DEBUG] py4...: --------------------
2025-03-06 13:39:56,935 [DEBUG] py4...: Calling get_network_suid('D-Amino acid metabolism [bvu00470]')
2025-03-06 13:39:56,935 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:39:56,935 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:39:56,935 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:39:57,016 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glutathione metabolism [bvu00480]","SUID":24048},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":23110},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":23670},{"name":"D-Amino acid metabolism [bvu00470]","SUID":24358},{"name":"Other glycan degradation [bvu00511]","SUID":24714}]
2025-03-06 13:39:57,017 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glutathione metabolism [bvu00480]', 'SUID': 24048}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 23110}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 23670}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 24358}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 24714}]
2025-03-06 13:39:57,017 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]']
2025-03-06 13:39:57,017 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="D-Amino acid metabolism [bvu00470]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:39:57,017 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'D-Amino acid metabolism [bvu00470]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:39:57,135 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 24358
}
],
 "errors":[]
}
2025-03-06 13:39:57,137 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 24358}]
2025-03-06 13:39:57,137 [DEBUG] py4...: Returning 'get_network_suid': 24358
2025-03-06 13:39:57,137 [DEBUG] py4...: --------------------
2025-03-06 13:39:57,137 [DEBUG] py4...: Calling get_network_suid('Other glycan degradation [bvu00511]')
2025-03-06 13:39:57,137 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:39:57,137 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:39:57,138 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:39:57,236 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glutathione metabolism [bvu00480]","SUID":24048},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":23110},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":23670},{"name":"D-Amino acid metabolism [bvu00470]","SUID":24358},{"name":"Other glycan degradation [bvu00511]","SUID":24714}]
2025-03-06 13:39:57,236 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glutathione metabolism [bvu00480]', 'SUID': 24048}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 23110}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 23670}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 24358}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 24714}]
2025-03-06 13:39:57,236 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]']
2025-03-06 13:39:57,236 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Other glycan degradation [bvu00511]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:39:57,236 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Other glycan degradation [bvu00511]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:39:57,313 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 24714
}
],
 "errors":[]
}
2025-03-06 13:39:57,313 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 24714}]
2025-03-06 13:39:57,313 [DEBUG] py4...: Returning 'get_network_suid': 24714
2025-03-06 13:39:57,314 [DEBUG] py4...: --------------------
2025-03-06 13:41:27,532 [DEBUG] py4...: Calling open_session('/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys')
2025-03-06 13:41:27,532 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:27,532 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 13:41:27,605 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 13:41:27,605 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys'}
2025-03-06 13:41:32,671 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:41:32,671 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:41:32,672 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:41:32,672 [DEBUG] py4...: --------------------
2025-03-06 13:41:32,672 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:41:32,672 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,672 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:41:32,707 [DEBUG] py4...: ǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":33074},{"name":"Glutathione metabolism [bvu00480]","SUID":32408},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":31470},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":32030},{"name":"D-Amino acid metabolism [bvu00470]","SUID":32718}]
2025-03-06 13:41:32,707 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 33074}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 32408}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 31470}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 32030}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 32718}]
2025-03-06 13:41:32,707 [DEBUG] py4...: Returning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:41:32,707 [DEBUG] py4...: --------------------
2025-03-06 13:41:32,707 [DEBUG] py4...: Calling get_network_suid('Other glycan degradation [bvu00511]')
2025-03-06 13:41:32,707 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,707 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,707 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:41:32,735 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":33074},{"name":"Glutathione metabolism [bvu00480]","SUID":32408},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":31470},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":32030},{"name":"D-Amino acid metabolism [bvu00470]","SUID":32718}]
2025-03-06 13:41:32,736 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 33074}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 32408}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 31470}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 32030}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 32718}]
2025-03-06 13:41:32,736 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:41:32,736 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Other glycan degradation [bvu00511]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,736 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Other glycan degradation [bvu00511]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:41:32,759 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 33074
}
],
 "errors":[]
}
2025-03-06 13:41:32,759 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 33074}]
2025-03-06 13:41:32,759 [DEBUG] py4...: Returning 'get_network_suid': 33074
2025-03-06 13:41:32,759 [DEBUG] py4...: --------------------
2025-03-06 13:41:32,759 [DEBUG] py4...: Calling get_network_suid('Glutathione metabolism [bvu00480]')
2025-03-06 13:41:32,759 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,759 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,759 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:41:32,769 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":33074},{"name":"Glutathione metabolism [bvu00480]","SUID":32408},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":31470},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":32030},{"name":"D-Amino acid metabolism [bvu00470]","SUID":32718}]
2025-03-06 13:41:32,770 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 33074}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 32408}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 31470}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 32030}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 32718}]
2025-03-06 13:41:32,770 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:41:32,770 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glutathione metabolism [bvu00480]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,770 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glutathione metabolism [bvu00480]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:41:32,790 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 32408
}
],
 "errors":[]
}
2025-03-06 13:41:32,790 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 32408}]
2025-03-06 13:41:32,790 [DEBUG] py4...: Returning 'get_network_suid': 32408
2025-03-06 13:41:32,790 [DEBUG] py4...: --------------------
2025-03-06 13:41:32,790 [DEBUG] py4...: Calling get_network_suid('Amino sugar and nucleotide sugar metabolism [bvu00520]')
2025-03-06 13:41:32,790 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,790 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,790 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:41:32,799 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":33074},{"name":"Glutathione metabolism [bvu00480]","SUID":32408},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":31470},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":32030},{"name":"D-Amino acid metabolism [bvu00470]","SUID":32718}]
2025-03-06 13:41:32,800 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 33074}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 32408}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 31470}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 32030}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 32718}]
2025-03-06 13:41:32,800 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:41:32,800 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Amino sugar and nucleotide sugar metabolism [bvu00520]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,800 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:41:32,824 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 31470
}
],
 "errors":[]
}
2025-03-06 13:41:32,825 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 31470}]
2025-03-06 13:41:32,825 [DEBUG] py4...: Returning 'get_network_suid': 31470
2025-03-06 13:41:32,825 [DEBUG] py4...: --------------------
2025-03-06 13:41:32,825 [DEBUG] py4...: Calling get_network_suid('Lipopolysaccharide biosynthesis [bvu00540]')
2025-03-06 13:41:32,825 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,825 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,825 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:41:32,847 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":33074},{"name":"Glutathione metabolism [bvu00480]","SUID":32408},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":31470},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":32030},{"name":"D-Amino acid metabolism [bvu00470]","SUID":32718}]
2025-03-06 13:41:32,847 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 33074}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 32408}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 31470}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 32030}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 32718}]
2025-03-06 13:41:32,847 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:41:32,847 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Lipopolysaccharide biosynthesis [bvu00540]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,847 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Lipopolysaccharide biosynthesis [bvu00540]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:41:32,862 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 32030
}
],
 "errors":[]
}
2025-03-06 13:41:32,863 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 32030}]
2025-03-06 13:41:32,863 [DEBUG] py4...: Returning 'get_network_suid': 32030
2025-03-06 13:41:32,863 [DEBUG] py4...: --------------------
2025-03-06 13:41:32,863 [DEBUG] py4...: Calling get_network_suid('D-Amino acid metabolism [bvu00470]')
2025-03-06 13:41:32,863 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,863 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,863 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:41:32,903 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":33074},{"name":"Glutathione metabolism [bvu00480]","SUID":32408},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":31470},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":32030},{"name":"D-Amino acid metabolism [bvu00470]","SUID":32718}]
2025-03-06 13:41:32,903 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 33074}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 32408}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 31470}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 32030}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 32718}]
2025-03-06 13:41:32,903 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:41:32,903 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="D-Amino acid metabolism [bvu00470]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,904 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'D-Amino acid metabolism [bvu00470]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:41:32,928 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 32718
}
],
 "errors":[]
}
2025-03-06 13:41:32,928 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 32718}]
2025-03-06 13:41:32,928 [DEBUG] py4...: Returning 'get_network_suid': 32718
2025-03-06 13:41:32,928 [DEBUG] py4...: --------------------
2025-03-06 13:41:32,928 [DEBUG] py4...: Calling export_network('networks_graphml/Other glycan degradation [bvu00511].graphml', 'graphml', network=33074)
2025-03-06 13:41:32,929 [DEBUG] py4...: ǀCalling get_network_suid(33074, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,929 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,929 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:41:32,965 [DEBUG] py4...: ǀǀOK[200], content: [33074,32408,31470,32030,32718]
2025-03-06 13:41:32,965 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [33074, 32408, 31470, 32030, 32718]
2025-03-06 13:41:32,965 [DEBUG] py4...: ǀReturning 'get_network_suid': 33074
2025-03-06 13:41:32,965 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Other glycan degradation [bvu00511].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,965 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,965 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 13:41:32,980 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:41:32,980 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:41:32,980 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:41:32,980 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:33074" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:32,980 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:33074', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 13:41:33,433 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml"},
 "errors":[]
}
2025-03-06 13:41:33,434 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 13:41:33,434 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 13:41:33,434 [DEBUG] py4...: --------------------
2025-03-06 13:41:33,434 [DEBUG] py4...: Calling export_network('networks_graphml/Glutathione metabolism [bvu00480].graphml', 'graphml', network=32408)
2025-03-06 13:41:33,434 [DEBUG] py4...: ǀCalling get_network_suid(32408, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,434 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,434 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:41:33,451 [DEBUG] py4...: ǀǀOK[200], content: [33074,32408,31470,32030,32718]
2025-03-06 13:41:33,451 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [33074, 32408, 31470, 32030, 32718]
2025-03-06 13:41:33,451 [DEBUG] py4...: ǀReturning 'get_network_suid': 32408
2025-03-06 13:41:33,451 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Glutathione metabolism [bvu00480].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,451 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,451 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 13:41:33,477 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:41:33,478 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:41:33,478 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:41:33,478 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:32408" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,478 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:32408', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 13:41:33,551 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml"},
 "errors":[]
}
2025-03-06 13:41:33,552 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 13:41:33,552 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 13:41:33,552 [DEBUG] py4...: --------------------
2025-03-06 13:41:33,552 [DEBUG] py4...: Calling export_network('networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', 'graphml', network=31470)
2025-03-06 13:41:33,553 [DEBUG] py4...: ǀCalling get_network_suid(31470, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,553 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,553 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:41:33,570 [DEBUG] py4...: ǀǀOK[200], content: [33074,32408,31470,32030,32718]
2025-03-06 13:41:33,570 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [33074, 32408, 31470, 32030, 32718]
2025-03-06 13:41:33,570 [DEBUG] py4...: ǀReturning 'get_network_suid': 31470
2025-03-06 13:41:33,570 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,570 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,571 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 13:41:33,601 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:41:33,601 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:41:33,601 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:41:33,601 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:31470" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,601 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:31470', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 13:41:33,666 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml"},
 "errors":[]
}
2025-03-06 13:41:33,666 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 13:41:33,666 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 13:41:33,666 [DEBUG] py4...: --------------------
2025-03-06 13:41:33,667 [DEBUG] py4...: Calling export_network('networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', 'graphml', network=32030)
2025-03-06 13:41:33,667 [DEBUG] py4...: ǀCalling get_network_suid(32030, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,667 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,667 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:41:33,685 [DEBUG] py4...: ǀǀOK[200], content: [33074,32408,31470,32030,32718]
2025-03-06 13:41:33,685 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [33074, 32408, 31470, 32030, 32718]
2025-03-06 13:41:33,685 [DEBUG] py4...: ǀReturning 'get_network_suid': 32030
2025-03-06 13:41:33,685 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,686 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,686 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 13:41:33,711 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:41:33,711 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:41:33,711 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:41:33,711 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:32030" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,711 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:32030', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 13:41:33,779 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml"},
 "errors":[]
}
2025-03-06 13:41:33,779 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 13:41:33,779 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 13:41:33,779 [DEBUG] py4...: --------------------
2025-03-06 13:41:33,779 [DEBUG] py4...: Calling export_network('networks_graphml/D-Amino acid metabolism [bvu00470].graphml', 'graphml', network=32718)
2025-03-06 13:41:33,779 [DEBUG] py4...: ǀCalling get_network_suid(32718, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,779 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,779 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:41:33,818 [DEBUG] py4...: ǀǀOK[200], content: [33074,32408,31470,32030,32718]
2025-03-06 13:41:33,818 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [33074, 32408, 31470, 32030, 32718]
2025-03-06 13:41:33,818 [DEBUG] py4...: ǀReturning 'get_network_suid': 32718
2025-03-06 13:41:33,818 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/D-Amino acid metabolism [bvu00470].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,818 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,818 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 13:41:33,850 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:41:33,850 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:41:33,850 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:41:33,850 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:32718" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:41:33,850 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:32718', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 13:41:33,896 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml"},
 "errors":[]
}
2025-03-06 13:41:33,896 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 13:41:33,896 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 13:41:33,896 [DEBUG] py4...: --------------------
2025-03-06 13:53:30,846 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_12.cys')
2025-03-06 13:53:30,847 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_12.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:53:30,847 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 13:53:32,898 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 13:53:32,899 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_12.cys'}
2025-03-06 13:54:10,096 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:54:10,097 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:54:10,098 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:54:10,098 [DEBUG] py4...: --------------------
2025-03-06 13:54:10,099 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:54:10,099 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,100 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:10,153 [DEBUG] py4...: ǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":39830},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":40534},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":40040},{"name":"Biotin metabolism [bvu00780]","SUID":40920},{"name":"Riboflavin metabolism [bvu00740]","SUID":40300}]
2025-03-06 13:54:10,154 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 39830}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 40534}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 40040}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 40920}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 40300}]
2025-03-06 13:54:10,154 [DEBUG] py4...: Returning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:54:10,154 [DEBUG] py4...: --------------------
2025-03-06 13:54:10,154 [DEBUG] py4...: Calling get_network_suid('Vitamin B6 metabolism [bvu00750]')
2025-03-06 13:54:10,154 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,154 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,154 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:10,212 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":39830},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":40534},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":40040},{"name":"Biotin metabolism [bvu00780]","SUID":40920},{"name":"Riboflavin metabolism [bvu00740]","SUID":40300}]
2025-03-06 13:54:10,212 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 39830}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 40534}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 40040}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 40920}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 40300}]
2025-03-06 13:54:10,212 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:54:10,212 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Vitamin B6 metabolism [bvu00750]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,213 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Vitamin B6 metabolism [bvu00750]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:54:10,326 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 39830
}
],
 "errors":[]
}
2025-03-06 13:54:10,326 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 39830}]
2025-03-06 13:54:10,326 [DEBUG] py4...: Returning 'get_network_suid': 39830
2025-03-06 13:54:10,326 [DEBUG] py4...: --------------------
2025-03-06 13:54:10,326 [DEBUG] py4...: Calling get_network_suid('Nicotinate and nicotinamide metabolism [bvu00760]')
2025-03-06 13:54:10,327 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,327 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,327 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:10,396 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":39830},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":40534},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":40040},{"name":"Biotin metabolism [bvu00780]","SUID":40920},{"name":"Riboflavin metabolism [bvu00740]","SUID":40300}]
2025-03-06 13:54:10,396 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 39830}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 40534}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 40040}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 40920}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 40300}]
2025-03-06 13:54:10,397 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:54:10,397 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Nicotinate and nicotinamide metabolism [bvu00760]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,397 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:54:10,451 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 40534
}
],
 "errors":[]
}
2025-03-06 13:54:10,452 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 40534}]
2025-03-06 13:54:10,452 [DEBUG] py4...: Returning 'get_network_suid': 40534
2025-03-06 13:54:10,452 [DEBUG] py4...: --------------------
2025-03-06 13:54:10,452 [DEBUG] py4...: Calling get_network_suid('Pantothenate and CoA biosynthesis [bvu00770]')
2025-03-06 13:54:10,452 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,452 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,452 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:10,528 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":39830},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":40534},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":40040},{"name":"Biotin metabolism [bvu00780]","SUID":40920},{"name":"Riboflavin metabolism [bvu00740]","SUID":40300}]
2025-03-06 13:54:10,529 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 39830}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 40534}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 40040}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 40920}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 40300}]
2025-03-06 13:54:10,529 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:54:10,529 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pantothenate and CoA biosynthesis [bvu00770]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,529 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pantothenate and CoA biosynthesis [bvu00770]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:54:10,628 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 40040
}
],
 "errors":[]
}
2025-03-06 13:54:10,628 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 40040}]
2025-03-06 13:54:10,628 [DEBUG] py4...: Returning 'get_network_suid': 40040
2025-03-06 13:54:10,628 [DEBUG] py4...: --------------------
2025-03-06 13:54:10,628 [DEBUG] py4...: Calling get_network_suid('Biotin metabolism [bvu00780]')
2025-03-06 13:54:10,628 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,628 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,628 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:10,687 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":39830},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":40534},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":40040},{"name":"Biotin metabolism [bvu00780]","SUID":40920},{"name":"Riboflavin metabolism [bvu00740]","SUID":40300}]
2025-03-06 13:54:10,688 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 39830}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 40534}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 40040}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 40920}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 40300}]
2025-03-06 13:54:10,688 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:54:10,688 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biotin metabolism [bvu00780]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,688 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biotin metabolism [bvu00780]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:54:10,751 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 40920
}
],
 "errors":[]
}
2025-03-06 13:54:10,752 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 40920}]
2025-03-06 13:54:10,752 [DEBUG] py4...: Returning 'get_network_suid': 40920
2025-03-06 13:54:10,752 [DEBUG] py4...: --------------------
2025-03-06 13:54:10,752 [DEBUG] py4...: Calling get_network_suid('Riboflavin metabolism [bvu00740]')
2025-03-06 13:54:10,752 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,752 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,752 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:10,796 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":39830},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":40534},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":40040},{"name":"Biotin metabolism [bvu00780]","SUID":40920},{"name":"Riboflavin metabolism [bvu00740]","SUID":40300}]
2025-03-06 13:54:10,796 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 39830}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 40534}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 40040}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 40920}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 40300}]
2025-03-06 13:54:10,796 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:54:10,796 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Riboflavin metabolism [bvu00740]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,796 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Riboflavin metabolism [bvu00740]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:54:10,861 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 40300
}
],
 "errors":[]
}
2025-03-06 13:54:10,861 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 40300}]
2025-03-06 13:54:10,861 [DEBUG] py4...: Returning 'get_network_suid': 40300
2025-03-06 13:54:10,861 [DEBUG] py4...: --------------------
2025-03-06 13:54:10,862 [DEBUG] py4...: Calling export_network('networks_graphml___Vitamin B6 metabolism [bvu00750].graphml', 'graphml', network=39830)
2025-03-06 13:54:10,862 [DEBUG] py4...: ǀCalling get_network_suid(39830, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,862 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,862 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:54:10,899 [DEBUG] py4...: ǀǀOK[200], content: [39830,40534,40040,40920,40300]
2025-03-06 13:54:10,900 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [39830, 40534, 40040, 40920, 40300]
2025-03-06 13:54:10,900 [DEBUG] py4...: ǀReturning 'get_network_suid': 39830
2025-03-06 13:54:10,900 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml___Vitamin B6 metabolism [bvu00750].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,900 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml___Vitamin B6 metabolism [bvu00750].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,900 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml___Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 13:54:10,972 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml___Vitamin B6 metabolism [bvu00750].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:54:10,973 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Vitamin B6 metabolism [bvu00750].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:10,973 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Vitamin B6 metabolism [bvu00750].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:10,973 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:39830" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml___Vitamin B6 metabolism [bvu00750].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:10,973 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:39830', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml___Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 13:54:11,150 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml___Vitamin B6 metabolism [bvu00750].graphml"},
 "errors":[]
}
2025-03-06 13:54:11,150 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 13:54:11,150 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 13:54:11,150 [DEBUG] py4...: --------------------
2025-03-06 13:54:11,150 [DEBUG] py4...: Calling export_network('networks_graphml___Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'graphml', network=40534)
2025-03-06 13:54:11,150 [DEBUG] py4...: ǀCalling get_network_suid(40534, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,150 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,150 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:54:11,175 [DEBUG] py4...: ǀǀOK[200], content: [39830,40534,40040,40920,40300]
2025-03-06 13:54:11,175 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [39830, 40534, 40040, 40920, 40300]
2025-03-06 13:54:11,175 [DEBUG] py4...: ǀReturning 'get_network_suid': 40534
2025-03-06 13:54:11,175 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml___Nicotinate and nicotinamide metabolism [bvu00760].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,175 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml___Nicotinate and nicotinamide metabolism [bvu00760].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,175 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml___Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 13:54:11,194 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml___Nicotinate and nicotinamide metabolism [bvu00760].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:54:11,194 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:11,194 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:11,194 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:40534" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml___Nicotinate and nicotinamide metabolism [bvu00760].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,194 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:40534', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml___Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 13:54:11,313 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml___Nicotinate and nicotinamide metabolism [bvu00760].graphml"},
 "errors":[]
}
2025-03-06 13:54:11,313 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 13:54:11,313 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 13:54:11,313 [DEBUG] py4...: --------------------
2025-03-06 13:54:11,313 [DEBUG] py4...: Calling export_network('networks_graphml___Pantothenate and CoA biosynthesis [bvu00770].graphml', 'graphml', network=40040)
2025-03-06 13:54:11,313 [DEBUG] py4...: ǀCalling get_network_suid(40040, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,313 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,313 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:54:11,327 [DEBUG] py4...: ǀǀOK[200], content: [39830,40534,40040,40920,40300]
2025-03-06 13:54:11,327 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [39830, 40534, 40040, 40920, 40300]
2025-03-06 13:54:11,327 [DEBUG] py4...: ǀReturning 'get_network_suid': 40040
2025-03-06 13:54:11,327 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml___Pantothenate and CoA biosynthesis [bvu00770].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,327 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml___Pantothenate and CoA biosynthesis [bvu00770].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,327 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml___Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 13:54:11,357 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml___Pantothenate and CoA biosynthesis [bvu00770].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:54:11,357 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Pantothenate and CoA biosynthesis [bvu00770].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:11,357 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Pantothenate and CoA biosynthesis [bvu00770].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:11,357 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:40040" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml___Pantothenate and CoA biosynthesis [bvu00770].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,357 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:40040', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml___Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 13:54:11,391 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml___Pantothenate and CoA biosynthesis [bvu00770].graphml"},
 "errors":[]
}
2025-03-06 13:54:11,392 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 13:54:11,392 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 13:54:11,392 [DEBUG] py4...: --------------------
2025-03-06 13:54:11,392 [DEBUG] py4...: Calling export_network('networks_graphml___Biotin metabolism [bvu00780].graphml', 'graphml', network=40920)
2025-03-06 13:54:11,392 [DEBUG] py4...: ǀCalling get_network_suid(40920, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,392 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,392 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:54:11,410 [DEBUG] py4...: ǀǀOK[200], content: [39830,40534,40040,40920,40300]
2025-03-06 13:54:11,410 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [39830, 40534, 40040, 40920, 40300]
2025-03-06 13:54:11,410 [DEBUG] py4...: ǀReturning 'get_network_suid': 40920
2025-03-06 13:54:11,410 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml___Biotin metabolism [bvu00780].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,410 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml___Biotin metabolism [bvu00780].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,411 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml___Biotin metabolism [bvu00780].graphml'}
2025-03-06 13:54:11,428 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml___Biotin metabolism [bvu00780].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:54:11,428 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Biotin metabolism [bvu00780].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:11,428 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Biotin metabolism [bvu00780].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:11,428 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:40920" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml___Biotin metabolism [bvu00780].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,429 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:40920', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml___Biotin metabolism [bvu00780].graphml'}
2025-03-06 13:54:11,569 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml___Biotin metabolism [bvu00780].graphml"},
 "errors":[]
}
2025-03-06 13:54:11,569 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Biotin metabolism [bvu00780].graphml'}
2025-03-06 13:54:11,569 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Biotin metabolism [bvu00780].graphml'}
2025-03-06 13:54:11,569 [DEBUG] py4...: --------------------
2025-03-06 13:54:11,569 [DEBUG] py4...: Calling export_network('networks_graphml___Riboflavin metabolism [bvu00740].graphml', 'graphml', network=40300)
2025-03-06 13:54:11,570 [DEBUG] py4...: ǀCalling get_network_suid(40300, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,570 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,570 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:54:11,588 [DEBUG] py4...: ǀǀOK[200], content: [39830,40534,40040,40920,40300]
2025-03-06 13:54:11,588 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [39830, 40534, 40040, 40920, 40300]
2025-03-06 13:54:11,588 [DEBUG] py4...: ǀReturning 'get_network_suid': 40300
2025-03-06 13:54:11,588 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml___Riboflavin metabolism [bvu00740].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,588 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml___Riboflavin metabolism [bvu00740].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,589 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml___Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 13:54:11,609 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml___Riboflavin metabolism [bvu00740].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:54:11,610 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Riboflavin metabolism [bvu00740].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:11,610 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Riboflavin metabolism [bvu00740].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:11,610 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:40300" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml___Riboflavin metabolism [bvu00740].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,610 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:40300', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml___Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 13:54:11,742 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml___Riboflavin metabolism [bvu00740].graphml"},
 "errors":[]
}
2025-03-06 13:54:11,742 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 13:54:11,742 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 13:54:11,742 [DEBUG] py4...: --------------------
2025-03-06 13:54:11,742 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_13.cys')
2025-03-06 13:54:11,743 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_13.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:11,743 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_13.cys'}
2025-03-06 13:54:28,282 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:54:28,283 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:54:28,283 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:54:28,283 [DEBUG] py4...: --------------------
2025-03-06 13:54:28,283 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:54:28,283 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,283 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:28,329 [DEBUG] py4...: ǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":47105},{"name":"One carbon pool by folate [bvu00670]","SUID":47541},{"name":"Porphyrin metabolism [bvu00860]","SUID":46349},{"name":"Lipoic acid metabolism [bvu00785]","SUID":47949},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":48255}]
2025-03-06 13:54:28,330 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 47105}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 47541}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 46349}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 47949}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 48255}]
2025-03-06 13:54:28,330 [DEBUG] py4...: Returning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]']
2025-03-06 13:54:28,330 [DEBUG] py4...: --------------------
2025-03-06 13:54:28,330 [DEBUG] py4...: Calling get_network_suid('Folate biosynthesis [bvu00790]')
2025-03-06 13:54:28,330 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,330 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,330 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:28,392 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":47105},{"name":"One carbon pool by folate [bvu00670]","SUID":47541},{"name":"Porphyrin metabolism [bvu00860]","SUID":46349},{"name":"Lipoic acid metabolism [bvu00785]","SUID":47949},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":48255}]
2025-03-06 13:54:28,392 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 47105}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 47541}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 46349}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 47949}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 48255}]
2025-03-06 13:54:28,392 [DEBUG] py4...: ǀReturning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]']
2025-03-06 13:54:28,392 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Folate biosynthesis [bvu00790]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,392 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Folate biosynthesis [bvu00790]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:54:28,438 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 47105
}
],
 "errors":[]
}
2025-03-06 13:54:28,438 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 47105}]
2025-03-06 13:54:28,438 [DEBUG] py4...: Returning 'get_network_suid': 47105
2025-03-06 13:54:28,438 [DEBUG] py4...: --------------------
2025-03-06 13:54:28,438 [DEBUG] py4...: Calling get_network_suid('One carbon pool by folate [bvu00670]')
2025-03-06 13:54:28,438 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,438 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,438 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:28,470 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":47105},{"name":"One carbon pool by folate [bvu00670]","SUID":47541},{"name":"Porphyrin metabolism [bvu00860]","SUID":46349},{"name":"Lipoic acid metabolism [bvu00785]","SUID":47949},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":48255}]
2025-03-06 13:54:28,470 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 47105}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 47541}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 46349}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 47949}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 48255}]
2025-03-06 13:54:28,470 [DEBUG] py4...: ǀReturning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]']
2025-03-06 13:54:28,470 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="One carbon pool by folate [bvu00670]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,470 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'One carbon pool by folate [bvu00670]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:54:28,549 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 47541
}
],
 "errors":[]
}
2025-03-06 13:54:28,549 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 47541}]
2025-03-06 13:54:28,550 [DEBUG] py4...: Returning 'get_network_suid': 47541
2025-03-06 13:54:28,550 [DEBUG] py4...: --------------------
2025-03-06 13:54:28,550 [DEBUG] py4...: Calling get_network_suid('Porphyrin metabolism [bvu00860]')
2025-03-06 13:54:28,550 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,550 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,550 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:28,595 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":47105},{"name":"One carbon pool by folate [bvu00670]","SUID":47541},{"name":"Porphyrin metabolism [bvu00860]","SUID":46349},{"name":"Lipoic acid metabolism [bvu00785]","SUID":47949},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":48255}]
2025-03-06 13:54:28,595 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 47105}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 47541}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 46349}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 47949}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 48255}]
2025-03-06 13:54:28,595 [DEBUG] py4...: ǀReturning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]']
2025-03-06 13:54:28,595 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Porphyrin metabolism [bvu00860]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,595 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Porphyrin metabolism [bvu00860]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:54:28,637 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 46349
}
],
 "errors":[]
}
2025-03-06 13:54:28,637 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 46349}]
2025-03-06 13:54:28,637 [DEBUG] py4...: Returning 'get_network_suid': 46349
2025-03-06 13:54:28,637 [DEBUG] py4...: --------------------
2025-03-06 13:54:28,637 [DEBUG] py4...: Calling get_network_suid('Lipoic acid metabolism [bvu00785]')
2025-03-06 13:54:28,637 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,637 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,637 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:28,678 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":47105},{"name":"One carbon pool by folate [bvu00670]","SUID":47541},{"name":"Porphyrin metabolism [bvu00860]","SUID":46349},{"name":"Lipoic acid metabolism [bvu00785]","SUID":47949},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":48255}]
2025-03-06 13:54:28,679 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 47105}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 47541}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 46349}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 47949}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 48255}]
2025-03-06 13:54:28,679 [DEBUG] py4...: ǀReturning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]']
2025-03-06 13:54:28,679 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Lipoic acid metabolism [bvu00785]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,679 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Lipoic acid metabolism [bvu00785]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:54:28,710 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 47949
}
],
 "errors":[]
}
2025-03-06 13:54:28,711 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 47949}]
2025-03-06 13:54:28,711 [DEBUG] py4...: Returning 'get_network_suid': 47949
2025-03-06 13:54:28,711 [DEBUG] py4...: --------------------
2025-03-06 13:54:28,711 [DEBUG] py4...: Calling get_network_suid('Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]')
2025-03-06 13:54:28,711 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,711 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,711 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:28,745 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":47105},{"name":"One carbon pool by folate [bvu00670]","SUID":47541},{"name":"Porphyrin metabolism [bvu00860]","SUID":46349},{"name":"Lipoic acid metabolism [bvu00785]","SUID":47949},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":48255}]
2025-03-06 13:54:28,745 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 47105}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 47541}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 46349}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 47949}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 48255}]
2025-03-06 13:54:28,745 [DEBUG] py4...: ǀReturning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]']
2025-03-06 13:54:28,745 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,746 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:54:28,798 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 48255
}
],
 "errors":[]
}
2025-03-06 13:54:28,799 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 48255}]
2025-03-06 13:54:28,800 [DEBUG] py4...: Returning 'get_network_suid': 48255
2025-03-06 13:54:28,800 [DEBUG] py4...: --------------------
2025-03-06 13:54:28,803 [DEBUG] py4...: Calling export_network('networks_graphml___Folate biosynthesis [bvu00790].graphml', 'graphml', network=47105)
2025-03-06 13:54:28,804 [DEBUG] py4...: ǀCalling get_network_suid(47105, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,807 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,807 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:54:28,859 [DEBUG] py4...: ǀǀOK[200], content: [47105,47541,46349,47949,48255]
2025-03-06 13:54:28,859 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [47105, 47541, 46349, 47949, 48255]
2025-03-06 13:54:28,859 [DEBUG] py4...: ǀReturning 'get_network_suid': 47105
2025-03-06 13:54:28,859 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml___Folate biosynthesis [bvu00790].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,860 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml___Folate biosynthesis [bvu00790].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,860 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml___Folate biosynthesis [bvu00790].graphml'}
2025-03-06 13:54:28,926 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml___Folate biosynthesis [bvu00790].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:54:28,926 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Folate biosynthesis [bvu00790].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:28,926 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Folate biosynthesis [bvu00790].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:28,926 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:47105" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml___Folate biosynthesis [bvu00790].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:28,926 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:47105', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml___Folate biosynthesis [bvu00790].graphml'}
2025-03-06 13:54:29,005 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml___Folate biosynthesis [bvu00790].graphml"},
 "errors":[]
}
2025-03-06 13:54:29,005 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Folate biosynthesis [bvu00790].graphml'}
2025-03-06 13:54:29,005 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Folate biosynthesis [bvu00790].graphml'}
2025-03-06 13:54:29,005 [DEBUG] py4...: --------------------
2025-03-06 13:54:29,006 [DEBUG] py4...: Calling export_network('networks_graphml___One carbon pool by folate [bvu00670].graphml', 'graphml', network=47541)
2025-03-06 13:54:29,006 [DEBUG] py4...: ǀCalling get_network_suid(47541, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,006 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,006 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:54:29,059 [DEBUG] py4...: ǀǀOK[200], content: [47105,47541,46349,47949,48255]
2025-03-06 13:54:29,059 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [47105, 47541, 46349, 47949, 48255]
2025-03-06 13:54:29,059 [DEBUG] py4...: ǀReturning 'get_network_suid': 47541
2025-03-06 13:54:29,059 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml___One carbon pool by folate [bvu00670].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,059 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml___One carbon pool by folate [bvu00670].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,060 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml___One carbon pool by folate [bvu00670].graphml'}
2025-03-06 13:54:29,105 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml___One carbon pool by folate [bvu00670].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:54:29,105 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___One carbon pool by folate [bvu00670].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:29,105 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___One carbon pool by folate [bvu00670].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:29,105 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:47541" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml___One carbon pool by folate [bvu00670].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,105 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:47541', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml___One carbon pool by folate [bvu00670].graphml'}
2025-03-06 13:54:29,194 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml___One carbon pool by folate [bvu00670].graphml"},
 "errors":[]
}
2025-03-06 13:54:29,195 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___One carbon pool by folate [bvu00670].graphml'}
2025-03-06 13:54:29,195 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___One carbon pool by folate [bvu00670].graphml'}
2025-03-06 13:54:29,195 [DEBUG] py4...: --------------------
2025-03-06 13:54:29,195 [DEBUG] py4...: Calling export_network('networks_graphml___Porphyrin metabolism [bvu00860].graphml', 'graphml', network=46349)
2025-03-06 13:54:29,195 [DEBUG] py4...: ǀCalling get_network_suid(46349, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,195 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,195 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:54:29,226 [DEBUG] py4...: ǀǀOK[200], content: [47105,47541,46349,47949,48255]
2025-03-06 13:54:29,227 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [47105, 47541, 46349, 47949, 48255]
2025-03-06 13:54:29,227 [DEBUG] py4...: ǀReturning 'get_network_suid': 46349
2025-03-06 13:54:29,227 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml___Porphyrin metabolism [bvu00860].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,227 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml___Porphyrin metabolism [bvu00860].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,228 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml___Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 13:54:29,302 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml___Porphyrin metabolism [bvu00860].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:54:29,302 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Porphyrin metabolism [bvu00860].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:29,303 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Porphyrin metabolism [bvu00860].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:29,303 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:46349" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml___Porphyrin metabolism [bvu00860].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,303 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:46349', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml___Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 13:54:29,394 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml___Porphyrin metabolism [bvu00860].graphml"},
 "errors":[]
}
2025-03-06 13:54:29,394 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 13:54:29,394 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 13:54:29,394 [DEBUG] py4...: --------------------
2025-03-06 13:54:29,394 [DEBUG] py4...: Calling export_network('networks_graphml___Lipoic acid metabolism [bvu00785].graphml', 'graphml', network=47949)
2025-03-06 13:54:29,394 [DEBUG] py4...: ǀCalling get_network_suid(47949, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,394 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,394 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:54:29,423 [DEBUG] py4...: ǀǀOK[200], content: [47105,47541,46349,47949,48255]
2025-03-06 13:54:29,423 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [47105, 47541, 46349, 47949, 48255]
2025-03-06 13:54:29,423 [DEBUG] py4...: ǀReturning 'get_network_suid': 47949
2025-03-06 13:54:29,423 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml___Lipoic acid metabolism [bvu00785].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,423 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml___Lipoic acid metabolism [bvu00785].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,423 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml___Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 13:54:29,469 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml___Lipoic acid metabolism [bvu00785].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:54:29,469 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Lipoic acid metabolism [bvu00785].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:29,469 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Lipoic acid metabolism [bvu00785].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:29,469 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:47949" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml___Lipoic acid metabolism [bvu00785].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,470 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:47949', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml___Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 13:54:29,533 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml___Lipoic acid metabolism [bvu00785].graphml"},
 "errors":[]
}
2025-03-06 13:54:29,533 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 13:54:29,533 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 13:54:29,533 [DEBUG] py4...: --------------------
2025-03-06 13:54:29,533 [DEBUG] py4...: Calling export_network('networks_graphml___Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'graphml', network=48255)
2025-03-06 13:54:29,533 [DEBUG] py4...: ǀCalling get_network_suid(48255, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,533 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,533 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:54:29,546 [DEBUG] py4...: ǀǀOK[200], content: [47105,47541,46349,47949,48255]
2025-03-06 13:54:29,546 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [47105, 47541, 46349, 47949, 48255]
2025-03-06 13:54:29,546 [DEBUG] py4...: ǀReturning 'get_network_suid': 48255
2025-03-06 13:54:29,546 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml___Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,546 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml___Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,546 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml___Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 13:54:29,565 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml___Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:54:29,566 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:29,566 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:29,566 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:48255" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml___Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,566 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:48255', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml___Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 13:54:29,653 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml___Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"},
 "errors":[]
}
2025-03-06 13:54:29,653 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 13:54:29,653 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 13:54:29,653 [DEBUG] py4...: --------------------
2025-03-06 13:54:29,653 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_11.cys')
2025-03-06 13:54:29,653 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_11.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:29,653 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_11.cys'}
2025-03-06 13:54:41,092 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:54:41,094 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:54:41,094 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:54:41,094 [DEBUG] py4...: --------------------
2025-03-06 13:54:41,095 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:54:41,095 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,095 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:41,137 [DEBUG] py4...: ǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":57520},{"name":"Thiamine metabolism [bvu00730]","SUID":57860},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":58516},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":59190},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":58126}]
2025-03-06 13:54:41,137 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 57520}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 57860}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 58516}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 59190}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 58126}]
2025-03-06 13:54:41,137 [DEBUG] py4...: Returning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:54:41,137 [DEBUG] py4...: --------------------
2025-03-06 13:54:41,137 [DEBUG] py4...: Calling get_network_suid('Peptidoglycan biosynthesis [bvu00550]')
2025-03-06 13:54:41,137 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,137 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,137 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:41,154 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":57520},{"name":"Thiamine metabolism [bvu00730]","SUID":57860},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":58516},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":59190},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":58126}]
2025-03-06 13:54:41,155 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 57520}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 57860}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 58516}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 59190}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 58126}]
2025-03-06 13:54:41,155 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:54:41,155 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Peptidoglycan biosynthesis [bvu00550]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,155 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Peptidoglycan biosynthesis [bvu00550]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:54:41,204 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 57520
}
],
 "errors":[]
}
2025-03-06 13:54:41,204 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 57520}]
2025-03-06 13:54:41,204 [DEBUG] py4...: Returning 'get_network_suid': 57520
2025-03-06 13:54:41,204 [DEBUG] py4...: --------------------
2025-03-06 13:54:41,204 [DEBUG] py4...: Calling get_network_suid('Thiamine metabolism [bvu00730]')
2025-03-06 13:54:41,204 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,204 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,204 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:41,230 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":57520},{"name":"Thiamine metabolism [bvu00730]","SUID":57860},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":58516},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":59190},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":58126}]
2025-03-06 13:54:41,230 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 57520}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 57860}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 58516}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 59190}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 58126}]
2025-03-06 13:54:41,230 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:54:41,230 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Thiamine metabolism [bvu00730]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,230 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Thiamine metabolism [bvu00730]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:54:41,255 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 57860
}
],
 "errors":[]
}
2025-03-06 13:54:41,255 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 57860}]
2025-03-06 13:54:41,255 [DEBUG] py4...: Returning 'get_network_suid': 57860
2025-03-06 13:54:41,255 [DEBUG] py4...: --------------------
2025-03-06 13:54:41,255 [DEBUG] py4...: Calling get_network_suid('Biosynthesis of various nucleotide sugars [bvu00541]')
2025-03-06 13:54:41,255 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,255 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,255 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:41,283 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":57520},{"name":"Thiamine metabolism [bvu00730]","SUID":57860},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":58516},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":59190},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":58126}]
2025-03-06 13:54:41,283 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 57520}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 57860}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 58516}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 59190}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 58126}]
2025-03-06 13:54:41,283 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:54:41,283 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biosynthesis of various nucleotide sugars [bvu00541]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,283 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:54:41,299 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 58516
}
],
 "errors":[]
}
2025-03-06 13:54:41,299 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 58516}]
2025-03-06 13:54:41,300 [DEBUG] py4...: Returning 'get_network_suid': 58516
2025-03-06 13:54:41,300 [DEBUG] py4...: --------------------
2025-03-06 13:54:41,300 [DEBUG] py4...: Calling get_network_suid('Teichoic acid biosynthesis [bvu00552]')
2025-03-06 13:54:41,300 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,300 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,300 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:41,319 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":57520},{"name":"Thiamine metabolism [bvu00730]","SUID":57860},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":58516},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":59190},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":58126}]
2025-03-06 13:54:41,319 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 57520}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 57860}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 58516}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 59190}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 58126}]
2025-03-06 13:54:41,319 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:54:41,319 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Teichoic acid biosynthesis [bvu00552]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,319 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Teichoic acid biosynthesis [bvu00552]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:54:41,393 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 59190
}
],
 "errors":[]
}
2025-03-06 13:54:41,393 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 59190}]
2025-03-06 13:54:41,393 [DEBUG] py4...: Returning 'get_network_suid': 59190
2025-03-06 13:54:41,393 [DEBUG] py4...: --------------------
2025-03-06 13:54:41,393 [DEBUG] py4...: Calling get_network_suid('Exopolysaccharide biosynthesis [bvu00543]')
2025-03-06 13:54:41,393 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,393 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,393 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:54:41,420 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":57520},{"name":"Thiamine metabolism [bvu00730]","SUID":57860},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":58516},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":59190},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":58126}]
2025-03-06 13:54:41,420 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 57520}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 57860}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 58516}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 59190}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 58126}]
2025-03-06 13:54:41,420 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:54:41,420 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Exopolysaccharide biosynthesis [bvu00543]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,420 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Exopolysaccharide biosynthesis [bvu00543]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:54:41,433 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 58126
}
],
 "errors":[]
}
2025-03-06 13:54:41,433 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 58126}]
2025-03-06 13:54:41,433 [DEBUG] py4...: Returning 'get_network_suid': 58126
2025-03-06 13:54:41,433 [DEBUG] py4...: --------------------
2025-03-06 13:54:41,433 [DEBUG] py4...: Calling export_network('networks_graphml___Peptidoglycan biosynthesis [bvu00550].graphml', 'graphml', network=57520)
2025-03-06 13:54:41,433 [DEBUG] py4...: ǀCalling get_network_suid(57520, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,433 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,433 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:54:41,446 [DEBUG] py4...: ǀǀOK[200], content: [57520,57860,58516,59190,58126]
2025-03-06 13:54:41,447 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [57520, 57860, 58516, 59190, 58126]
2025-03-06 13:54:41,447 [DEBUG] py4...: ǀReturning 'get_network_suid': 57520
2025-03-06 13:54:41,447 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml___Peptidoglycan biosynthesis [bvu00550].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,447 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml___Peptidoglycan biosynthesis [bvu00550].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,447 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml___Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 13:54:41,466 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml___Peptidoglycan biosynthesis [bvu00550].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:54:41,466 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Peptidoglycan biosynthesis [bvu00550].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:41,466 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Peptidoglycan biosynthesis [bvu00550].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:41,466 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:57520" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml___Peptidoglycan biosynthesis [bvu00550].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,466 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:57520', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml___Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 13:54:41,492 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml___Peptidoglycan biosynthesis [bvu00550].graphml"},
 "errors":[]
}
2025-03-06 13:54:41,492 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 13:54:41,492 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 13:54:41,492 [DEBUG] py4...: --------------------
2025-03-06 13:54:41,492 [DEBUG] py4...: Calling export_network('networks_graphml___Thiamine metabolism [bvu00730].graphml', 'graphml', network=57860)
2025-03-06 13:54:41,492 [DEBUG] py4...: ǀCalling get_network_suid(57860, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,492 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,492 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:54:41,508 [DEBUG] py4...: ǀǀOK[200], content: [57520,57860,58516,59190,58126]
2025-03-06 13:54:41,508 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [57520, 57860, 58516, 59190, 58126]
2025-03-06 13:54:41,508 [DEBUG] py4...: ǀReturning 'get_network_suid': 57860
2025-03-06 13:54:41,508 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml___Thiamine metabolism [bvu00730].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,508 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml___Thiamine metabolism [bvu00730].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,508 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml___Thiamine metabolism [bvu00730].graphml'}
2025-03-06 13:54:41,525 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml___Thiamine metabolism [bvu00730].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:54:41,525 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Thiamine metabolism [bvu00730].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:41,525 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Thiamine metabolism [bvu00730].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:41,525 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:57860" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml___Thiamine metabolism [bvu00730].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,525 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:57860', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml___Thiamine metabolism [bvu00730].graphml'}
2025-03-06 13:54:41,546 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml___Thiamine metabolism [bvu00730].graphml"},
 "errors":[]
}
2025-03-06 13:54:41,546 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Thiamine metabolism [bvu00730].graphml'}
2025-03-06 13:54:41,546 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Thiamine metabolism [bvu00730].graphml'}
2025-03-06 13:54:41,546 [DEBUG] py4...: --------------------
2025-03-06 13:54:41,546 [DEBUG] py4...: Calling export_network('networks_graphml___Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'graphml', network=58516)
2025-03-06 13:54:41,546 [DEBUG] py4...: ǀCalling get_network_suid(58516, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,546 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,546 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:54:41,554 [DEBUG] py4...: ǀǀOK[200], content: [57520,57860,58516,59190,58126]
2025-03-06 13:54:41,554 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [57520, 57860, 58516, 59190, 58126]
2025-03-06 13:54:41,554 [DEBUG] py4...: ǀReturning 'get_network_suid': 58516
2025-03-06 13:54:41,554 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml___Biosynthesis of various nucleotide sugars [bvu00541].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,554 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml___Biosynthesis of various nucleotide sugars [bvu00541].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,554 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml___Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 13:54:41,566 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml___Biosynthesis of various nucleotide sugars [bvu00541].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:54:41,566 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:41,566 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:41,566 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:58516" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml___Biosynthesis of various nucleotide sugars [bvu00541].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,566 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:58516', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml___Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 13:54:41,627 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml___Biosynthesis of various nucleotide sugars [bvu00541].graphml"},
 "errors":[]
}
2025-03-06 13:54:41,627 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 13:54:41,628 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 13:54:41,628 [DEBUG] py4...: --------------------
2025-03-06 13:54:41,628 [DEBUG] py4...: Calling export_network('networks_graphml___Teichoic acid biosynthesis [bvu00552].graphml', 'graphml', network=59190)
2025-03-06 13:54:41,628 [DEBUG] py4...: ǀCalling get_network_suid(59190, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,628 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,628 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:54:41,641 [DEBUG] py4...: ǀǀOK[200], content: [57520,57860,58516,59190,58126]
2025-03-06 13:54:41,641 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [57520, 57860, 58516, 59190, 58126]
2025-03-06 13:54:41,641 [DEBUG] py4...: ǀReturning 'get_network_suid': 59190
2025-03-06 13:54:41,641 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml___Teichoic acid biosynthesis [bvu00552].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,641 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml___Teichoic acid biosynthesis [bvu00552].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,641 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml___Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 13:54:41,653 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml___Teichoic acid biosynthesis [bvu00552].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:54:41,653 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Teichoic acid biosynthesis [bvu00552].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:41,653 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Teichoic acid biosynthesis [bvu00552].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:41,653 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:59190" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml___Teichoic acid biosynthesis [bvu00552].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,654 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:59190', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml___Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 13:54:41,703 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml___Teichoic acid biosynthesis [bvu00552].graphml"},
 "errors":[]
}
2025-03-06 13:54:41,703 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 13:54:41,703 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 13:54:41,703 [DEBUG] py4...: --------------------
2025-03-06 13:54:41,703 [DEBUG] py4...: Calling export_network('networks_graphml___Exopolysaccharide biosynthesis [bvu00543].graphml', 'graphml', network=58126)
2025-03-06 13:54:41,703 [DEBUG] py4...: ǀCalling get_network_suid(58126, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,703 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,703 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:54:41,711 [DEBUG] py4...: ǀǀOK[200], content: [57520,57860,58516,59190,58126]
2025-03-06 13:54:41,711 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [57520, 57860, 58516, 59190, 58126]
2025-03-06 13:54:41,711 [DEBUG] py4...: ǀReturning 'get_network_suid': 58126
2025-03-06 13:54:41,711 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml___Exopolysaccharide biosynthesis [bvu00543].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,711 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml___Exopolysaccharide biosynthesis [bvu00543].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,711 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml___Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 13:54:41,719 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml___Exopolysaccharide biosynthesis [bvu00543].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:54:41,719 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Exopolysaccharide biosynthesis [bvu00543].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:41,719 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml___Exopolysaccharide biosynthesis [bvu00543].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:54:41,719 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:58126" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml___Exopolysaccharide biosynthesis [bvu00543].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,719 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:58126', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml___Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 13:54:41,762 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml___Exopolysaccharide biosynthesis [bvu00543].graphml"},
 "errors":[]
}
2025-03-06 13:54:41,762 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 13:54:41,762 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml___Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 13:54:41,762 [DEBUG] py4...: --------------------
2025-03-06 13:54:41,762 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_10.cys')
2025-03-06 13:54:41,762 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:54:41,763 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys'}
2025-03-06 13:55:23,375 [DEBUG] py4...: --------------------
2025-03-06 13:56:39,762 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_12.cys')
2025-03-06 13:56:39,762 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_12.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:56:39,762 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 13:56:40,752 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 13:56:40,753 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_12.cys'}
2025-03-06 13:57:44,478 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:57:44,479 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:57:44,479 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:57:44,480 [DEBUG] py4...: --------------------
2025-03-06 13:57:44,480 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:57:44,480 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,480 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:57:44,494 [DEBUG] py4...: ǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":76439},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":77143},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":76649},{"name":"Biotin metabolism [bvu00780]","SUID":77529},{"name":"Riboflavin metabolism [bvu00740]","SUID":76909}]
2025-03-06 13:57:44,495 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 76439}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 77143}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 76649}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 77529}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 76909}]
2025-03-06 13:57:44,495 [DEBUG] py4...: Returning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:57:44,495 [DEBUG] py4...: --------------------
2025-03-06 13:57:44,495 [DEBUG] py4...: Calling get_network_suid('Vitamin B6 metabolism [bvu00750]')
2025-03-06 13:57:44,495 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,495 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,496 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:57:44,505 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":76439},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":77143},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":76649},{"name":"Biotin metabolism [bvu00780]","SUID":77529},{"name":"Riboflavin metabolism [bvu00740]","SUID":76909}]
2025-03-06 13:57:44,505 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 76439}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 77143}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 76649}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 77529}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 76909}]
2025-03-06 13:57:44,505 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:57:44,505 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Vitamin B6 metabolism [bvu00750]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,505 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Vitamin B6 metabolism [bvu00750]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:57:44,571 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 76439
}
],
 "errors":[]
}
2025-03-06 13:57:44,571 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 76439}]
2025-03-06 13:57:44,571 [DEBUG] py4...: Returning 'get_network_suid': 76439
2025-03-06 13:57:44,571 [DEBUG] py4...: --------------------
2025-03-06 13:57:44,571 [DEBUG] py4...: Calling get_network_suid('Nicotinate and nicotinamide metabolism [bvu00760]')
2025-03-06 13:57:44,571 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,571 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,572 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:57:44,585 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":76439},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":77143},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":76649},{"name":"Biotin metabolism [bvu00780]","SUID":77529},{"name":"Riboflavin metabolism [bvu00740]","SUID":76909}]
2025-03-06 13:57:44,585 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 76439}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 77143}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 76649}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 77529}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 76909}]
2025-03-06 13:57:44,585 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:57:44,585 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Nicotinate and nicotinamide metabolism [bvu00760]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,585 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:57:44,603 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 77143
}
],
 "errors":[]
}
2025-03-06 13:57:44,603 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 77143}]
2025-03-06 13:57:44,603 [DEBUG] py4...: Returning 'get_network_suid': 77143
2025-03-06 13:57:44,603 [DEBUG] py4...: --------------------
2025-03-06 13:57:44,603 [DEBUG] py4...: Calling get_network_suid('Pantothenate and CoA biosynthesis [bvu00770]')
2025-03-06 13:57:44,603 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,603 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,604 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:57:44,619 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":76439},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":77143},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":76649},{"name":"Biotin metabolism [bvu00780]","SUID":77529},{"name":"Riboflavin metabolism [bvu00740]","SUID":76909}]
2025-03-06 13:57:44,619 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 76439}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 77143}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 76649}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 77529}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 76909}]
2025-03-06 13:57:44,619 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:57:44,619 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pantothenate and CoA biosynthesis [bvu00770]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,619 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pantothenate and CoA biosynthesis [bvu00770]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:57:44,645 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 76649
}
],
 "errors":[]
}
2025-03-06 13:57:44,645 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 76649}]
2025-03-06 13:57:44,645 [DEBUG] py4...: Returning 'get_network_suid': 76649
2025-03-06 13:57:44,645 [DEBUG] py4...: --------------------
2025-03-06 13:57:44,645 [DEBUG] py4...: Calling get_network_suid('Biotin metabolism [bvu00780]')
2025-03-06 13:57:44,645 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,645 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,645 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:57:44,654 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":76439},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":77143},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":76649},{"name":"Biotin metabolism [bvu00780]","SUID":77529},{"name":"Riboflavin metabolism [bvu00740]","SUID":76909}]
2025-03-06 13:57:44,654 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 76439}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 77143}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 76649}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 77529}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 76909}]
2025-03-06 13:57:44,654 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:57:44,654 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biotin metabolism [bvu00780]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,654 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biotin metabolism [bvu00780]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:57:44,670 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 77529
}
],
 "errors":[]
}
2025-03-06 13:57:44,670 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 77529}]
2025-03-06 13:57:44,670 [DEBUG] py4...: Returning 'get_network_suid': 77529
2025-03-06 13:57:44,670 [DEBUG] py4...: --------------------
2025-03-06 13:57:44,670 [DEBUG] py4...: Calling get_network_suid('Riboflavin metabolism [bvu00740]')
2025-03-06 13:57:44,670 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,670 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,670 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:57:44,688 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":76439},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":77143},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":76649},{"name":"Biotin metabolism [bvu00780]","SUID":77529},{"name":"Riboflavin metabolism [bvu00740]","SUID":76909}]
2025-03-06 13:57:44,688 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 76439}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 77143}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 76649}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 77529}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 76909}]
2025-03-06 13:57:44,688 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:57:44,688 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Riboflavin metabolism [bvu00740]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,688 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Riboflavin metabolism [bvu00740]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:57:44,725 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 76909
}
],
 "errors":[]
}
2025-03-06 13:57:44,725 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 76909}]
2025-03-06 13:57:44,725 [DEBUG] py4...: Returning 'get_network_suid': 76909
2025-03-06 13:57:44,725 [DEBUG] py4...: --------------------
2025-03-06 13:57:44,725 [DEBUG] py4...: Calling export_network('networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'graphml', network=76439)
2025-03-06 13:57:44,725 [DEBUG] py4...: ǀCalling get_network_suid(76439, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,725 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,725 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:57:44,759 [DEBUG] py4...: ǀǀOK[200], content: [76439,77143,76649,77529,76909]
2025-03-06 13:57:44,759 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [76439, 77143, 76649, 77529, 76909]
2025-03-06 13:57:44,759 [DEBUG] py4...: ǀReturning 'get_network_suid': 76439
2025-03-06 13:57:44,760 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,760 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,760 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 13:57:44,801 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:57:44,802 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:44,802 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:44,802 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:76439" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,802 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:76439', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 13:57:44,862 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml"},
 "errors":[]
}
2025-03-06 13:57:44,863 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 13:57:44,863 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 13:57:44,863 [DEBUG] py4...: --------------------
2025-03-06 13:57:44,863 [DEBUG] py4...: Calling export_network('networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'graphml', network=77143)
2025-03-06 13:57:44,863 [DEBUG] py4...: ǀCalling get_network_suid(77143, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,863 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,863 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:57:44,870 [DEBUG] py4...: ǀǀOK[200], content: [76439,77143,76649,77529,76909]
2025-03-06 13:57:44,870 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [76439, 77143, 76649, 77529, 76909]
2025-03-06 13:57:44,870 [DEBUG] py4...: ǀReturning 'get_network_suid': 77143
2025-03-06 13:57:44,871 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,871 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,871 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 13:57:44,886 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:57:44,887 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:44,887 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:44,887 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:77143" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,888 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:77143', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 13:57:44,932 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml"},
 "errors":[]
}
2025-03-06 13:57:44,932 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 13:57:44,932 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 13:57:44,933 [DEBUG] py4...: --------------------
2025-03-06 13:57:44,933 [DEBUG] py4...: Calling export_network('networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'graphml', network=76649)
2025-03-06 13:57:44,933 [DEBUG] py4...: ǀCalling get_network_suid(76649, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,933 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,933 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:57:44,944 [DEBUG] py4...: ǀǀOK[200], content: [76439,77143,76649,77529,76909]
2025-03-06 13:57:44,944 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [76439, 77143, 76649, 77529, 76909]
2025-03-06 13:57:44,944 [DEBUG] py4...: ǀReturning 'get_network_suid': 76649
2025-03-06 13:57:44,945 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,945 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,945 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 13:57:44,956 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:57:44,956 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:44,956 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:44,956 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:76649" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,956 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:76649', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 13:57:44,983 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml"},
 "errors":[]
}
2025-03-06 13:57:44,983 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 13:57:44,983 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 13:57:44,983 [DEBUG] py4...: --------------------
2025-03-06 13:57:44,983 [DEBUG] py4...: Calling export_network('networks_graphml/Biotin metabolism [bvu00780].graphml', 'graphml', network=77529)
2025-03-06 13:57:44,983 [DEBUG] py4...: ǀCalling get_network_suid(77529, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,984 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,984 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:57:44,992 [DEBUG] py4...: ǀǀOK[200], content: [76439,77143,76649,77529,76909]
2025-03-06 13:57:44,993 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [76439, 77143, 76649, 77529, 76909]
2025-03-06 13:57:44,993 [DEBUG] py4...: ǀReturning 'get_network_suid': 77529
2025-03-06 13:57:44,993 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Biotin metabolism [bvu00780].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,993 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:44,993 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 13:57:45,005 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:57:45,006 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:45,006 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:45,006 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:77529" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:45,006 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:77529', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 13:57:45,043 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml"},
 "errors":[]
}
2025-03-06 13:57:45,043 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 13:57:45,044 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 13:57:45,044 [DEBUG] py4...: --------------------
2025-03-06 13:57:45,044 [DEBUG] py4...: Calling export_network('networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'graphml', network=76909)
2025-03-06 13:57:45,044 [DEBUG] py4...: ǀCalling get_network_suid(76909, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:45,044 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:45,044 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:57:45,058 [DEBUG] py4...: ǀǀOK[200], content: [76439,77143,76649,77529,76909]
2025-03-06 13:57:45,058 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [76439, 77143, 76649, 77529, 76909]
2025-03-06 13:57:45,058 [DEBUG] py4...: ǀReturning 'get_network_suid': 76909
2025-03-06 13:57:45,058 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Riboflavin metabolism [bvu00740].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:45,058 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:45,058 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 13:57:45,069 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:57:45,069 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:45,069 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:45,069 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:76909" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:45,069 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:76909', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 13:57:45,087 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml"},
 "errors":[]
}
2025-03-06 13:57:45,087 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 13:57:45,087 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 13:57:45,087 [DEBUG] py4...: --------------------
2025-03-06 13:57:45,087 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_13.cys')
2025-03-06 13:57:45,087 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_13.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:45,087 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_13.cys'}
2025-03-06 13:57:51,786 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:57:51,787 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:57:51,787 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:57:51,787 [DEBUG] py4...: --------------------
2025-03-06 13:57:51,787 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:57:51,787 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:51,787 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:57:51,834 [DEBUG] py4...: ǀOK[200], content: [{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":84864},{"name":"Folate biosynthesis [bvu00790]","SUID":83714},{"name":"One carbon pool by folate [bvu00670]","SUID":84150},{"name":"Porphyrin metabolism [bvu00860]","SUID":82958},{"name":"Lipoic acid metabolism [bvu00785]","SUID":84558}]
2025-03-06 13:57:51,834 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 84864}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 83714}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 84150}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 82958}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 84558}]
2025-03-06 13:57:51,835 [DEBUG] py4...: Returning 'get_network_list': ['Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]']
2025-03-06 13:57:51,835 [DEBUG] py4...: --------------------
2025-03-06 13:57:51,835 [DEBUG] py4...: Calling get_network_suid('Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]')
2025-03-06 13:57:51,835 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:51,835 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:51,835 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:57:51,851 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":84864},{"name":"Folate biosynthesis [bvu00790]","SUID":83714},{"name":"One carbon pool by folate [bvu00670]","SUID":84150},{"name":"Porphyrin metabolism [bvu00860]","SUID":82958},{"name":"Lipoic acid metabolism [bvu00785]","SUID":84558}]
2025-03-06 13:57:51,851 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 84864}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 83714}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 84150}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 82958}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 84558}]
2025-03-06 13:57:51,851 [DEBUG] py4...: ǀReturning 'get_network_list': ['Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]']
2025-03-06 13:57:51,851 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:51,851 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:57:51,881 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 84864
}
],
 "errors":[]
}
2025-03-06 13:57:51,881 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 84864}]
2025-03-06 13:57:51,881 [DEBUG] py4...: Returning 'get_network_suid': 84864
2025-03-06 13:57:51,881 [DEBUG] py4...: --------------------
2025-03-06 13:57:51,881 [DEBUG] py4...: Calling get_network_suid('Folate biosynthesis [bvu00790]')
2025-03-06 13:57:51,882 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:51,882 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:51,882 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:57:51,910 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":84864},{"name":"Folate biosynthesis [bvu00790]","SUID":83714},{"name":"One carbon pool by folate [bvu00670]","SUID":84150},{"name":"Porphyrin metabolism [bvu00860]","SUID":82958},{"name":"Lipoic acid metabolism [bvu00785]","SUID":84558}]
2025-03-06 13:57:51,910 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 84864}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 83714}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 84150}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 82958}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 84558}]
2025-03-06 13:57:51,910 [DEBUG] py4...: ǀReturning 'get_network_list': ['Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]']
2025-03-06 13:57:51,910 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Folate biosynthesis [bvu00790]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:51,910 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Folate biosynthesis [bvu00790]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:57:51,935 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 83714
}
],
 "errors":[]
}
2025-03-06 13:57:51,936 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 83714}]
2025-03-06 13:57:51,936 [DEBUG] py4...: Returning 'get_network_suid': 83714
2025-03-06 13:57:51,936 [DEBUG] py4...: --------------------
2025-03-06 13:57:51,936 [DEBUG] py4...: Calling get_network_suid('One carbon pool by folate [bvu00670]')
2025-03-06 13:57:51,936 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:51,936 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:51,936 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:57:51,965 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":84864},{"name":"Folate biosynthesis [bvu00790]","SUID":83714},{"name":"One carbon pool by folate [bvu00670]","SUID":84150},{"name":"Porphyrin metabolism [bvu00860]","SUID":82958},{"name":"Lipoic acid metabolism [bvu00785]","SUID":84558}]
2025-03-06 13:57:51,965 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 84864}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 83714}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 84150}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 82958}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 84558}]
2025-03-06 13:57:51,966 [DEBUG] py4...: ǀReturning 'get_network_list': ['Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]']
2025-03-06 13:57:51,966 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="One carbon pool by folate [bvu00670]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:51,966 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'One carbon pool by folate [bvu00670]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:57:52,001 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 84150
}
],
 "errors":[]
}
2025-03-06 13:57:52,002 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 84150}]
2025-03-06 13:57:52,002 [DEBUG] py4...: Returning 'get_network_suid': 84150
2025-03-06 13:57:52,002 [DEBUG] py4...: --------------------
2025-03-06 13:57:52,002 [DEBUG] py4...: Calling get_network_suid('Porphyrin metabolism [bvu00860]')
2025-03-06 13:57:52,002 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,002 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,002 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:57:52,019 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":84864},{"name":"Folate biosynthesis [bvu00790]","SUID":83714},{"name":"One carbon pool by folate [bvu00670]","SUID":84150},{"name":"Porphyrin metabolism [bvu00860]","SUID":82958},{"name":"Lipoic acid metabolism [bvu00785]","SUID":84558}]
2025-03-06 13:57:52,022 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 84864}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 83714}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 84150}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 82958}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 84558}]
2025-03-06 13:57:52,022 [DEBUG] py4...: ǀReturning 'get_network_list': ['Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]']
2025-03-06 13:57:52,022 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Porphyrin metabolism [bvu00860]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,022 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Porphyrin metabolism [bvu00860]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:57:52,036 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 82958
}
],
 "errors":[]
}
2025-03-06 13:57:52,037 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 82958}]
2025-03-06 13:57:52,037 [DEBUG] py4...: Returning 'get_network_suid': 82958
2025-03-06 13:57:52,039 [DEBUG] py4...: --------------------
2025-03-06 13:57:52,039 [DEBUG] py4...: Calling get_network_suid('Lipoic acid metabolism [bvu00785]')
2025-03-06 13:57:52,039 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,039 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,039 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:57:52,057 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":84864},{"name":"Folate biosynthesis [bvu00790]","SUID":83714},{"name":"One carbon pool by folate [bvu00670]","SUID":84150},{"name":"Porphyrin metabolism [bvu00860]","SUID":82958},{"name":"Lipoic acid metabolism [bvu00785]","SUID":84558}]
2025-03-06 13:57:52,058 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 84864}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 83714}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 84150}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 82958}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 84558}]
2025-03-06 13:57:52,058 [DEBUG] py4...: ǀReturning 'get_network_list': ['Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]']
2025-03-06 13:57:52,058 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Lipoic acid metabolism [bvu00785]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,058 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Lipoic acid metabolism [bvu00785]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:57:52,079 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 84558
}
],
 "errors":[]
}
2025-03-06 13:57:52,080 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 84558}]
2025-03-06 13:57:52,080 [DEBUG] py4...: Returning 'get_network_suid': 84558
2025-03-06 13:57:52,080 [DEBUG] py4...: --------------------
2025-03-06 13:57:52,081 [DEBUG] py4...: Calling export_network('networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'graphml', network=84864)
2025-03-06 13:57:52,083 [DEBUG] py4...: ǀCalling get_network_suid(84864, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,083 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,083 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:57:52,099 [DEBUG] py4...: ǀǀOK[200], content: [84864,83714,84150,82958,84558]
2025-03-06 13:57:52,100 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [84864, 83714, 84150, 82958, 84558]
2025-03-06 13:57:52,100 [DEBUG] py4...: ǀReturning 'get_network_suid': 84864
2025-03-06 13:57:52,100 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,100 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,100 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 13:57:52,123 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:57:52,124 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:52,124 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:52,124 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:84864" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,124 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:84864', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 13:57:52,167 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"},
 "errors":[]
}
2025-03-06 13:57:52,167 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 13:57:52,167 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 13:57:52,167 [DEBUG] py4...: --------------------
2025-03-06 13:57:52,167 [DEBUG] py4...: Calling export_network('networks_graphml/Folate biosynthesis [bvu00790].graphml', 'graphml', network=83714)
2025-03-06 13:57:52,167 [DEBUG] py4...: ǀCalling get_network_suid(83714, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,168 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,168 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:57:52,176 [DEBUG] py4...: ǀǀOK[200], content: [84864,83714,84150,82958,84558]
2025-03-06 13:57:52,176 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [84864, 83714, 84150, 82958, 84558]
2025-03-06 13:57:52,177 [DEBUG] py4...: ǀReturning 'get_network_suid': 83714
2025-03-06 13:57:52,177 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Folate biosynthesis [bvu00790].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,177 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,177 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 13:57:52,193 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:57:52,194 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:52,194 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:52,194 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:83714" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,194 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:83714', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 13:57:52,225 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml"},
 "errors":[]
}
2025-03-06 13:57:52,225 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 13:57:52,225 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 13:57:52,226 [DEBUG] py4...: --------------------
2025-03-06 13:57:52,226 [DEBUG] py4...: Calling export_network('networks_graphml/One carbon pool by folate [bvu00670].graphml', 'graphml', network=84150)
2025-03-06 13:57:52,226 [DEBUG] py4...: ǀCalling get_network_suid(84150, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,226 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,226 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:57:52,235 [DEBUG] py4...: ǀǀOK[200], content: [84864,83714,84150,82958,84558]
2025-03-06 13:57:52,235 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [84864, 83714, 84150, 82958, 84558]
2025-03-06 13:57:52,236 [DEBUG] py4...: ǀReturning 'get_network_suid': 84150
2025-03-06 13:57:52,236 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/One carbon pool by folate [bvu00670].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,236 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,236 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 13:57:52,248 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:57:52,248 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:52,248 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:52,248 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:84150" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,248 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:84150', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 13:57:52,279 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml"},
 "errors":[]
}
2025-03-06 13:57:52,279 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 13:57:52,279 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 13:57:52,279 [DEBUG] py4...: --------------------
2025-03-06 13:57:52,279 [DEBUG] py4...: Calling export_network('networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'graphml', network=82958)
2025-03-06 13:57:52,279 [DEBUG] py4...: ǀCalling get_network_suid(82958, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,279 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,279 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:57:52,291 [DEBUG] py4...: ǀǀOK[200], content: [84864,83714,84150,82958,84558]
2025-03-06 13:57:52,291 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [84864, 83714, 84150, 82958, 84558]
2025-03-06 13:57:52,291 [DEBUG] py4...: ǀReturning 'get_network_suid': 82958
2025-03-06 13:57:52,291 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Porphyrin metabolism [bvu00860].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,291 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,291 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 13:57:52,324 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:57:52,324 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:52,325 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:52,325 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:82958" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,325 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:82958', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 13:57:52,353 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml"},
 "errors":[]
}
2025-03-06 13:57:52,353 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 13:57:52,353 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 13:57:52,353 [DEBUG] py4...: --------------------
2025-03-06 13:57:52,353 [DEBUG] py4...: Calling export_network('networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'graphml', network=84558)
2025-03-06 13:57:52,353 [DEBUG] py4...: ǀCalling get_network_suid(84558, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,354 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,354 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:57:52,362 [DEBUG] py4...: ǀǀOK[200], content: [84864,83714,84150,82958,84558]
2025-03-06 13:57:52,364 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [84864, 83714, 84150, 82958, 84558]
2025-03-06 13:57:52,364 [DEBUG] py4...: ǀReturning 'get_network_suid': 84558
2025-03-06 13:57:52,364 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Lipoic acid metabolism [bvu00785].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,364 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,364 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 13:57:52,375 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:57:52,376 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:52,376 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:57:52,376 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:84558" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,376 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:84558', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 13:57:52,440 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml"},
 "errors":[]
}
2025-03-06 13:57:52,440 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 13:57:52,440 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 13:57:52,440 [DEBUG] py4...: --------------------
2025-03-06 13:57:52,441 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_11.cys')
2025-03-06 13:57:52,441 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_11.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:57:52,441 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_11.cys'}
2025-03-06 13:58:00,401 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:58:00,402 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:58:00,402 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:58:00,403 [DEBUG] py4...: --------------------
2025-03-06 13:58:00,403 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:58:00,403 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,403 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:00,424 [DEBUG] py4...: ǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":94129},{"name":"Thiamine metabolism [bvu00730]","SUID":94469},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":95125},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":95799},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":94735}]
2025-03-06 13:58:00,424 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 94129}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 94469}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 95125}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 95799}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 94735}]
2025-03-06 13:58:00,424 [DEBUG] py4...: Returning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:58:00,424 [DEBUG] py4...: --------------------
2025-03-06 13:58:00,424 [DEBUG] py4...: Calling get_network_suid('Peptidoglycan biosynthesis [bvu00550]')
2025-03-06 13:58:00,424 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,424 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,424 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:00,434 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":94129},{"name":"Thiamine metabolism [bvu00730]","SUID":94469},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":95125},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":95799},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":94735}]
2025-03-06 13:58:00,434 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 94129}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 94469}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 95125}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 95799}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 94735}]
2025-03-06 13:58:00,435 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:58:00,435 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Peptidoglycan biosynthesis [bvu00550]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,435 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Peptidoglycan biosynthesis [bvu00550]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:00,462 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 94129
}
],
 "errors":[]
}
2025-03-06 13:58:00,463 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 94129}]
2025-03-06 13:58:00,463 [DEBUG] py4...: Returning 'get_network_suid': 94129
2025-03-06 13:58:00,463 [DEBUG] py4...: --------------------
2025-03-06 13:58:00,463 [DEBUG] py4...: Calling get_network_suid('Thiamine metabolism [bvu00730]')
2025-03-06 13:58:00,463 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,463 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,463 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:00,478 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":94129},{"name":"Thiamine metabolism [bvu00730]","SUID":94469},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":95125},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":95799},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":94735}]
2025-03-06 13:58:00,478 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 94129}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 94469}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 95125}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 95799}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 94735}]
2025-03-06 13:58:00,478 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:58:00,478 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Thiamine metabolism [bvu00730]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,478 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Thiamine metabolism [bvu00730]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:00,499 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 94469
}
],
 "errors":[]
}
2025-03-06 13:58:00,499 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 94469}]
2025-03-06 13:58:00,499 [DEBUG] py4...: Returning 'get_network_suid': 94469
2025-03-06 13:58:00,499 [DEBUG] py4...: --------------------
2025-03-06 13:58:00,499 [DEBUG] py4...: Calling get_network_suid('Biosynthesis of various nucleotide sugars [bvu00541]')
2025-03-06 13:58:00,499 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,499 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,499 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:00,507 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":94129},{"name":"Thiamine metabolism [bvu00730]","SUID":94469},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":95125},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":95799},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":94735}]
2025-03-06 13:58:00,507 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 94129}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 94469}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 95125}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 95799}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 94735}]
2025-03-06 13:58:00,508 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:58:00,508 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biosynthesis of various nucleotide sugars [bvu00541]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,508 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:00,527 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 95125
}
],
 "errors":[]
}
2025-03-06 13:58:00,527 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 95125}]
2025-03-06 13:58:00,528 [DEBUG] py4...: Returning 'get_network_suid': 95125
2025-03-06 13:58:00,528 [DEBUG] py4...: --------------------
2025-03-06 13:58:00,528 [DEBUG] py4...: Calling get_network_suid('Teichoic acid biosynthesis [bvu00552]')
2025-03-06 13:58:00,528 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,528 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,528 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:00,539 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":94129},{"name":"Thiamine metabolism [bvu00730]","SUID":94469},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":95125},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":95799},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":94735}]
2025-03-06 13:58:00,539 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 94129}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 94469}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 95125}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 95799}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 94735}]
2025-03-06 13:58:00,539 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:58:00,539 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Teichoic acid biosynthesis [bvu00552]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,539 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Teichoic acid biosynthesis [bvu00552]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:00,552 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 95799
}
],
 "errors":[]
}
2025-03-06 13:58:00,552 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 95799}]
2025-03-06 13:58:00,552 [DEBUG] py4...: Returning 'get_network_suid': 95799
2025-03-06 13:58:00,552 [DEBUG] py4...: --------------------
2025-03-06 13:58:00,552 [DEBUG] py4...: Calling get_network_suid('Exopolysaccharide biosynthesis [bvu00543]')
2025-03-06 13:58:00,552 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,552 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,552 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:00,565 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":94129},{"name":"Thiamine metabolism [bvu00730]","SUID":94469},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":95125},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":95799},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":94735}]
2025-03-06 13:58:00,565 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 94129}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 94469}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 95125}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 95799}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 94735}]
2025-03-06 13:58:00,565 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:58:00,565 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Exopolysaccharide biosynthesis [bvu00543]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,565 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Exopolysaccharide biosynthesis [bvu00543]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:00,601 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 94735
}
],
 "errors":[]
}
2025-03-06 13:58:00,601 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 94735}]
2025-03-06 13:58:00,601 [DEBUG] py4...: Returning 'get_network_suid': 94735
2025-03-06 13:58:00,601 [DEBUG] py4...: --------------------
2025-03-06 13:58:00,601 [DEBUG] py4...: Calling export_network('networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'graphml', network=94129)
2025-03-06 13:58:00,601 [DEBUG] py4...: ǀCalling get_network_suid(94129, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,601 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,601 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:00,633 [DEBUG] py4...: ǀǀOK[200], content: [94129,94469,95125,95799,94735]
2025-03-06 13:58:00,633 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [94129, 94469, 95125, 95799, 94735]
2025-03-06 13:58:00,633 [DEBUG] py4...: ǀReturning 'get_network_suid': 94129
2025-03-06 13:58:00,633 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,634 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,634 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 13:58:00,650 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:58:00,651 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:00,651 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:00,651 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:94129" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,651 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:94129', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 13:58:00,701 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml"},
 "errors":[]
}
2025-03-06 13:58:00,702 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 13:58:00,703 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 13:58:00,703 [DEBUG] py4...: --------------------
2025-03-06 13:58:00,703 [DEBUG] py4...: Calling export_network('networks_graphml/Thiamine metabolism [bvu00730].graphml', 'graphml', network=94469)
2025-03-06 13:58:00,703 [DEBUG] py4...: ǀCalling get_network_suid(94469, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,703 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,703 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:00,718 [DEBUG] py4...: ǀǀOK[200], content: [94129,94469,95125,95799,94735]
2025-03-06 13:58:00,719 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [94129, 94469, 95125, 95799, 94735]
2025-03-06 13:58:00,719 [DEBUG] py4...: ǀReturning 'get_network_suid': 94469
2025-03-06 13:58:00,719 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Thiamine metabolism [bvu00730].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,719 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,719 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 13:58:00,736 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:58:00,737 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:00,737 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:00,737 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:94469" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,737 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:94469', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 13:58:00,786 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml"},
 "errors":[]
}
2025-03-06 13:58:00,786 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 13:58:00,786 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 13:58:00,786 [DEBUG] py4...: --------------------
2025-03-06 13:58:00,786 [DEBUG] py4...: Calling export_network('networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'graphml', network=95125)
2025-03-06 13:58:00,786 [DEBUG] py4...: ǀCalling get_network_suid(95125, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,786 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,787 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:00,803 [DEBUG] py4...: ǀǀOK[200], content: [94129,94469,95125,95799,94735]
2025-03-06 13:58:00,803 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [94129, 94469, 95125, 95799, 94735]
2025-03-06 13:58:00,803 [DEBUG] py4...: ǀReturning 'get_network_suid': 95125
2025-03-06 13:58:00,804 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,804 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,804 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 13:58:00,817 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:58:00,817 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:00,817 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:00,817 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:95125" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,818 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:95125', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 13:58:00,843 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml"},
 "errors":[]
}
2025-03-06 13:58:00,843 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 13:58:00,844 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 13:58:00,844 [DEBUG] py4...: --------------------
2025-03-06 13:58:00,844 [DEBUG] py4...: Calling export_network('networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'graphml', network=95799)
2025-03-06 13:58:00,844 [DEBUG] py4...: ǀCalling get_network_suid(95799, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,844 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,844 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:00,854 [DEBUG] py4...: ǀǀOK[200], content: [94129,94469,95125,95799,94735]
2025-03-06 13:58:00,854 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [94129, 94469, 95125, 95799, 94735]
2025-03-06 13:58:00,854 [DEBUG] py4...: ǀReturning 'get_network_suid': 95799
2025-03-06 13:58:00,854 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,854 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,855 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 13:58:00,870 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:58:00,871 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:00,871 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:00,871 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:95799" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:00,871 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:95799', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 13:58:01,093 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml"},
 "errors":[]
}
2025-03-06 13:58:01,093 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 13:58:01,093 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 13:58:01,093 [DEBUG] py4...: --------------------
2025-03-06 13:58:01,093 [DEBUG] py4...: Calling export_network('networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'graphml', network=94735)
2025-03-06 13:58:01,093 [DEBUG] py4...: ǀCalling get_network_suid(94735, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:01,093 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:01,093 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:01,109 [DEBUG] py4...: ǀǀOK[200], content: [94129,94469,95125,95799,94735]
2025-03-06 13:58:01,109 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [94129, 94469, 95125, 95799, 94735]
2025-03-06 13:58:01,109 [DEBUG] py4...: ǀReturning 'get_network_suid': 94735
2025-03-06 13:58:01,109 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:01,109 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:01,109 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 13:58:01,121 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:58:01,121 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:01,121 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:01,121 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:94735" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:01,121 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:94735', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 13:58:01,147 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml"},
 "errors":[]
}
2025-03-06 13:58:01,148 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 13:58:01,148 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 13:58:01,148 [DEBUG] py4...: --------------------
2025-03-06 13:58:01,148 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_10.cys')
2025-03-06 13:58:01,149 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:01,149 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys'}
2025-03-06 13:58:09,331 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:58:09,336 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:58:09,336 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:58:09,336 [DEBUG] py4...: --------------------
2025-03-06 13:58:09,337 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:58:09,337 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,337 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:09,362 [DEBUG] py4...: ǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":106145},{"name":"Glutathione metabolism [bvu00480]","SUID":105479},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":104541},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":105101},{"name":"D-Amino acid metabolism [bvu00470]","SUID":105789}]
2025-03-06 13:58:09,362 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 106145}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 105479}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 104541}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 105101}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 105789}]
2025-03-06 13:58:09,362 [DEBUG] py4...: Returning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:58:09,363 [DEBUG] py4...: --------------------
2025-03-06 13:58:09,363 [DEBUG] py4...: Calling get_network_suid('Other glycan degradation [bvu00511]')
2025-03-06 13:58:09,363 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,363 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,363 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:09,378 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":106145},{"name":"Glutathione metabolism [bvu00480]","SUID":105479},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":104541},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":105101},{"name":"D-Amino acid metabolism [bvu00470]","SUID":105789}]
2025-03-06 13:58:09,378 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 106145}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 105479}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 104541}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 105101}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 105789}]
2025-03-06 13:58:09,378 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:58:09,378 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Other glycan degradation [bvu00511]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,379 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Other glycan degradation [bvu00511]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:09,402 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 106145
}
],
 "errors":[]
}
2025-03-06 13:58:09,402 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 106145}]
2025-03-06 13:58:09,402 [DEBUG] py4...: Returning 'get_network_suid': 106145
2025-03-06 13:58:09,402 [DEBUG] py4...: --------------------
2025-03-06 13:58:09,403 [DEBUG] py4...: Calling get_network_suid('Glutathione metabolism [bvu00480]')
2025-03-06 13:58:09,403 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,403 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,403 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:09,415 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":106145},{"name":"Glutathione metabolism [bvu00480]","SUID":105479},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":104541},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":105101},{"name":"D-Amino acid metabolism [bvu00470]","SUID":105789}]
2025-03-06 13:58:09,416 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 106145}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 105479}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 104541}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 105101}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 105789}]
2025-03-06 13:58:09,416 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:58:09,416 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glutathione metabolism [bvu00480]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,416 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glutathione metabolism [bvu00480]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:09,425 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 105479
}
],
 "errors":[]
}
2025-03-06 13:58:09,426 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 105479}]
2025-03-06 13:58:09,426 [DEBUG] py4...: Returning 'get_network_suid': 105479
2025-03-06 13:58:09,426 [DEBUG] py4...: --------------------
2025-03-06 13:58:09,426 [DEBUG] py4...: Calling get_network_suid('Amino sugar and nucleotide sugar metabolism [bvu00520]')
2025-03-06 13:58:09,426 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,426 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,426 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:09,432 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":106145},{"name":"Glutathione metabolism [bvu00480]","SUID":105479},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":104541},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":105101},{"name":"D-Amino acid metabolism [bvu00470]","SUID":105789}]
2025-03-06 13:58:09,432 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 106145}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 105479}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 104541}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 105101}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 105789}]
2025-03-06 13:58:09,432 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:58:09,432 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Amino sugar and nucleotide sugar metabolism [bvu00520]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,433 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:09,454 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 104541
}
],
 "errors":[]
}
2025-03-06 13:58:09,454 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 104541}]
2025-03-06 13:58:09,454 [DEBUG] py4...: Returning 'get_network_suid': 104541
2025-03-06 13:58:09,454 [DEBUG] py4...: --------------------
2025-03-06 13:58:09,454 [DEBUG] py4...: Calling get_network_suid('Lipopolysaccharide biosynthesis [bvu00540]')
2025-03-06 13:58:09,454 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,454 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,454 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:09,474 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":106145},{"name":"Glutathione metabolism [bvu00480]","SUID":105479},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":104541},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":105101},{"name":"D-Amino acid metabolism [bvu00470]","SUID":105789}]
2025-03-06 13:58:09,474 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 106145}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 105479}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 104541}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 105101}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 105789}]
2025-03-06 13:58:09,474 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:58:09,474 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Lipopolysaccharide biosynthesis [bvu00540]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,474 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Lipopolysaccharide biosynthesis [bvu00540]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:09,486 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 105101
}
],
 "errors":[]
}
2025-03-06 13:58:09,486 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 105101}]
2025-03-06 13:58:09,486 [DEBUG] py4...: Returning 'get_network_suid': 105101
2025-03-06 13:58:09,486 [DEBUG] py4...: --------------------
2025-03-06 13:58:09,486 [DEBUG] py4...: Calling get_network_suid('D-Amino acid metabolism [bvu00470]')
2025-03-06 13:58:09,486 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,486 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,486 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:09,499 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":106145},{"name":"Glutathione metabolism [bvu00480]","SUID":105479},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":104541},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":105101},{"name":"D-Amino acid metabolism [bvu00470]","SUID":105789}]
2025-03-06 13:58:09,499 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 106145}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 105479}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 104541}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 105101}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 105789}]
2025-03-06 13:58:09,499 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:58:09,499 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="D-Amino acid metabolism [bvu00470]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,499 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'D-Amino acid metabolism [bvu00470]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:09,514 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 105789
}
],
 "errors":[]
}
2025-03-06 13:58:09,515 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 105789}]
2025-03-06 13:58:09,515 [DEBUG] py4...: Returning 'get_network_suid': 105789
2025-03-06 13:58:09,515 [DEBUG] py4...: --------------------
2025-03-06 13:58:09,515 [DEBUG] py4...: Calling export_network('networks_graphml/Other glycan degradation [bvu00511].graphml', 'graphml', network=106145)
2025-03-06 13:58:09,515 [DEBUG] py4...: ǀCalling get_network_suid(106145, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,515 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,515 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:09,527 [DEBUG] py4...: ǀǀOK[200], content: [106145,105479,104541,105101,105789]
2025-03-06 13:58:09,527 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [106145, 105479, 104541, 105101, 105789]
2025-03-06 13:58:09,527 [DEBUG] py4...: ǀReturning 'get_network_suid': 106145
2025-03-06 13:58:09,528 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Other glycan degradation [bvu00511].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,528 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,528 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 13:58:09,566 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml","modifiedTime":"2025-03-06 13:41:33.0430","isFile":true},
 "errors":[]
}
2025-03-06 13:58:09,566 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml', 'modifiedTime': '2025-03-06 13:41:33.0430', 'isFile': True}
2025-03-06 13:58:09,566 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml', 'modifiedTime': '2025-03-06 13:41:33.0430', 'isFile': True}
2025-03-06 13:58:09,566 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:106145" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:09,566 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:106145', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 13:58:14,602 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml"},
 "errors":[]
}
2025-03-06 13:58:14,603 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 13:58:14,603 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 13:58:14,603 [DEBUG] py4...: --------------------
2025-03-06 13:58:14,603 [DEBUG] py4...: Calling export_network('networks_graphml/Glutathione metabolism [bvu00480].graphml', 'graphml', network=105479)
2025-03-06 13:58:14,603 [DEBUG] py4...: ǀCalling get_network_suid(105479, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:14,603 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:14,603 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:14,607 [DEBUG] py4...: ǀǀOK[200], content: [106145,105479,104541,105101,105789]
2025-03-06 13:58:14,608 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [106145, 105479, 104541, 105101, 105789]
2025-03-06 13:58:14,608 [DEBUG] py4...: ǀReturning 'get_network_suid': 105479
2025-03-06 13:58:14,608 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Glutathione metabolism [bvu00480].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:14,608 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:14,608 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 13:58:14,612 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml","modifiedTime":"2025-03-06 13:41:33.0536","isFile":true},
 "errors":[]
}
2025-03-06 13:58:14,612 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml', 'modifiedTime': '2025-03-06 13:41:33.0536', 'isFile': True}
2025-03-06 13:58:14,612 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml', 'modifiedTime': '2025-03-06 13:41:33.0536', 'isFile': True}
2025-03-06 13:58:14,612 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:105479" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:14,612 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:105479', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 13:58:18,776 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml"},
 "errors":[]
}
2025-03-06 13:58:18,778 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 13:58:18,778 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 13:58:18,778 [DEBUG] py4...: --------------------
2025-03-06 13:58:18,779 [DEBUG] py4...: Calling export_network('networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', 'graphml', network=104541)
2025-03-06 13:58:18,779 [DEBUG] py4...: ǀCalling get_network_suid(104541, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:18,779 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:18,779 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:18,791 [DEBUG] py4...: ǀǀOK[200], content: [106145,105479,104541,105101,105789]
2025-03-06 13:58:18,792 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [106145, 105479, 104541, 105101, 105789]
2025-03-06 13:58:18,792 [DEBUG] py4...: ǀReturning 'get_network_suid': 104541
2025-03-06 13:58:18,792 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:18,792 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:18,793 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 13:58:18,800 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml","modifiedTime":"2025-03-06 13:41:33.0661","isFile":true},
 "errors":[]
}
2025-03-06 13:58:18,800 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', 'modifiedTime': '2025-03-06 13:41:33.0661', 'isFile': True}
2025-03-06 13:58:18,801 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', 'modifiedTime': '2025-03-06 13:41:33.0661', 'isFile': True}
2025-03-06 13:58:18,801 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:104541" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:18,801 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:104541', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 13:58:20,030 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml"},
 "errors":[]
}
2025-03-06 13:58:20,032 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 13:58:20,032 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 13:58:20,032 [DEBUG] py4...: --------------------
2025-03-06 13:58:20,032 [DEBUG] py4...: Calling export_network('networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', 'graphml', network=105101)
2025-03-06 13:58:20,032 [DEBUG] py4...: ǀCalling get_network_suid(105101, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:20,032 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:20,032 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:20,035 [DEBUG] py4...: ǀǀOK[200], content: [106145,105479,104541,105101,105789]
2025-03-06 13:58:20,036 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [106145, 105479, 104541, 105101, 105789]
2025-03-06 13:58:20,036 [DEBUG] py4...: ǀReturning 'get_network_suid': 105101
2025-03-06 13:58:20,036 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:20,036 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:20,036 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 13:58:20,044 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml","modifiedTime":"2025-03-06 13:41:33.0769","isFile":true},
 "errors":[]
}
2025-03-06 13:58:20,044 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', 'modifiedTime': '2025-03-06 13:41:33.0769', 'isFile': True}
2025-03-06 13:58:20,045 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', 'modifiedTime': '2025-03-06 13:41:33.0769', 'isFile': True}
2025-03-06 13:58:20,045 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:105101" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:20,046 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:105101', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 13:58:21,129 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml"},
 "errors":[]
}
2025-03-06 13:58:21,131 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 13:58:21,134 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 13:58:21,135 [DEBUG] py4...: --------------------
2025-03-06 13:58:21,135 [DEBUG] py4...: Calling export_network('networks_graphml/D-Amino acid metabolism [bvu00470].graphml', 'graphml', network=105789)
2025-03-06 13:58:21,135 [DEBUG] py4...: ǀCalling get_network_suid(105789, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:21,135 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:21,135 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:21,140 [DEBUG] py4...: ǀǀOK[200], content: [106145,105479,104541,105101,105789]
2025-03-06 13:58:21,140 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [106145, 105479, 104541, 105101, 105789]
2025-03-06 13:58:21,140 [DEBUG] py4...: ǀReturning 'get_network_suid': 105789
2025-03-06 13:58:21,140 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/D-Amino acid metabolism [bvu00470].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:21,140 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:21,140 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 13:58:21,146 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml","modifiedTime":"2025-03-06 13:41:33.0891","isFile":true},
 "errors":[]
}
2025-03-06 13:58:21,147 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml', 'modifiedTime': '2025-03-06 13:41:33.0891', 'isFile': True}
2025-03-06 13:58:21,147 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml', 'modifiedTime': '2025-03-06 13:41:33.0891', 'isFile': True}
2025-03-06 13:58:21,147 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:105789" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:21,147 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:105789', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 13:58:22,434 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml"},
 "errors":[]
}
2025-03-06 13:58:22,436 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 13:58:22,436 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 13:58:22,436 [DEBUG] py4...: --------------------
2025-03-06 13:58:22,436 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_14.cys')
2025-03-06 13:58:22,437 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_14.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:22,437 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_14.cys'}
2025-03-06 13:58:23,436 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:58:23,436 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:58:23,437 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:58:23,437 [DEBUG] py4...: --------------------
2025-03-06 13:58:23,437 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:58:23,437 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,437 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:23,452 [DEBUG] py4...: ǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":114098},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":113444},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":113780},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":113048},{"name":"Monobactam biosynthesis [bvu00261]","SUID":113228}]
2025-03-06 13:58:23,453 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 114098}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 113444}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 113780}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 113048}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 113228}]
2025-03-06 13:58:23,453 [DEBUG] py4...: Returning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 13:58:23,453 [DEBUG] py4...: --------------------
2025-03-06 13:58:23,453 [DEBUG] py4...: Calling get_network_suid('Degradation of flavonoids [bvu00946]')
2025-03-06 13:58:23,453 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,453 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,453 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:23,458 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":114098},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":113444},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":113780},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":113048},{"name":"Monobactam biosynthesis [bvu00261]","SUID":113228}]
2025-03-06 13:58:23,458 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 114098}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 113444}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 113780}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 113048}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 113228}]
2025-03-06 13:58:23,458 [DEBUG] py4...: ǀReturning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 13:58:23,458 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Degradation of flavonoids [bvu00946]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,458 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Degradation of flavonoids [bvu00946]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:23,583 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 114098
}
],
 "errors":[]
}
2025-03-06 13:58:23,583 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 114098}]
2025-03-06 13:58:23,584 [DEBUG] py4...: Returning 'get_network_suid': 114098
2025-03-06 13:58:23,584 [DEBUG] py4...: --------------------
2025-03-06 13:58:23,584 [DEBUG] py4...: Calling get_network_suid('Terpenoid backbone biosynthesis [bvu00900]')
2025-03-06 13:58:23,584 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,584 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,585 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:23,619 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":114098},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":113444},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":113780},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":113048},{"name":"Monobactam biosynthesis [bvu00261]","SUID":113228}]
2025-03-06 13:58:23,621 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 114098}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 113444}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 113780}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 113048}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 113228}]
2025-03-06 13:58:23,622 [DEBUG] py4...: ǀReturning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 13:58:23,623 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Terpenoid backbone biosynthesis [bvu00900]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,623 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Terpenoid backbone biosynthesis [bvu00900]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:23,633 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 113444
}
],
 "errors":[]
}
2025-03-06 13:58:23,634 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 113444}]
2025-03-06 13:58:23,634 [DEBUG] py4...: Returning 'get_network_suid': 113444
2025-03-06 13:58:23,634 [DEBUG] py4...: --------------------
2025-03-06 13:58:23,634 [DEBUG] py4...: Calling get_network_suid('Polyketide sugar unit biosynthesis [bvu00523]')
2025-03-06 13:58:23,634 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,634 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,634 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:23,639 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":114098},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":113444},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":113780},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":113048},{"name":"Monobactam biosynthesis [bvu00261]","SUID":113228}]
2025-03-06 13:58:23,639 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 114098}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 113444}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 113780}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 113048}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 113228}]
2025-03-06 13:58:23,639 [DEBUG] py4...: ǀReturning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 13:58:23,639 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Polyketide sugar unit biosynthesis [bvu00523]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,639 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Polyketide sugar unit biosynthesis [bvu00523]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:23,658 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 113780
}
],
 "errors":[]
}
2025-03-06 13:58:23,658 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 113780}]
2025-03-06 13:58:23,658 [DEBUG] py4...: Returning 'get_network_suid': 113780
2025-03-06 13:58:23,659 [DEBUG] py4...: --------------------
2025-03-06 13:58:23,659 [DEBUG] py4...: Calling get_network_suid('Carbapenem biosynthesis [bvu00332]')
2025-03-06 13:58:23,659 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,659 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,659 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:23,666 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":114098},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":113444},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":113780},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":113048},{"name":"Monobactam biosynthesis [bvu00261]","SUID":113228}]
2025-03-06 13:58:23,666 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 114098}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 113444}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 113780}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 113048}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 113228}]
2025-03-06 13:58:23,666 [DEBUG] py4...: ǀReturning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 13:58:23,666 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Carbapenem biosynthesis [bvu00332]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,666 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Carbapenem biosynthesis [bvu00332]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:23,672 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 113048
}
],
 "errors":[]
}
2025-03-06 13:58:23,672 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 113048}]
2025-03-06 13:58:23,672 [DEBUG] py4...: Returning 'get_network_suid': 113048
2025-03-06 13:58:23,672 [DEBUG] py4...: --------------------
2025-03-06 13:58:23,673 [DEBUG] py4...: Calling get_network_suid('Monobactam biosynthesis [bvu00261]')
2025-03-06 13:58:23,673 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,673 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,673 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:23,677 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":114098},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":113444},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":113780},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":113048},{"name":"Monobactam biosynthesis [bvu00261]","SUID":113228}]
2025-03-06 13:58:23,677 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 114098}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 113444}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 113780}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 113048}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 113228}]
2025-03-06 13:58:23,677 [DEBUG] py4...: ǀReturning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 13:58:23,677 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Monobactam biosynthesis [bvu00261]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,677 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Monobactam biosynthesis [bvu00261]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:23,688 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 113228
}
],
 "errors":[]
}
2025-03-06 13:58:23,688 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 113228}]
2025-03-06 13:58:23,688 [DEBUG] py4...: Returning 'get_network_suid': 113228
2025-03-06 13:58:23,688 [DEBUG] py4...: --------------------
2025-03-06 13:58:23,689 [DEBUG] py4...: Calling export_network('networks_graphml/Degradation of flavonoids [bvu00946].graphml', 'graphml', network=114098)
2025-03-06 13:58:23,689 [DEBUG] py4...: ǀCalling get_network_suid(114098, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,689 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,689 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:23,693 [DEBUG] py4...: ǀǀOK[200], content: [114098,113444,113780,113048,113228]
2025-03-06 13:58:23,693 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [114098, 113444, 113780, 113048, 113228]
2025-03-06 13:58:23,693 [DEBUG] py4...: ǀReturning 'get_network_suid': 114098
2025-03-06 13:58:23,693 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Degradation of flavonoids [bvu00946].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,693 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,693 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml'}
2025-03-06 13:58:23,698 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:58:23,698 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:23,698 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:23,698 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:114098" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,698 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:114098', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml'}
2025-03-06 13:58:23,709 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml"},
 "errors":[]
}
2025-03-06 13:58:23,709 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml'}
2025-03-06 13:58:23,709 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml'}
2025-03-06 13:58:23,709 [DEBUG] py4...: --------------------
2025-03-06 13:58:23,709 [DEBUG] py4...: Calling export_network('networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', 'graphml', network=113444)
2025-03-06 13:58:23,709 [DEBUG] py4...: ǀCalling get_network_suid(113444, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,709 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,709 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:23,713 [DEBUG] py4...: ǀǀOK[200], content: [114098,113444,113780,113048,113228]
2025-03-06 13:58:23,714 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [114098, 113444, 113780, 113048, 113228]
2025-03-06 13:58:23,714 [DEBUG] py4...: ǀReturning 'get_network_suid': 113444
2025-03-06 13:58:23,714 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,714 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,714 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml'}
2025-03-06 13:58:23,720 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:58:23,721 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:23,721 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:23,721 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:113444" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,721 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:113444', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml'}
2025-03-06 13:58:23,730 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml"},
 "errors":[]
}
2025-03-06 13:58:23,730 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml'}
2025-03-06 13:58:23,730 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml'}
2025-03-06 13:58:23,730 [DEBUG] py4...: --------------------
2025-03-06 13:58:23,730 [DEBUG] py4...: Calling export_network('networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', 'graphml', network=113780)
2025-03-06 13:58:23,730 [DEBUG] py4...: ǀCalling get_network_suid(113780, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,730 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,730 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:23,734 [DEBUG] py4...: ǀǀOK[200], content: [114098,113444,113780,113048,113228]
2025-03-06 13:58:23,735 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [114098, 113444, 113780, 113048, 113228]
2025-03-06 13:58:23,735 [DEBUG] py4...: ǀReturning 'get_network_suid': 113780
2025-03-06 13:58:23,735 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,735 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,735 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml'}
2025-03-06 13:58:23,742 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:58:23,742 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:23,742 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:23,742 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:113780" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,742 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:113780', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml'}
2025-03-06 13:58:23,752 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml"},
 "errors":[]
}
2025-03-06 13:58:23,752 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml'}
2025-03-06 13:58:23,752 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml'}
2025-03-06 13:58:23,752 [DEBUG] py4...: --------------------
2025-03-06 13:58:23,752 [DEBUG] py4...: Calling export_network('networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', 'graphml', network=113048)
2025-03-06 13:58:23,752 [DEBUG] py4...: ǀCalling get_network_suid(113048, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,752 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,752 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:23,757 [DEBUG] py4...: ǀǀOK[200], content: [114098,113444,113780,113048,113228]
2025-03-06 13:58:23,757 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [114098, 113444, 113780, 113048, 113228]
2025-03-06 13:58:23,757 [DEBUG] py4...: ǀReturning 'get_network_suid': 113048
2025-03-06 13:58:23,757 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,757 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,757 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml'}
2025-03-06 13:58:23,762 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:58:23,762 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:23,762 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:23,762 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:113048" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,762 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:113048', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml'}
2025-03-06 13:58:23,773 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml"},
 "errors":[]
}
2025-03-06 13:58:23,773 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml'}
2025-03-06 13:58:23,773 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml'}
2025-03-06 13:58:23,773 [DEBUG] py4...: --------------------
2025-03-06 13:58:23,773 [DEBUG] py4...: Calling export_network('networks_graphml/Monobactam biosynthesis [bvu00261].graphml', 'graphml', network=113228)
2025-03-06 13:58:23,773 [DEBUG] py4...: ǀCalling get_network_suid(113228, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,773 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,773 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:23,782 [DEBUG] py4...: ǀǀOK[200], content: [114098,113444,113780,113048,113228]
2025-03-06 13:58:23,783 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [114098, 113444, 113780, 113048, 113228]
2025-03-06 13:58:23,783 [DEBUG] py4...: ǀReturning 'get_network_suid': 113228
2025-03-06 13:58:23,783 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Monobactam biosynthesis [bvu00261].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,783 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,783 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml'}
2025-03-06 13:58:23,787 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:58:23,788 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:23,788 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:23,788 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:113228" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,788 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:113228', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml'}
2025-03-06 13:58:23,798 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml"},
 "errors":[]
}
2025-03-06 13:58:23,798 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml'}
2025-03-06 13:58:23,799 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml'}
2025-03-06 13:58:23,799 [DEBUG] py4...: --------------------
2025-03-06 13:58:23,799 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_15.cys')
2025-03-06 13:58:23,799 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_15.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:23,799 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_15.cys'}
2025-03-06 13:58:26,067 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:58:26,067 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:58:26,068 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:58:26,068 [DEBUG] py4...: --------------------
2025-03-06 13:58:26,068 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:58:26,068 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,068 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:26,076 [DEBUG] py4...: ǀOK[200], content: [{"name":"Novobiocin biosynthesis [bvu00401]","SUID":120051},{"name":"Benzoate degradation [bvu00362]","SUID":119465},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":120265},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":119259},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":119871}]
2025-03-06 13:58:26,077 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 120051}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 119465}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 120265}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 119259}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 119871}]
2025-03-06 13:58:26,077 [DEBUG] py4...: Returning 'get_network_list': ['Novobiocin biosynthesis [bvu00401]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Acarbose and validamycin biosynthesis [bvu00525]', 'Streptomycin biosynthesis [bvu00521]']
2025-03-06 13:58:26,077 [DEBUG] py4...: --------------------
2025-03-06 13:58:26,077 [DEBUG] py4...: Calling get_network_suid('Novobiocin biosynthesis [bvu00401]')
2025-03-06 13:58:26,077 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,077 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,077 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:26,082 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Novobiocin biosynthesis [bvu00401]","SUID":120051},{"name":"Benzoate degradation [bvu00362]","SUID":119465},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":120265},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":119259},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":119871}]
2025-03-06 13:58:26,083 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 120051}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 119465}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 120265}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 119259}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 119871}]
2025-03-06 13:58:26,083 [DEBUG] py4...: ǀReturning 'get_network_list': ['Novobiocin biosynthesis [bvu00401]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Acarbose and validamycin biosynthesis [bvu00525]', 'Streptomycin biosynthesis [bvu00521]']
2025-03-06 13:58:26,084 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Novobiocin biosynthesis [bvu00401]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,084 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Novobiocin biosynthesis [bvu00401]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:26,093 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 120051
}
],
 "errors":[]
}
2025-03-06 13:58:26,094 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 120051}]
2025-03-06 13:58:26,094 [DEBUG] py4...: Returning 'get_network_suid': 120051
2025-03-06 13:58:26,094 [DEBUG] py4...: --------------------
2025-03-06 13:58:26,094 [DEBUG] py4...: Calling get_network_suid('Benzoate degradation [bvu00362]')
2025-03-06 13:58:26,094 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,094 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,094 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:26,100 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Novobiocin biosynthesis [bvu00401]","SUID":120051},{"name":"Benzoate degradation [bvu00362]","SUID":119465},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":120265},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":119259},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":119871}]
2025-03-06 13:58:26,101 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 120051}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 119465}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 120265}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 119259}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 119871}]
2025-03-06 13:58:26,101 [DEBUG] py4...: ǀReturning 'get_network_list': ['Novobiocin biosynthesis [bvu00401]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Acarbose and validamycin biosynthesis [bvu00525]', 'Streptomycin biosynthesis [bvu00521]']
2025-03-06 13:58:26,101 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Benzoate degradation [bvu00362]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,101 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Benzoate degradation [bvu00362]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:26,106 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 119465
}
],
 "errors":[]
}
2025-03-06 13:58:26,106 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 119465}]
2025-03-06 13:58:26,106 [DEBUG] py4...: Returning 'get_network_suid': 119465
2025-03-06 13:58:26,106 [DEBUG] py4...: --------------------
2025-03-06 13:58:26,107 [DEBUG] py4...: Calling get_network_suid('Biosynthesis of various plant secondary metabolites [bvu00999]')
2025-03-06 13:58:26,107 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,107 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,107 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:26,114 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Novobiocin biosynthesis [bvu00401]","SUID":120051},{"name":"Benzoate degradation [bvu00362]","SUID":119465},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":120265},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":119259},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":119871}]
2025-03-06 13:58:26,115 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 120051}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 119465}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 120265}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 119259}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 119871}]
2025-03-06 13:58:26,115 [DEBUG] py4...: ǀReturning 'get_network_list': ['Novobiocin biosynthesis [bvu00401]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Acarbose and validamycin biosynthesis [bvu00525]', 'Streptomycin biosynthesis [bvu00521]']
2025-03-06 13:58:26,115 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biosynthesis of various plant secondary metabolites [bvu00999]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,115 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:26,121 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 120265
}
],
 "errors":[]
}
2025-03-06 13:58:26,121 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 120265}]
2025-03-06 13:58:26,121 [DEBUG] py4...: Returning 'get_network_suid': 120265
2025-03-06 13:58:26,121 [DEBUG] py4...: --------------------
2025-03-06 13:58:26,121 [DEBUG] py4...: Calling get_network_suid('Acarbose and validamycin biosynthesis [bvu00525]')
2025-03-06 13:58:26,121 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,122 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,122 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:26,126 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Novobiocin biosynthesis [bvu00401]","SUID":120051},{"name":"Benzoate degradation [bvu00362]","SUID":119465},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":120265},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":119259},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":119871}]
2025-03-06 13:58:26,126 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 120051}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 119465}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 120265}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 119259}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 119871}]
2025-03-06 13:58:26,126 [DEBUG] py4...: ǀReturning 'get_network_list': ['Novobiocin biosynthesis [bvu00401]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Acarbose and validamycin biosynthesis [bvu00525]', 'Streptomycin biosynthesis [bvu00521]']
2025-03-06 13:58:26,127 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Acarbose and validamycin biosynthesis [bvu00525]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,127 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Acarbose and validamycin biosynthesis [bvu00525]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:26,132 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 119259
}
],
 "errors":[]
}
2025-03-06 13:58:26,132 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 119259}]
2025-03-06 13:58:26,132 [DEBUG] py4...: Returning 'get_network_suid': 119259
2025-03-06 13:58:26,132 [DEBUG] py4...: --------------------
2025-03-06 13:58:26,132 [DEBUG] py4...: Calling get_network_suid('Streptomycin biosynthesis [bvu00521]')
2025-03-06 13:58:26,132 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,132 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,132 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:58:26,137 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Novobiocin biosynthesis [bvu00401]","SUID":120051},{"name":"Benzoate degradation [bvu00362]","SUID":119465},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":120265},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":119259},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":119871}]
2025-03-06 13:58:26,137 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 120051}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 119465}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 120265}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 119259}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 119871}]
2025-03-06 13:58:26,138 [DEBUG] py4...: ǀReturning 'get_network_list': ['Novobiocin biosynthesis [bvu00401]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Acarbose and validamycin biosynthesis [bvu00525]', 'Streptomycin biosynthesis [bvu00521]']
2025-03-06 13:58:26,138 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Streptomycin biosynthesis [bvu00521]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,138 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Streptomycin biosynthesis [bvu00521]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:58:26,147 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 119871
}
],
 "errors":[]
}
2025-03-06 13:58:26,147 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 119871}]
2025-03-06 13:58:26,147 [DEBUG] py4...: Returning 'get_network_suid': 119871
2025-03-06 13:58:26,147 [DEBUG] py4...: --------------------
2025-03-06 13:58:26,147 [DEBUG] py4...: Calling export_network('networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', 'graphml', network=120051)
2025-03-06 13:58:26,147 [DEBUG] py4...: ǀCalling get_network_suid(120051, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,148 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,148 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:26,152 [DEBUG] py4...: ǀǀOK[200], content: [120051,119465,120265,119259,119871]
2025-03-06 13:58:26,152 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [120051, 119465, 120265, 119259, 119871]
2025-03-06 13:58:26,152 [DEBUG] py4...: ǀReturning 'get_network_suid': 120051
2025-03-06 13:58:26,152 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,152 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,153 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml'}
2025-03-06 13:58:26,156 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:58:26,156 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:26,156 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:26,156 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:120051" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,157 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:120051', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml'}
2025-03-06 13:58:26,165 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml"},
 "errors":[]
}
2025-03-06 13:58:26,165 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml'}
2025-03-06 13:58:26,165 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml'}
2025-03-06 13:58:26,165 [DEBUG] py4...: --------------------
2025-03-06 13:58:26,165 [DEBUG] py4...: Calling export_network('networks_graphml/Benzoate degradation [bvu00362].graphml', 'graphml', network=119465)
2025-03-06 13:58:26,165 [DEBUG] py4...: ǀCalling get_network_suid(119465, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,165 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,166 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:26,172 [DEBUG] py4...: ǀǀOK[200], content: [120051,119465,120265,119259,119871]
2025-03-06 13:58:26,172 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [120051, 119465, 120265, 119259, 119871]
2025-03-06 13:58:26,172 [DEBUG] py4...: ǀReturning 'get_network_suid': 119465
2025-03-06 13:58:26,172 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Benzoate degradation [bvu00362].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,172 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,172 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml'}
2025-03-06 13:58:26,176 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:58:26,176 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:26,176 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:26,176 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:119465" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,176 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:119465', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml'}
2025-03-06 13:58:26,188 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml"},
 "errors":[]
}
2025-03-06 13:58:26,188 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml'}
2025-03-06 13:58:26,188 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml'}
2025-03-06 13:58:26,188 [DEBUG] py4...: --------------------
2025-03-06 13:58:26,188 [DEBUG] py4...: Calling export_network('networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', 'graphml', network=120265)
2025-03-06 13:58:26,188 [DEBUG] py4...: ǀCalling get_network_suid(120265, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,188 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,188 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:26,192 [DEBUG] py4...: ǀǀOK[200], content: [120051,119465,120265,119259,119871]
2025-03-06 13:58:26,192 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [120051, 119465, 120265, 119259, 119871]
2025-03-06 13:58:26,192 [DEBUG] py4...: ǀReturning 'get_network_suid': 120265
2025-03-06 13:58:26,192 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,192 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,192 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml'}
2025-03-06 13:58:26,197 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:58:26,197 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:26,197 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:26,197 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:120265" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,197 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:120265', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml'}
2025-03-06 13:58:26,207 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml"},
 "errors":[]
}
2025-03-06 13:58:26,207 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml'}
2025-03-06 13:58:26,207 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml'}
2025-03-06 13:58:26,208 [DEBUG] py4...: --------------------
2025-03-06 13:58:26,208 [DEBUG] py4...: Calling export_network('networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', 'graphml', network=119259)
2025-03-06 13:58:26,208 [DEBUG] py4...: ǀCalling get_network_suid(119259, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,208 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,208 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:26,214 [DEBUG] py4...: ǀǀOK[200], content: [120051,119465,120265,119259,119871]
2025-03-06 13:58:26,215 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [120051, 119465, 120265, 119259, 119871]
2025-03-06 13:58:26,215 [DEBUG] py4...: ǀReturning 'get_network_suid': 119259
2025-03-06 13:58:26,215 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,215 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,215 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml'}
2025-03-06 13:58:26,220 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:58:26,220 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:26,220 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:26,220 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:119259" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,220 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:119259', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml'}
2025-03-06 13:58:26,228 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml"},
 "errors":[]
}
2025-03-06 13:58:26,229 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml'}
2025-03-06 13:58:26,229 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml'}
2025-03-06 13:58:26,229 [DEBUG] py4...: --------------------
2025-03-06 13:58:26,229 [DEBUG] py4...: Calling export_network('networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', 'graphml', network=119871)
2025-03-06 13:58:26,229 [DEBUG] py4...: ǀCalling get_network_suid(119871, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,229 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,229 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:58:26,232 [DEBUG] py4...: ǀǀOK[200], content: [120051,119465,120265,119259,119871]
2025-03-06 13:58:26,232 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [120051, 119465, 120265, 119259, 119871]
2025-03-06 13:58:26,232 [DEBUG] py4...: ǀReturning 'get_network_suid': 119871
2025-03-06 13:58:26,232 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,232 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,233 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml'}
2025-03-06 13:58:26,236 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:58:26,236 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:26,236 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:58:26,236 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:119871" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,236 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:119871', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml'}
2025-03-06 13:58:26,244 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml"},
 "errors":[]
}
2025-03-06 13:58:26,244 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml'}
2025-03-06 13:58:26,244 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml'}
2025-03-06 13:58:26,244 [DEBUG] py4...: --------------------
2025-03-06 13:58:26,244 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_8.cys')
2025-03-06 13:58:26,245 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_8.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:58:26,245 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_8.cys'}
2025-03-06 13:58:26,272 [DEBUG] py4...: --------------------
2025-03-06 13:59:26,166 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_12.cys')
2025-03-06 13:59:26,166 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_12.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:26,166 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 13:59:26,213 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 13:59:26,213 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_12.cys'}
2025-03-06 13:59:30,678 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:59:30,678 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:59:30,679 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:59:30,679 [DEBUG] py4...: --------------------
2025-03-06 13:59:30,679 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:59:30,679 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,679 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:30,707 [DEBUG] py4...: ǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":135639},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":136343},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":135849},{"name":"Biotin metabolism [bvu00780]","SUID":136729},{"name":"Riboflavin metabolism [bvu00740]","SUID":136109}]
2025-03-06 13:59:30,707 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 135639}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 136343}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 135849}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 136729}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 136109}]
2025-03-06 13:59:30,707 [DEBUG] py4...: Returning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:59:30,707 [DEBUG] py4...: --------------------
2025-03-06 13:59:30,707 [DEBUG] py4...: Calling get_network_suid('Vitamin B6 metabolism [bvu00750]')
2025-03-06 13:59:30,707 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,707 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,707 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:30,730 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":135639},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":136343},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":135849},{"name":"Biotin metabolism [bvu00780]","SUID":136729},{"name":"Riboflavin metabolism [bvu00740]","SUID":136109}]
2025-03-06 13:59:30,730 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 135639}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 136343}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 135849}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 136729}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 136109}]
2025-03-06 13:59:30,730 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:59:30,730 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Vitamin B6 metabolism [bvu00750]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,730 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Vitamin B6 metabolism [bvu00750]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:30,750 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 135639
}
],
 "errors":[]
}
2025-03-06 13:59:30,750 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 135639}]
2025-03-06 13:59:30,750 [DEBUG] py4...: Returning 'get_network_suid': 135639
2025-03-06 13:59:30,750 [DEBUG] py4...: --------------------
2025-03-06 13:59:30,750 [DEBUG] py4...: Calling get_network_suid('Nicotinate and nicotinamide metabolism [bvu00760]')
2025-03-06 13:59:30,750 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,750 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,750 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:30,765 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":135639},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":136343},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":135849},{"name":"Biotin metabolism [bvu00780]","SUID":136729},{"name":"Riboflavin metabolism [bvu00740]","SUID":136109}]
2025-03-06 13:59:30,765 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 135639}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 136343}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 135849}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 136729}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 136109}]
2025-03-06 13:59:30,765 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:59:30,765 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Nicotinate and nicotinamide metabolism [bvu00760]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,765 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:30,799 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 136343
}
],
 "errors":[]
}
2025-03-06 13:59:30,799 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 136343}]
2025-03-06 13:59:30,799 [DEBUG] py4...: Returning 'get_network_suid': 136343
2025-03-06 13:59:30,799 [DEBUG] py4...: --------------------
2025-03-06 13:59:30,799 [DEBUG] py4...: Calling get_network_suid('Pantothenate and CoA biosynthesis [bvu00770]')
2025-03-06 13:59:30,799 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,799 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,799 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:30,820 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":135639},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":136343},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":135849},{"name":"Biotin metabolism [bvu00780]","SUID":136729},{"name":"Riboflavin metabolism [bvu00740]","SUID":136109}]
2025-03-06 13:59:30,820 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 135639}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 136343}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 135849}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 136729}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 136109}]
2025-03-06 13:59:30,820 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:59:30,820 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pantothenate and CoA biosynthesis [bvu00770]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,820 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pantothenate and CoA biosynthesis [bvu00770]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:30,840 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 135849
}
],
 "errors":[]
}
2025-03-06 13:59:30,840 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 135849}]
2025-03-06 13:59:30,840 [DEBUG] py4...: Returning 'get_network_suid': 135849
2025-03-06 13:59:30,840 [DEBUG] py4...: --------------------
2025-03-06 13:59:30,840 [DEBUG] py4...: Calling get_network_suid('Biotin metabolism [bvu00780]')
2025-03-06 13:59:30,840 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,840 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,840 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:30,860 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":135639},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":136343},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":135849},{"name":"Biotin metabolism [bvu00780]","SUID":136729},{"name":"Riboflavin metabolism [bvu00740]","SUID":136109}]
2025-03-06 13:59:30,860 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 135639}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 136343}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 135849}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 136729}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 136109}]
2025-03-06 13:59:30,860 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:59:30,860 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biotin metabolism [bvu00780]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,860 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biotin metabolism [bvu00780]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:30,873 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 136729
}
],
 "errors":[]
}
2025-03-06 13:59:30,873 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 136729}]
2025-03-06 13:59:30,873 [DEBUG] py4...: Returning 'get_network_suid': 136729
2025-03-06 13:59:30,873 [DEBUG] py4...: --------------------
2025-03-06 13:59:30,873 [DEBUG] py4...: Calling get_network_suid('Riboflavin metabolism [bvu00740]')
2025-03-06 13:59:30,873 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,873 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,873 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:30,882 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":135639},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":136343},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":135849},{"name":"Biotin metabolism [bvu00780]","SUID":136729},{"name":"Riboflavin metabolism [bvu00740]","SUID":136109}]
2025-03-06 13:59:30,882 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 135639}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 136343}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 135849}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 136729}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 136109}]
2025-03-06 13:59:30,882 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 13:59:30,882 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Riboflavin metabolism [bvu00740]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,882 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Riboflavin metabolism [bvu00740]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:30,891 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 136109
}
],
 "errors":[]
}
2025-03-06 13:59:30,891 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 136109}]
2025-03-06 13:59:30,891 [DEBUG] py4...: Returning 'get_network_suid': 136109
2025-03-06 13:59:30,891 [DEBUG] py4...: --------------------
2025-03-06 13:59:30,891 [DEBUG] py4...: Calling export_network('networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'graphml', network=135639, overwrite_file=True)
2025-03-06 13:59:30,891 [DEBUG] py4...: ǀCalling get_network_suid(135639, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,891 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,891 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:30,900 [DEBUG] py4...: ǀǀOK[200], content: [135639,136343,135849,136729,136109]
2025-03-06 13:59:30,900 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [135639, 136343, 135849, 136729, 136109]
2025-03-06 13:59:30,900 [DEBUG] py4...: ǀReturning 'get_network_suid': 135639
2025-03-06 13:59:30,901 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,901 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,901 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 13:59:30,932 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml","modifiedTime":"2025-03-06 13:57:44.0854","isFile":true},
 "errors":[]
}
2025-03-06 13:59:30,933 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'modifiedTime': '2025-03-06 13:57:44.0854', 'isFile': True}
2025-03-06 13:59:30,933 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'modifiedTime': '2025-03-06 13:57:44.0854', 'isFile': True}
2025-03-06 13:59:30,933 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,933 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,933 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 13:59:30,945 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:30,945 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'existed': True}
2025-03-06 13:59:30,945 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'existed': True}
2025-03-06 13:59:30,945 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:135639" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,945 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:135639', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 13:59:30,987 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml"},
 "errors":[]
}
2025-03-06 13:59:30,987 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 13:59:30,987 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 13:59:30,987 [DEBUG] py4...: --------------------
2025-03-06 13:59:30,987 [DEBUG] py4...: Calling export_network('networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'graphml', network=136343, overwrite_file=True)
2025-03-06 13:59:30,987 [DEBUG] py4...: ǀCalling get_network_suid(136343, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,987 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:30,987 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:31,017 [DEBUG] py4...: ǀǀOK[200], content: [135639,136343,135849,136729,136109]
2025-03-06 13:59:31,018 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [135639, 136343, 135849, 136729, 136109]
2025-03-06 13:59:31,018 [DEBUG] py4...: ǀReturning 'get_network_suid': 136343
2025-03-06 13:59:31,018 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,018 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,018 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 13:59:31,032 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml","modifiedTime":"2025-03-06 13:57:44.0927","isFile":true},
 "errors":[]
}
2025-03-06 13:59:31,032 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'modifiedTime': '2025-03-06 13:57:44.0927', 'isFile': True}
2025-03-06 13:59:31,032 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'modifiedTime': '2025-03-06 13:57:44.0927', 'isFile': True}
2025-03-06 13:59:31,032 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,032 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,032 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 13:59:31,061 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:31,062 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'existed': True}
2025-03-06 13:59:31,062 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'existed': True}
2025-03-06 13:59:31,064 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:136343" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,064 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:136343', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 13:59:31,090 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml"},
 "errors":[]
}
2025-03-06 13:59:31,091 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 13:59:31,091 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 13:59:31,091 [DEBUG] py4...: --------------------
2025-03-06 13:59:31,091 [DEBUG] py4...: Calling export_network('networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'graphml', network=135849, overwrite_file=True)
2025-03-06 13:59:31,091 [DEBUG] py4...: ǀCalling get_network_suid(135849, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,091 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,091 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:31,103 [DEBUG] py4...: ǀǀOK[200], content: [135639,136343,135849,136729,136109]
2025-03-06 13:59:31,103 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [135639, 136343, 135849, 136729, 136109]
2025-03-06 13:59:31,103 [DEBUG] py4...: ǀReturning 'get_network_suid': 135849
2025-03-06 13:59:31,103 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,103 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,104 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 13:59:31,128 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml","modifiedTime":"2025-03-06 13:57:44.0977","isFile":true},
 "errors":[]
}
2025-03-06 13:59:31,128 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'modifiedTime': '2025-03-06 13:57:44.0977', 'isFile': True}
2025-03-06 13:59:31,128 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'modifiedTime': '2025-03-06 13:57:44.0977', 'isFile': True}
2025-03-06 13:59:31,128 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,128 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,129 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 13:59:31,145 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:31,146 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'existed': True}
2025-03-06 13:59:31,146 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'existed': True}
2025-03-06 13:59:31,146 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:135849" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,146 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:135849', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 13:59:31,167 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml"},
 "errors":[]
}
2025-03-06 13:59:31,168 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 13:59:31,168 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 13:59:31,168 [DEBUG] py4...: --------------------
2025-03-06 13:59:31,168 [DEBUG] py4...: Calling export_network('networks_graphml/Biotin metabolism [bvu00780].graphml', 'graphml', network=136729, overwrite_file=True)
2025-03-06 13:59:31,168 [DEBUG] py4...: ǀCalling get_network_suid(136729, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,168 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,168 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:31,177 [DEBUG] py4...: ǀǀOK[200], content: [135639,136343,135849,136729,136109]
2025-03-06 13:59:31,178 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [135639, 136343, 135849, 136729, 136109]
2025-03-06 13:59:31,178 [DEBUG] py4...: ǀReturning 'get_network_suid': 136729
2025-03-06 13:59:31,178 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Biotin metabolism [bvu00780].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,178 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,178 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 13:59:31,189 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml","modifiedTime":"2025-03-06 13:57:45.0037","isFile":true},
 "errors":[]
}
2025-03-06 13:59:31,190 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml', 'modifiedTime': '2025-03-06 13:57:45.0037', 'isFile': True}
2025-03-06 13:59:31,190 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml', 'modifiedTime': '2025-03-06 13:57:45.0037', 'isFile': True}
2025-03-06 13:59:31,190 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Biotin metabolism [bvu00780].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,190 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,190 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 13:59:31,209 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:31,210 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml', 'existed': True}
2025-03-06 13:59:31,210 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml', 'existed': True}
2025-03-06 13:59:31,210 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:136729" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,210 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:136729', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 13:59:31,244 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml"},
 "errors":[]
}
2025-03-06 13:59:31,245 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 13:59:31,245 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 13:59:31,245 [DEBUG] py4...: --------------------
2025-03-06 13:59:31,245 [DEBUG] py4...: Calling export_network('networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'graphml', network=136109, overwrite_file=True)
2025-03-06 13:59:31,245 [DEBUG] py4...: ǀCalling get_network_suid(136109, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,245 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,246 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:31,257 [DEBUG] py4...: ǀǀOK[200], content: [135639,136343,135849,136729,136109]
2025-03-06 13:59:31,258 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [135639, 136343, 135849, 136729, 136109]
2025-03-06 13:59:31,258 [DEBUG] py4...: ǀReturning 'get_network_suid': 136109
2025-03-06 13:59:31,258 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Riboflavin metabolism [bvu00740].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,258 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,258 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 13:59:31,269 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml","modifiedTime":"2025-03-06 13:57:45.0085","isFile":true},
 "errors":[]
}
2025-03-06 13:59:31,269 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'modifiedTime': '2025-03-06 13:57:45.0085', 'isFile': True}
2025-03-06 13:59:31,269 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'modifiedTime': '2025-03-06 13:57:45.0085', 'isFile': True}
2025-03-06 13:59:31,269 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Riboflavin metabolism [bvu00740].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,270 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,270 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 13:59:31,292 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:31,292 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'existed': True}
2025-03-06 13:59:31,292 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'existed': True}
2025-03-06 13:59:31,292 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:136109" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,292 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:136109', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 13:59:31,316 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml"},
 "errors":[]
}
2025-03-06 13:59:31,317 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 13:59:31,317 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 13:59:31,317 [DEBUG] py4...: --------------------
2025-03-06 13:59:31,317 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_13.cys')
2025-03-06 13:59:31,317 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_13.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:31,317 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_13.cys'}
2025-03-06 13:59:36,920 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:59:36,921 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:59:36,921 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:59:36,922 [DEBUG] py4...: --------------------
2025-03-06 13:59:36,922 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:59:36,923 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:36,923 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:36,976 [DEBUG] py4...: ǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":142914},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":144064},{"name":"One carbon pool by folate [bvu00670]","SUID":143350},{"name":"Porphyrin metabolism [bvu00860]","SUID":142158},{"name":"Lipoic acid metabolism [bvu00785]","SUID":143758}]
2025-03-06 13:59:36,977 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 142914}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 144064}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 143350}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 142158}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 143758}]
2025-03-06 13:59:36,977 [DEBUG] py4...: Returning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]']
2025-03-06 13:59:36,977 [DEBUG] py4...: --------------------
2025-03-06 13:59:36,977 [DEBUG] py4...: Calling get_network_suid('Folate biosynthesis [bvu00790]')
2025-03-06 13:59:36,977 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:36,977 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:36,977 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:37,023 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":142914},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":144064},{"name":"One carbon pool by folate [bvu00670]","SUID":143350},{"name":"Porphyrin metabolism [bvu00860]","SUID":142158},{"name":"Lipoic acid metabolism [bvu00785]","SUID":143758}]
2025-03-06 13:59:37,024 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 142914}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 144064}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 143350}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 142158}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 143758}]
2025-03-06 13:59:37,024 [DEBUG] py4...: ǀReturning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]']
2025-03-06 13:59:37,024 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Folate biosynthesis [bvu00790]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,024 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Folate biosynthesis [bvu00790]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:37,045 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 142914
}
],
 "errors":[]
}
2025-03-06 13:59:37,045 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 142914}]
2025-03-06 13:59:37,045 [DEBUG] py4...: Returning 'get_network_suid': 142914
2025-03-06 13:59:37,045 [DEBUG] py4...: --------------------
2025-03-06 13:59:37,045 [DEBUG] py4...: Calling get_network_suid('Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]')
2025-03-06 13:59:37,045 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,046 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,046 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:37,100 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":142914},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":144064},{"name":"One carbon pool by folate [bvu00670]","SUID":143350},{"name":"Porphyrin metabolism [bvu00860]","SUID":142158},{"name":"Lipoic acid metabolism [bvu00785]","SUID":143758}]
2025-03-06 13:59:37,101 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 142914}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 144064}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 143350}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 142158}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 143758}]
2025-03-06 13:59:37,101 [DEBUG] py4...: ǀReturning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]']
2025-03-06 13:59:37,101 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,101 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:37,116 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 144064
}
],
 "errors":[]
}
2025-03-06 13:59:37,116 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 144064}]
2025-03-06 13:59:37,117 [DEBUG] py4...: Returning 'get_network_suid': 144064
2025-03-06 13:59:37,117 [DEBUG] py4...: --------------------
2025-03-06 13:59:37,117 [DEBUG] py4...: Calling get_network_suid('One carbon pool by folate [bvu00670]')
2025-03-06 13:59:37,117 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,117 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,117 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:37,126 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":142914},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":144064},{"name":"One carbon pool by folate [bvu00670]","SUID":143350},{"name":"Porphyrin metabolism [bvu00860]","SUID":142158},{"name":"Lipoic acid metabolism [bvu00785]","SUID":143758}]
2025-03-06 13:59:37,126 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 142914}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 144064}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 143350}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 142158}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 143758}]
2025-03-06 13:59:37,126 [DEBUG] py4...: ǀReturning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]']
2025-03-06 13:59:37,127 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="One carbon pool by folate [bvu00670]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,127 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'One carbon pool by folate [bvu00670]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:37,139 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 143350
}
],
 "errors":[]
}
2025-03-06 13:59:37,139 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 143350}]
2025-03-06 13:59:37,140 [DEBUG] py4...: Returning 'get_network_suid': 143350
2025-03-06 13:59:37,140 [DEBUG] py4...: --------------------
2025-03-06 13:59:37,140 [DEBUG] py4...: Calling get_network_suid('Porphyrin metabolism [bvu00860]')
2025-03-06 13:59:37,140 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,140 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,140 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:37,149 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":142914},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":144064},{"name":"One carbon pool by folate [bvu00670]","SUID":143350},{"name":"Porphyrin metabolism [bvu00860]","SUID":142158},{"name":"Lipoic acid metabolism [bvu00785]","SUID":143758}]
2025-03-06 13:59:37,150 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 142914}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 144064}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 143350}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 142158}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 143758}]
2025-03-06 13:59:37,150 [DEBUG] py4...: ǀReturning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]']
2025-03-06 13:59:37,150 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Porphyrin metabolism [bvu00860]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,150 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Porphyrin metabolism [bvu00860]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:37,169 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 142158
}
],
 "errors":[]
}
2025-03-06 13:59:37,169 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 142158}]
2025-03-06 13:59:37,169 [DEBUG] py4...: Returning 'get_network_suid': 142158
2025-03-06 13:59:37,169 [DEBUG] py4...: --------------------
2025-03-06 13:59:37,169 [DEBUG] py4...: Calling get_network_suid('Lipoic acid metabolism [bvu00785]')
2025-03-06 13:59:37,169 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,169 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,170 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:37,182 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":142914},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":144064},{"name":"One carbon pool by folate [bvu00670]","SUID":143350},{"name":"Porphyrin metabolism [bvu00860]","SUID":142158},{"name":"Lipoic acid metabolism [bvu00785]","SUID":143758}]
2025-03-06 13:59:37,182 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 142914}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 144064}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 143350}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 142158}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 143758}]
2025-03-06 13:59:37,182 [DEBUG] py4...: ǀReturning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]']
2025-03-06 13:59:37,182 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Lipoic acid metabolism [bvu00785]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,182 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Lipoic acid metabolism [bvu00785]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:37,193 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 143758
}
],
 "errors":[]
}
2025-03-06 13:59:37,194 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 143758}]
2025-03-06 13:59:37,194 [DEBUG] py4...: Returning 'get_network_suid': 143758
2025-03-06 13:59:37,194 [DEBUG] py4...: --------------------
2025-03-06 13:59:37,194 [DEBUG] py4...: Calling export_network('networks_graphml/Folate biosynthesis [bvu00790].graphml', 'graphml', network=142914, overwrite_file=True)
2025-03-06 13:59:37,194 [DEBUG] py4...: ǀCalling get_network_suid(142914, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,194 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,194 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:37,215 [DEBUG] py4...: ǀǀOK[200], content: [142914,144064,143350,142158,143758]
2025-03-06 13:59:37,215 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [142914, 144064, 143350, 142158, 143758]
2025-03-06 13:59:37,215 [DEBUG] py4...: ǀReturning 'get_network_suid': 142914
2025-03-06 13:59:37,215 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Folate biosynthesis [bvu00790].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,215 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,215 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 13:59:37,224 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml","modifiedTime":"2025-03-06 13:57:52.0222","isFile":true},
 "errors":[]
}
2025-03-06 13:59:37,224 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml', 'modifiedTime': '2025-03-06 13:57:52.0222', 'isFile': True}
2025-03-06 13:59:37,224 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml', 'modifiedTime': '2025-03-06 13:57:52.0222', 'isFile': True}
2025-03-06 13:59:37,224 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Folate biosynthesis [bvu00790].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,224 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,224 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 13:59:37,235 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:37,235 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml', 'existed': True}
2025-03-06 13:59:37,235 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml', 'existed': True}
2025-03-06 13:59:37,235 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:142914" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,235 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:142914', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 13:59:37,260 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml"},
 "errors":[]
}
2025-03-06 13:59:37,260 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 13:59:37,260 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 13:59:37,260 [DEBUG] py4...: --------------------
2025-03-06 13:59:37,260 [DEBUG] py4...: Calling export_network('networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'graphml', network=144064, overwrite_file=True)
2025-03-06 13:59:37,261 [DEBUG] py4...: ǀCalling get_network_suid(144064, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,261 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,261 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:37,271 [DEBUG] py4...: ǀǀOK[200], content: [142914,144064,143350,142158,143758]
2025-03-06 13:59:37,271 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [142914, 144064, 143350, 142158, 143758]
2025-03-06 13:59:37,274 [DEBUG] py4...: ǀReturning 'get_network_suid': 144064
2025-03-06 13:59:37,274 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,274 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,274 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 13:59:37,284 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml","modifiedTime":"2025-03-06 13:57:52.0163","isFile":true},
 "errors":[]
}
2025-03-06 13:59:37,284 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'modifiedTime': '2025-03-06 13:57:52.0163', 'isFile': True}
2025-03-06 13:59:37,285 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'modifiedTime': '2025-03-06 13:57:52.0163', 'isFile': True}
2025-03-06 13:59:37,285 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,285 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,285 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 13:59:37,300 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:37,301 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'existed': True}
2025-03-06 13:59:37,301 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'existed': True}
2025-03-06 13:59:37,301 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:144064" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,301 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:144064', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 13:59:37,343 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"},
 "errors":[]
}
2025-03-06 13:59:37,343 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 13:59:37,343 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 13:59:37,343 [DEBUG] py4...: --------------------
2025-03-06 13:59:37,343 [DEBUG] py4...: Calling export_network('networks_graphml/One carbon pool by folate [bvu00670].graphml', 'graphml', network=143350, overwrite_file=True)
2025-03-06 13:59:37,344 [DEBUG] py4...: ǀCalling get_network_suid(143350, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,344 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,344 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:37,353 [DEBUG] py4...: ǀǀOK[200], content: [142914,144064,143350,142158,143758]
2025-03-06 13:59:37,353 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [142914, 144064, 143350, 142158, 143758]
2025-03-06 13:59:37,353 [DEBUG] py4...: ǀReturning 'get_network_suid': 143350
2025-03-06 13:59:37,354 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/One carbon pool by folate [bvu00670].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,354 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,354 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 13:59:37,368 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml","modifiedTime":"2025-03-06 13:57:52.0277","isFile":true},
 "errors":[]
}
2025-03-06 13:59:37,368 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml', 'modifiedTime': '2025-03-06 13:57:52.0277', 'isFile': True}
2025-03-06 13:59:37,368 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml', 'modifiedTime': '2025-03-06 13:57:52.0277', 'isFile': True}
2025-03-06 13:59:37,368 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/One carbon pool by folate [bvu00670].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,368 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,369 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 13:59:37,401 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:37,402 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml', 'existed': True}
2025-03-06 13:59:37,402 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml', 'existed': True}
2025-03-06 13:59:37,402 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:143350" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,402 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:143350', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 13:59:37,423 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml"},
 "errors":[]
}
2025-03-06 13:59:37,424 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 13:59:37,424 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 13:59:37,424 [DEBUG] py4...: --------------------
2025-03-06 13:59:37,424 [DEBUG] py4...: Calling export_network('networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'graphml', network=142158, overwrite_file=True)
2025-03-06 13:59:37,424 [DEBUG] py4...: ǀCalling get_network_suid(142158, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,424 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,424 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:37,435 [DEBUG] py4...: ǀǀOK[200], content: [142914,144064,143350,142158,143758]
2025-03-06 13:59:37,435 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [142914, 144064, 143350, 142158, 143758]
2025-03-06 13:59:37,435 [DEBUG] py4...: ǀReturning 'get_network_suid': 142158
2025-03-06 13:59:37,435 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Porphyrin metabolism [bvu00860].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,436 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,436 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 13:59:37,450 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml","modifiedTime":"2025-03-06 13:57:52.0351","isFile":true},
 "errors":[]
}
2025-03-06 13:59:37,451 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'modifiedTime': '2025-03-06 13:57:52.0351', 'isFile': True}
2025-03-06 13:59:37,451 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'modifiedTime': '2025-03-06 13:57:52.0351', 'isFile': True}
2025-03-06 13:59:37,451 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Porphyrin metabolism [bvu00860].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,451 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,451 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 13:59:37,468 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:37,469 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'existed': True}
2025-03-06 13:59:37,469 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'existed': True}
2025-03-06 13:59:37,469 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:142158" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,469 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:142158', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 13:59:37,494 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml"},
 "errors":[]
}
2025-03-06 13:59:37,495 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 13:59:37,495 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 13:59:37,495 [DEBUG] py4...: --------------------
2025-03-06 13:59:37,495 [DEBUG] py4...: Calling export_network('networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'graphml', network=143758, overwrite_file=True)
2025-03-06 13:59:37,495 [DEBUG] py4...: ǀCalling get_network_suid(143758, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,495 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,495 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:37,504 [DEBUG] py4...: ǀǀOK[200], content: [142914,144064,143350,142158,143758]
2025-03-06 13:59:37,505 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [142914, 144064, 143350, 142158, 143758]
2025-03-06 13:59:37,505 [DEBUG] py4...: ǀReturning 'get_network_suid': 143758
2025-03-06 13:59:37,505 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Lipoic acid metabolism [bvu00785].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,505 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,505 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 13:59:37,533 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml","modifiedTime":"2025-03-06 13:57:52.0429","isFile":true},
 "errors":[]
}
2025-03-06 13:59:37,533 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'modifiedTime': '2025-03-06 13:57:52.0429', 'isFile': True}
2025-03-06 13:59:37,533 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'modifiedTime': '2025-03-06 13:57:52.0429', 'isFile': True}
2025-03-06 13:59:37,533 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Lipoic acid metabolism [bvu00785].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,533 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,534 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 13:59:37,550 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:37,551 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'existed': True}
2025-03-06 13:59:37,551 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'existed': True}
2025-03-06 13:59:37,551 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:143758" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,551 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:143758', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 13:59:37,584 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml"},
 "errors":[]
}
2025-03-06 13:59:37,585 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 13:59:37,585 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 13:59:37,585 [DEBUG] py4...: --------------------
2025-03-06 13:59:37,585 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_11.cys')
2025-03-06 13:59:37,585 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_11.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:37,585 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_11.cys'}
2025-03-06 13:59:41,729 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:59:41,732 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:59:41,732 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:59:41,732 [DEBUG] py4...: --------------------
2025-03-06 13:59:41,733 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:59:41,733 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,733 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:41,743 [DEBUG] py4...: ǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":153329},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":154999},{"name":"Thiamine metabolism [bvu00730]","SUID":153669},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":154325},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":153935}]
2025-03-06 13:59:41,744 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 153329}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 154999}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 153669}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 154325}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 153935}]
2025-03-06 13:59:41,745 [DEBUG] py4...: Returning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Teichoic acid biosynthesis [bvu00552]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:59:41,745 [DEBUG] py4...: --------------------
2025-03-06 13:59:41,745 [DEBUG] py4...: Calling get_network_suid('Peptidoglycan biosynthesis [bvu00550]')
2025-03-06 13:59:41,746 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,746 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,746 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:41,756 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":153329},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":154999},{"name":"Thiamine metabolism [bvu00730]","SUID":153669},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":154325},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":153935}]
2025-03-06 13:59:41,757 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 153329}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 154999}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 153669}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 154325}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 153935}]
2025-03-06 13:59:41,757 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Teichoic acid biosynthesis [bvu00552]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:59:41,757 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Peptidoglycan biosynthesis [bvu00550]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,757 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Peptidoglycan biosynthesis [bvu00550]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:41,774 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 153329
}
],
 "errors":[]
}
2025-03-06 13:59:41,777 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 153329}]
2025-03-06 13:59:41,778 [DEBUG] py4...: Returning 'get_network_suid': 153329
2025-03-06 13:59:41,778 [DEBUG] py4...: --------------------
2025-03-06 13:59:41,778 [DEBUG] py4...: Calling get_network_suid('Teichoic acid biosynthesis [bvu00552]')
2025-03-06 13:59:41,778 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,778 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,778 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:41,785 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":153329},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":154999},{"name":"Thiamine metabolism [bvu00730]","SUID":153669},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":154325},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":153935}]
2025-03-06 13:59:41,785 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 153329}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 154999}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 153669}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 154325}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 153935}]
2025-03-06 13:59:41,785 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Teichoic acid biosynthesis [bvu00552]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:59:41,785 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Teichoic acid biosynthesis [bvu00552]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,785 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Teichoic acid biosynthesis [bvu00552]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:41,792 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 154999
}
],
 "errors":[]
}
2025-03-06 13:59:41,793 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 154999}]
2025-03-06 13:59:41,793 [DEBUG] py4...: Returning 'get_network_suid': 154999
2025-03-06 13:59:41,793 [DEBUG] py4...: --------------------
2025-03-06 13:59:41,793 [DEBUG] py4...: Calling get_network_suid('Thiamine metabolism [bvu00730]')
2025-03-06 13:59:41,793 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,793 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,793 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:41,801 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":153329},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":154999},{"name":"Thiamine metabolism [bvu00730]","SUID":153669},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":154325},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":153935}]
2025-03-06 13:59:41,801 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 153329}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 154999}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 153669}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 154325}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 153935}]
2025-03-06 13:59:41,801 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Teichoic acid biosynthesis [bvu00552]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:59:41,801 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Thiamine metabolism [bvu00730]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,801 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Thiamine metabolism [bvu00730]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:41,809 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 153669
}
],
 "errors":[]
}
2025-03-06 13:59:41,809 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 153669}]
2025-03-06 13:59:41,809 [DEBUG] py4...: Returning 'get_network_suid': 153669
2025-03-06 13:59:41,809 [DEBUG] py4...: --------------------
2025-03-06 13:59:41,809 [DEBUG] py4...: Calling get_network_suid('Biosynthesis of various nucleotide sugars [bvu00541]')
2025-03-06 13:59:41,809 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,809 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,810 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:41,813 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":153329},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":154999},{"name":"Thiamine metabolism [bvu00730]","SUID":153669},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":154325},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":153935}]
2025-03-06 13:59:41,814 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 153329}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 154999}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 153669}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 154325}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 153935}]
2025-03-06 13:59:41,814 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Teichoic acid biosynthesis [bvu00552]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:59:41,814 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biosynthesis of various nucleotide sugars [bvu00541]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,814 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:41,823 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 154325
}
],
 "errors":[]
}
2025-03-06 13:59:41,823 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 154325}]
2025-03-06 13:59:41,823 [DEBUG] py4...: Returning 'get_network_suid': 154325
2025-03-06 13:59:41,824 [DEBUG] py4...: --------------------
2025-03-06 13:59:41,824 [DEBUG] py4...: Calling get_network_suid('Exopolysaccharide biosynthesis [bvu00543]')
2025-03-06 13:59:41,824 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,824 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,824 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:41,835 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":153329},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":154999},{"name":"Thiamine metabolism [bvu00730]","SUID":153669},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":154325},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":153935}]
2025-03-06 13:59:41,836 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 153329}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 154999}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 153669}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 154325}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 153935}]
2025-03-06 13:59:41,836 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Teichoic acid biosynthesis [bvu00552]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 13:59:41,836 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Exopolysaccharide biosynthesis [bvu00543]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,836 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Exopolysaccharide biosynthesis [bvu00543]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:41,843 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 153935
}
],
 "errors":[]
}
2025-03-06 13:59:41,843 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 153935}]
2025-03-06 13:59:41,843 [DEBUG] py4...: Returning 'get_network_suid': 153935
2025-03-06 13:59:41,843 [DEBUG] py4...: --------------------
2025-03-06 13:59:41,844 [DEBUG] py4...: Calling export_network('networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'graphml', network=153329, overwrite_file=True)
2025-03-06 13:59:41,844 [DEBUG] py4...: ǀCalling get_network_suid(153329, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,844 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,844 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:41,851 [DEBUG] py4...: ǀǀOK[200], content: [153329,154999,153669,154325,153935]
2025-03-06 13:59:41,851 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [153329, 154999, 153669, 154325, 153935]
2025-03-06 13:59:41,852 [DEBUG] py4...: ǀReturning 'get_network_suid': 153329
2025-03-06 13:59:41,852 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,852 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,852 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 13:59:41,864 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml","modifiedTime":"2025-03-06 13:58:00.0695","isFile":true},
 "errors":[]
}
2025-03-06 13:59:41,864 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'modifiedTime': '2025-03-06 13:58:00.0695', 'isFile': True}
2025-03-06 13:59:41,864 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'modifiedTime': '2025-03-06 13:58:00.0695', 'isFile': True}
2025-03-06 13:59:41,864 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,864 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,864 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 13:59:41,869 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:41,869 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'existed': True}
2025-03-06 13:59:41,870 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'existed': True}
2025-03-06 13:59:41,870 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:153329" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,870 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:153329', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 13:59:41,882 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml"},
 "errors":[]
}
2025-03-06 13:59:41,882 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 13:59:41,882 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 13:59:41,882 [DEBUG] py4...: --------------------
2025-03-06 13:59:41,882 [DEBUG] py4...: Calling export_network('networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'graphml', network=154999, overwrite_file=True)
2025-03-06 13:59:41,883 [DEBUG] py4...: ǀCalling get_network_suid(154999, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,883 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,883 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:41,892 [DEBUG] py4...: ǀǀOK[200], content: [153329,154999,153669,154325,153935]
2025-03-06 13:59:41,893 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [153329, 154999, 153669, 154325, 153935]
2025-03-06 13:59:41,894 [DEBUG] py4...: ǀReturning 'get_network_suid': 154999
2025-03-06 13:59:41,894 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,894 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,894 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 13:59:41,901 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml","modifiedTime":"2025-03-06 13:58:01.0091","isFile":true},
 "errors":[]
}
2025-03-06 13:59:41,901 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'modifiedTime': '2025-03-06 13:58:01.0091', 'isFile': True}
2025-03-06 13:59:41,901 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'modifiedTime': '2025-03-06 13:58:01.0091', 'isFile': True}
2025-03-06 13:59:41,901 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,901 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,902 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 13:59:41,907 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:41,907 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'existed': True}
2025-03-06 13:59:41,907 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'existed': True}
2025-03-06 13:59:41,907 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:154999" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,907 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:154999', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 13:59:41,916 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml"},
 "errors":[]
}
2025-03-06 13:59:41,917 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 13:59:41,917 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 13:59:41,917 [DEBUG] py4...: --------------------
2025-03-06 13:59:41,917 [DEBUG] py4...: Calling export_network('networks_graphml/Thiamine metabolism [bvu00730].graphml', 'graphml', network=153669, overwrite_file=True)
2025-03-06 13:59:41,918 [DEBUG] py4...: ǀCalling get_network_suid(153669, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,918 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,918 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:41,924 [DEBUG] py4...: ǀǀOK[200], content: [153329,154999,153669,154325,153935]
2025-03-06 13:59:41,925 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [153329, 154999, 153669, 154325, 153935]
2025-03-06 13:59:41,925 [DEBUG] py4...: ǀReturning 'get_network_suid': 153669
2025-03-06 13:59:41,925 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Thiamine metabolism [bvu00730].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,925 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,925 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 13:59:41,932 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml","modifiedTime":"2025-03-06 13:58:00.0783","isFile":true},
 "errors":[]
}
2025-03-06 13:59:41,932 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml', 'modifiedTime': '2025-03-06 13:58:00.0783', 'isFile': True}
2025-03-06 13:59:41,932 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml', 'modifiedTime': '2025-03-06 13:58:00.0783', 'isFile': True}
2025-03-06 13:59:41,932 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Thiamine metabolism [bvu00730].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,932 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,933 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 13:59:41,939 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:41,940 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml', 'existed': True}
2025-03-06 13:59:41,940 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml', 'existed': True}
2025-03-06 13:59:41,940 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:153669" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,940 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:153669', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 13:59:41,957 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml"},
 "errors":[]
}
2025-03-06 13:59:41,958 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 13:59:41,958 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 13:59:41,958 [DEBUG] py4...: --------------------
2025-03-06 13:59:41,958 [DEBUG] py4...: Calling export_network('networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'graphml', network=154325, overwrite_file=True)
2025-03-06 13:59:41,958 [DEBUG] py4...: ǀCalling get_network_suid(154325, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,958 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,958 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:41,969 [DEBUG] py4...: ǀǀOK[200], content: [153329,154999,153669,154325,153935]
2025-03-06 13:59:41,969 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [153329, 154999, 153669, 154325, 153935]
2025-03-06 13:59:41,969 [DEBUG] py4...: ǀReturning 'get_network_suid': 154325
2025-03-06 13:59:41,969 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,969 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,970 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 13:59:41,977 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml","modifiedTime":"2025-03-06 13:58:00.0836","isFile":true},
 "errors":[]
}
2025-03-06 13:59:41,977 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'modifiedTime': '2025-03-06 13:58:00.0836', 'isFile': True}
2025-03-06 13:59:41,977 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'modifiedTime': '2025-03-06 13:58:00.0836', 'isFile': True}
2025-03-06 13:59:41,978 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,978 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,978 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 13:59:41,991 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:41,991 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'existed': True}
2025-03-06 13:59:41,991 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'existed': True}
2025-03-06 13:59:41,991 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:154325" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:41,991 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:154325', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 13:59:42,004 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml"},
 "errors":[]
}
2025-03-06 13:59:42,005 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 13:59:42,005 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 13:59:42,005 [DEBUG] py4...: --------------------
2025-03-06 13:59:42,005 [DEBUG] py4...: Calling export_network('networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'graphml', network=153935, overwrite_file=True)
2025-03-06 13:59:42,005 [DEBUG] py4...: ǀCalling get_network_suid(153935, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:42,005 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:42,005 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:42,009 [DEBUG] py4...: ǀǀOK[200], content: [153329,154999,153669,154325,153935]
2025-03-06 13:59:42,009 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [153329, 154999, 153669, 154325, 153935]
2025-03-06 13:59:42,009 [DEBUG] py4...: ǀReturning 'get_network_suid': 153935
2025-03-06 13:59:42,009 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:42,009 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:42,009 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 13:59:42,013 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml","modifiedTime":"2025-03-06 13:58:01.0143","isFile":true},
 "errors":[]
}
2025-03-06 13:59:42,014 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'modifiedTime': '2025-03-06 13:58:01.0143', 'isFile': True}
2025-03-06 13:59:42,014 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'modifiedTime': '2025-03-06 13:58:01.0143', 'isFile': True}
2025-03-06 13:59:42,014 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:42,014 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:42,014 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 13:59:42,023 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:42,024 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'existed': True}
2025-03-06 13:59:42,024 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'existed': True}
2025-03-06 13:59:42,024 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:153935" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:42,024 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:153935', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 13:59:42,036 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml"},
 "errors":[]
}
2025-03-06 13:59:42,036 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 13:59:42,036 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 13:59:42,037 [DEBUG] py4...: --------------------
2025-03-06 13:59:42,037 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_10.cys')
2025-03-06 13:59:42,037 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:42,037 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys'}
2025-03-06 13:59:43,317 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:59:43,321 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:59:43,321 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:59:43,321 [DEBUG] py4...: --------------------
2025-03-06 13:59:43,321 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:59:43,323 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,323 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:43,333 [DEBUG] py4...: ǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":165345},{"name":"Glutathione metabolism [bvu00480]","SUID":164679},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":163741},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":164301},{"name":"D-Amino acid metabolism [bvu00470]","SUID":164989}]
2025-03-06 13:59:43,333 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 165345}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 164679}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 163741}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 164301}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 164989}]
2025-03-06 13:59:43,333 [DEBUG] py4...: Returning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:59:43,334 [DEBUG] py4...: --------------------
2025-03-06 13:59:43,334 [DEBUG] py4...: Calling get_network_suid('Other glycan degradation [bvu00511]')
2025-03-06 13:59:43,334 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,334 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,334 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:43,339 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":165345},{"name":"Glutathione metabolism [bvu00480]","SUID":164679},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":163741},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":164301},{"name":"D-Amino acid metabolism [bvu00470]","SUID":164989}]
2025-03-06 13:59:43,340 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 165345}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 164679}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 163741}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 164301}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 164989}]
2025-03-06 13:59:43,340 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:59:43,340 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Other glycan degradation [bvu00511]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,340 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Other glycan degradation [bvu00511]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:43,362 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 165345
}
],
 "errors":[]
}
2025-03-06 13:59:43,362 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 165345}]
2025-03-06 13:59:43,363 [DEBUG] py4...: Returning 'get_network_suid': 165345
2025-03-06 13:59:43,365 [DEBUG] py4...: --------------------
2025-03-06 13:59:43,366 [DEBUG] py4...: Calling get_network_suid('Glutathione metabolism [bvu00480]')
2025-03-06 13:59:43,366 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,366 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,366 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:43,369 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":165345},{"name":"Glutathione metabolism [bvu00480]","SUID":164679},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":163741},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":164301},{"name":"D-Amino acid metabolism [bvu00470]","SUID":164989}]
2025-03-06 13:59:43,369 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 165345}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 164679}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 163741}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 164301}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 164989}]
2025-03-06 13:59:43,369 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:59:43,369 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glutathione metabolism [bvu00480]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,369 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glutathione metabolism [bvu00480]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:43,373 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 164679
}
],
 "errors":[]
}
2025-03-06 13:59:43,373 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 164679}]
2025-03-06 13:59:43,373 [DEBUG] py4...: Returning 'get_network_suid': 164679
2025-03-06 13:59:43,373 [DEBUG] py4...: --------------------
2025-03-06 13:59:43,373 [DEBUG] py4...: Calling get_network_suid('Amino sugar and nucleotide sugar metabolism [bvu00520]')
2025-03-06 13:59:43,374 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,374 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,374 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:43,377 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":165345},{"name":"Glutathione metabolism [bvu00480]","SUID":164679},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":163741},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":164301},{"name":"D-Amino acid metabolism [bvu00470]","SUID":164989}]
2025-03-06 13:59:43,377 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 165345}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 164679}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 163741}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 164301}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 164989}]
2025-03-06 13:59:43,377 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:59:43,377 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Amino sugar and nucleotide sugar metabolism [bvu00520]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,377 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:43,382 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 163741
}
],
 "errors":[]
}
2025-03-06 13:59:43,382 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 163741}]
2025-03-06 13:59:43,382 [DEBUG] py4...: Returning 'get_network_suid': 163741
2025-03-06 13:59:43,382 [DEBUG] py4...: --------------------
2025-03-06 13:59:43,382 [DEBUG] py4...: Calling get_network_suid('Lipopolysaccharide biosynthesis [bvu00540]')
2025-03-06 13:59:43,382 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,382 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,382 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:43,387 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":165345},{"name":"Glutathione metabolism [bvu00480]","SUID":164679},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":163741},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":164301},{"name":"D-Amino acid metabolism [bvu00470]","SUID":164989}]
2025-03-06 13:59:43,387 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 165345}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 164679}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 163741}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 164301}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 164989}]
2025-03-06 13:59:43,387 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:59:43,387 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Lipopolysaccharide biosynthesis [bvu00540]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,387 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Lipopolysaccharide biosynthesis [bvu00540]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:43,392 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 164301
}
],
 "errors":[]
}
2025-03-06 13:59:43,392 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 164301}]
2025-03-06 13:59:43,392 [DEBUG] py4...: Returning 'get_network_suid': 164301
2025-03-06 13:59:43,392 [DEBUG] py4...: --------------------
2025-03-06 13:59:43,392 [DEBUG] py4...: Calling get_network_suid('D-Amino acid metabolism [bvu00470]')
2025-03-06 13:59:43,392 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,392 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,392 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:43,396 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other glycan degradation [bvu00511]","SUID":165345},{"name":"Glutathione metabolism [bvu00480]","SUID":164679},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":163741},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":164301},{"name":"D-Amino acid metabolism [bvu00470]","SUID":164989}]
2025-03-06 13:59:43,396 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other glycan degradation [bvu00511]', 'SUID': 165345}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 164679}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 163741}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 164301}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 164989}]
2025-03-06 13:59:43,396 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]']
2025-03-06 13:59:43,396 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="D-Amino acid metabolism [bvu00470]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,396 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'D-Amino acid metabolism [bvu00470]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:43,412 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 164989
}
],
 "errors":[]
}
2025-03-06 13:59:43,413 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 164989}]
2025-03-06 13:59:43,413 [DEBUG] py4...: Returning 'get_network_suid': 164989
2025-03-06 13:59:43,413 [DEBUG] py4...: --------------------
2025-03-06 13:59:43,413 [DEBUG] py4...: Calling export_network('networks_graphml/Other glycan degradation [bvu00511].graphml', 'graphml', network=165345, overwrite_file=True)
2025-03-06 13:59:43,414 [DEBUG] py4...: ǀCalling get_network_suid(165345, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,414 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,414 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:43,470 [DEBUG] py4...: ǀǀOK[200], content: [165345,164679,163741,164301,164989]
2025-03-06 13:59:43,470 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [165345, 164679, 163741, 164301, 164989]
2025-03-06 13:59:43,470 [DEBUG] py4...: ǀReturning 'get_network_suid': 165345
2025-03-06 13:59:43,471 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Other glycan degradation [bvu00511].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,471 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,471 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 13:59:43,484 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml","modifiedTime":"2025-03-06 13:58:14.0600","isFile":true},
 "errors":[]
}
2025-03-06 13:59:43,484 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml', 'modifiedTime': '2025-03-06 13:58:14.0600', 'isFile': True}
2025-03-06 13:59:43,484 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml', 'modifiedTime': '2025-03-06 13:58:14.0600', 'isFile': True}
2025-03-06 13:59:43,484 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Other glycan degradation [bvu00511].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,484 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,485 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 13:59:43,497 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:43,497 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml', 'existed': True}
2025-03-06 13:59:43,498 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml', 'existed': True}
2025-03-06 13:59:43,498 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:165345" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,498 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:165345', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 13:59:43,510 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml"},
 "errors":[]
}
2025-03-06 13:59:43,510 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 13:59:43,510 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 13:59:43,510 [DEBUG] py4...: --------------------
2025-03-06 13:59:43,510 [DEBUG] py4...: Calling export_network('networks_graphml/Glutathione metabolism [bvu00480].graphml', 'graphml', network=164679, overwrite_file=True)
2025-03-06 13:59:43,510 [DEBUG] py4...: ǀCalling get_network_suid(164679, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,511 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,511 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:43,516 [DEBUG] py4...: ǀǀOK[200], content: [165345,164679,163741,164301,164989]
2025-03-06 13:59:43,516 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [165345, 164679, 163741, 164301, 164989]
2025-03-06 13:59:43,517 [DEBUG] py4...: ǀReturning 'get_network_suid': 164679
2025-03-06 13:59:43,517 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Glutathione metabolism [bvu00480].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,517 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,517 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 13:59:43,524 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml","modifiedTime":"2025-03-06 13:58:18.0751","isFile":true},
 "errors":[]
}
2025-03-06 13:59:43,525 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml', 'modifiedTime': '2025-03-06 13:58:18.0751', 'isFile': True}
2025-03-06 13:59:43,525 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml', 'modifiedTime': '2025-03-06 13:58:18.0751', 'isFile': True}
2025-03-06 13:59:43,525 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Glutathione metabolism [bvu00480].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,525 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,525 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 13:59:43,531 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:43,532 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml', 'existed': True}
2025-03-06 13:59:43,532 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml', 'existed': True}
2025-03-06 13:59:43,532 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:164679" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,532 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:164679', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 13:59:43,541 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml"},
 "errors":[]
}
2025-03-06 13:59:43,541 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 13:59:43,541 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 13:59:43,541 [DEBUG] py4...: --------------------
2025-03-06 13:59:43,542 [DEBUG] py4...: Calling export_network('networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', 'graphml', network=163741, overwrite_file=True)
2025-03-06 13:59:43,542 [DEBUG] py4...: ǀCalling get_network_suid(163741, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,542 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,542 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:43,547 [DEBUG] py4...: ǀǀOK[200], content: [165345,164679,163741,164301,164989]
2025-03-06 13:59:43,548 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [165345, 164679, 163741, 164301, 164989]
2025-03-06 13:59:43,548 [DEBUG] py4...: ǀReturning 'get_network_suid': 163741
2025-03-06 13:59:43,548 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,549 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,549 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 13:59:43,556 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml","modifiedTime":"2025-03-06 13:58:20.0015","isFile":true},
 "errors":[]
}
2025-03-06 13:59:43,557 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', 'modifiedTime': '2025-03-06 13:58:20.0015', 'isFile': True}
2025-03-06 13:59:43,557 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', 'modifiedTime': '2025-03-06 13:58:20.0015', 'isFile': True}
2025-03-06 13:59:43,557 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,557 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,557 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 13:59:43,565 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:43,566 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', 'existed': True}
2025-03-06 13:59:43,566 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', 'existed': True}
2025-03-06 13:59:43,566 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:163741" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,566 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:163741', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 13:59:43,582 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml"},
 "errors":[]
}
2025-03-06 13:59:43,583 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 13:59:43,583 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 13:59:43,583 [DEBUG] py4...: --------------------
2025-03-06 13:59:43,583 [DEBUG] py4...: Calling export_network('networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', 'graphml', network=164301, overwrite_file=True)
2025-03-06 13:59:43,583 [DEBUG] py4...: ǀCalling get_network_suid(164301, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,583 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,583 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:43,596 [DEBUG] py4...: ǀǀOK[200], content: [165345,164679,163741,164301,164989]
2025-03-06 13:59:43,596 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [165345, 164679, 163741, 164301, 164989]
2025-03-06 13:59:43,597 [DEBUG] py4...: ǀReturning 'get_network_suid': 164301
2025-03-06 13:59:43,597 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,597 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,597 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 13:59:43,602 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml","modifiedTime":"2025-03-06 13:58:21.0120","isFile":true},
 "errors":[]
}
2025-03-06 13:59:43,602 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', 'modifiedTime': '2025-03-06 13:58:21.0120', 'isFile': True}
2025-03-06 13:59:43,602 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', 'modifiedTime': '2025-03-06 13:58:21.0120', 'isFile': True}
2025-03-06 13:59:43,602 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,602 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,602 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 13:59:43,607 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:43,608 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', 'existed': True}
2025-03-06 13:59:43,608 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', 'existed': True}
2025-03-06 13:59:43,608 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:164301" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,608 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:164301', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 13:59:43,619 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml"},
 "errors":[]
}
2025-03-06 13:59:43,620 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 13:59:43,620 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 13:59:43,620 [DEBUG] py4...: --------------------
2025-03-06 13:59:43,620 [DEBUG] py4...: Calling export_network('networks_graphml/D-Amino acid metabolism [bvu00470].graphml', 'graphml', network=164989, overwrite_file=True)
2025-03-06 13:59:43,620 [DEBUG] py4...: ǀCalling get_network_suid(164989, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,620 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,620 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:43,626 [DEBUG] py4...: ǀǀOK[200], content: [165345,164679,163741,164301,164989]
2025-03-06 13:59:43,626 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [165345, 164679, 163741, 164301, 164989]
2025-03-06 13:59:43,626 [DEBUG] py4...: ǀReturning 'get_network_suid': 164989
2025-03-06 13:59:43,626 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/D-Amino acid metabolism [bvu00470].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,627 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,627 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 13:59:43,633 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml","modifiedTime":"2025-03-06 13:58:22.0428","isFile":true},
 "errors":[]
}
2025-03-06 13:59:43,634 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml', 'modifiedTime': '2025-03-06 13:58:22.0428', 'isFile': True}
2025-03-06 13:59:43,634 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml', 'modifiedTime': '2025-03-06 13:58:22.0428', 'isFile': True}
2025-03-06 13:59:43,634 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/D-Amino acid metabolism [bvu00470].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,634 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,634 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 13:59:43,641 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:43,641 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml', 'existed': True}
2025-03-06 13:59:43,641 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml', 'existed': True}
2025-03-06 13:59:43,641 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:164989" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,642 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:164989', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 13:59:43,653 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml"},
 "errors":[]
}
2025-03-06 13:59:43,654 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 13:59:43,654 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 13:59:43,654 [DEBUG] py4...: --------------------
2025-03-06 13:59:43,654 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_14.cys')
2025-03-06 13:59:43,654 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_14.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:43,654 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_14.cys'}
2025-03-06 13:59:44,447 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:59:44,447 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:59:44,447 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:59:44,447 [DEBUG] py4...: --------------------
2025-03-06 13:59:44,448 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:59:44,448 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,448 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:44,454 [DEBUG] py4...: ǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":173298},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":172644},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":172980},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":172248},{"name":"Monobactam biosynthesis [bvu00261]","SUID":172428}]
2025-03-06 13:59:44,454 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 173298}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 172644}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 172980}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 172248}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 172428}]
2025-03-06 13:59:44,454 [DEBUG] py4...: Returning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 13:59:44,454 [DEBUG] py4...: --------------------
2025-03-06 13:59:44,455 [DEBUG] py4...: Calling get_network_suid('Degradation of flavonoids [bvu00946]')
2025-03-06 13:59:44,455 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,455 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,455 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:44,460 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":173298},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":172644},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":172980},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":172248},{"name":"Monobactam biosynthesis [bvu00261]","SUID":172428}]
2025-03-06 13:59:44,461 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 173298}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 172644}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 172980}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 172248}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 172428}]
2025-03-06 13:59:44,461 [DEBUG] py4...: ǀReturning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 13:59:44,461 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Degradation of flavonoids [bvu00946]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,461 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Degradation of flavonoids [bvu00946]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:44,473 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 173298
}
],
 "errors":[]
}
2025-03-06 13:59:44,473 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 173298}]
2025-03-06 13:59:44,473 [DEBUG] py4...: Returning 'get_network_suid': 173298
2025-03-06 13:59:44,473 [DEBUG] py4...: --------------------
2025-03-06 13:59:44,474 [DEBUG] py4...: Calling get_network_suid('Terpenoid backbone biosynthesis [bvu00900]')
2025-03-06 13:59:44,474 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,474 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,474 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:44,479 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":173298},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":172644},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":172980},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":172248},{"name":"Monobactam biosynthesis [bvu00261]","SUID":172428}]
2025-03-06 13:59:44,479 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 173298}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 172644}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 172980}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 172248}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 172428}]
2025-03-06 13:59:44,479 [DEBUG] py4...: ǀReturning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 13:59:44,480 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Terpenoid backbone biosynthesis [bvu00900]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,480 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Terpenoid backbone biosynthesis [bvu00900]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:44,486 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 172644
}
],
 "errors":[]
}
2025-03-06 13:59:44,486 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 172644}]
2025-03-06 13:59:44,487 [DEBUG] py4...: Returning 'get_network_suid': 172644
2025-03-06 13:59:44,487 [DEBUG] py4...: --------------------
2025-03-06 13:59:44,487 [DEBUG] py4...: Calling get_network_suid('Polyketide sugar unit biosynthesis [bvu00523]')
2025-03-06 13:59:44,487 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,487 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,487 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:44,492 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":173298},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":172644},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":172980},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":172248},{"name":"Monobactam biosynthesis [bvu00261]","SUID":172428}]
2025-03-06 13:59:44,492 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 173298}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 172644}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 172980}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 172248}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 172428}]
2025-03-06 13:59:44,492 [DEBUG] py4...: ǀReturning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 13:59:44,492 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Polyketide sugar unit biosynthesis [bvu00523]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,493 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Polyketide sugar unit biosynthesis [bvu00523]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:44,502 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 172980
}
],
 "errors":[]
}
2025-03-06 13:59:44,503 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 172980}]
2025-03-06 13:59:44,503 [DEBUG] py4...: Returning 'get_network_suid': 172980
2025-03-06 13:59:44,503 [DEBUG] py4...: --------------------
2025-03-06 13:59:44,503 [DEBUG] py4...: Calling get_network_suid('Carbapenem biosynthesis [bvu00332]')
2025-03-06 13:59:44,503 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,503 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,503 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:44,513 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":173298},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":172644},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":172980},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":172248},{"name":"Monobactam biosynthesis [bvu00261]","SUID":172428}]
2025-03-06 13:59:44,514 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 173298}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 172644}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 172980}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 172248}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 172428}]
2025-03-06 13:59:44,514 [DEBUG] py4...: ǀReturning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 13:59:44,514 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Carbapenem biosynthesis [bvu00332]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,514 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Carbapenem biosynthesis [bvu00332]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:44,521 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 172248
}
],
 "errors":[]
}
2025-03-06 13:59:44,521 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 172248}]
2025-03-06 13:59:44,521 [DEBUG] py4...: Returning 'get_network_suid': 172248
2025-03-06 13:59:44,521 [DEBUG] py4...: --------------------
2025-03-06 13:59:44,522 [DEBUG] py4...: Calling get_network_suid('Monobactam biosynthesis [bvu00261]')
2025-03-06 13:59:44,522 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,522 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,522 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:44,526 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":173298},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":172644},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":172980},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":172248},{"name":"Monobactam biosynthesis [bvu00261]","SUID":172428}]
2025-03-06 13:59:44,527 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 173298}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 172644}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 172980}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 172248}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 172428}]
2025-03-06 13:59:44,528 [DEBUG] py4...: ǀReturning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 13:59:44,528 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Monobactam biosynthesis [bvu00261]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,528 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Monobactam biosynthesis [bvu00261]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:44,540 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 172428
}
],
 "errors":[]
}
2025-03-06 13:59:44,541 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 172428}]
2025-03-06 13:59:44,541 [DEBUG] py4...: Returning 'get_network_suid': 172428
2025-03-06 13:59:44,541 [DEBUG] py4...: --------------------
2025-03-06 13:59:44,541 [DEBUG] py4...: Calling export_network('networks_graphml/Degradation of flavonoids [bvu00946].graphml', 'graphml', network=173298, overwrite_file=True)
2025-03-06 13:59:44,541 [DEBUG] py4...: ǀCalling get_network_suid(173298, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,541 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,541 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:44,548 [DEBUG] py4...: ǀǀOK[200], content: [173298,172644,172980,172248,172428]
2025-03-06 13:59:44,548 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [173298, 172644, 172980, 172248, 172428]
2025-03-06 13:59:44,548 [DEBUG] py4...: ǀReturning 'get_network_suid': 173298
2025-03-06 13:59:44,548 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Degradation of flavonoids [bvu00946].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,548 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,548 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml'}
2025-03-06 13:59:44,554 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml","modifiedTime":"2025-03-06 13:58:23.0706","isFile":true},
 "errors":[]
}
2025-03-06 13:59:44,555 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml', 'modifiedTime': '2025-03-06 13:58:23.0706', 'isFile': True}
2025-03-06 13:59:44,555 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml', 'modifiedTime': '2025-03-06 13:58:23.0706', 'isFile': True}
2025-03-06 13:59:44,555 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Degradation of flavonoids [bvu00946].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,555 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,555 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml'}
2025-03-06 13:59:44,561 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:44,561 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml', 'existed': True}
2025-03-06 13:59:44,562 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml', 'existed': True}
2025-03-06 13:59:44,562 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:173298" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,562 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:173298', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml'}
2025-03-06 13:59:44,570 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml"},
 "errors":[]
}
2025-03-06 13:59:44,571 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml'}
2025-03-06 13:59:44,571 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml'}
2025-03-06 13:59:44,571 [DEBUG] py4...: --------------------
2025-03-06 13:59:44,571 [DEBUG] py4...: Calling export_network('networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', 'graphml', network=172644, overwrite_file=True)
2025-03-06 13:59:44,571 [DEBUG] py4...: ǀCalling get_network_suid(172644, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,571 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,571 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:44,581 [DEBUG] py4...: ǀǀOK[200], content: [173298,172644,172980,172248,172428]
2025-03-06 13:59:44,582 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [173298, 172644, 172980, 172248, 172428]
2025-03-06 13:59:44,582 [DEBUG] py4...: ǀReturning 'get_network_suid': 172644
2025-03-06 13:59:44,582 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,582 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,582 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml'}
2025-03-06 13:59:44,589 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml","modifiedTime":"2025-03-06 13:58:23.0729","isFile":true},
 "errors":[]
}
2025-03-06 13:59:44,589 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', 'modifiedTime': '2025-03-06 13:58:23.0729', 'isFile': True}
2025-03-06 13:59:44,589 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', 'modifiedTime': '2025-03-06 13:58:23.0729', 'isFile': True}
2025-03-06 13:59:44,589 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,589 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,589 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml'}
2025-03-06 13:59:44,592 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:44,593 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', 'existed': True}
2025-03-06 13:59:44,593 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', 'existed': True}
2025-03-06 13:59:44,593 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:172644" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,593 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:172644', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml'}
2025-03-06 13:59:44,598 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml"},
 "errors":[]
}
2025-03-06 13:59:44,599 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml'}
2025-03-06 13:59:44,599 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml'}
2025-03-06 13:59:44,599 [DEBUG] py4...: --------------------
2025-03-06 13:59:44,599 [DEBUG] py4...: Calling export_network('networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', 'graphml', network=172980, overwrite_file=True)
2025-03-06 13:59:44,599 [DEBUG] py4...: ǀCalling get_network_suid(172980, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,600 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,600 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:44,604 [DEBUG] py4...: ǀǀOK[200], content: [173298,172644,172980,172248,172428]
2025-03-06 13:59:44,604 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [173298, 172644, 172980, 172248, 172428]
2025-03-06 13:59:44,604 [DEBUG] py4...: ǀReturning 'get_network_suid': 172980
2025-03-06 13:59:44,604 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,604 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,604 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml'}
2025-03-06 13:59:44,608 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml","modifiedTime":"2025-03-06 13:58:23.0750","isFile":true},
 "errors":[]
}
2025-03-06 13:59:44,608 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', 'modifiedTime': '2025-03-06 13:58:23.0750', 'isFile': True}
2025-03-06 13:59:44,608 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', 'modifiedTime': '2025-03-06 13:58:23.0750', 'isFile': True}
2025-03-06 13:59:44,608 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,608 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,608 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml'}
2025-03-06 13:59:44,612 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:44,612 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', 'existed': True}
2025-03-06 13:59:44,612 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', 'existed': True}
2025-03-06 13:59:44,612 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:172980" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,612 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:172980', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml'}
2025-03-06 13:59:44,617 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml"},
 "errors":[]
}
2025-03-06 13:59:44,618 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml'}
2025-03-06 13:59:44,618 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml'}
2025-03-06 13:59:44,618 [DEBUG] py4...: --------------------
2025-03-06 13:59:44,618 [DEBUG] py4...: Calling export_network('networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', 'graphml', network=172248, overwrite_file=True)
2025-03-06 13:59:44,618 [DEBUG] py4...: ǀCalling get_network_suid(172248, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,618 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,618 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:44,635 [DEBUG] py4...: ǀǀOK[200], content: [173298,172644,172980,172248,172428]
2025-03-06 13:59:44,635 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [173298, 172644, 172980, 172248, 172428]
2025-03-06 13:59:44,635 [DEBUG] py4...: ǀReturning 'get_network_suid': 172248
2025-03-06 13:59:44,635 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,635 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,635 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml'}
2025-03-06 13:59:44,640 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml","modifiedTime":"2025-03-06 13:58:23.0770","isFile":true},
 "errors":[]
}
2025-03-06 13:59:44,640 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', 'modifiedTime': '2025-03-06 13:58:23.0770', 'isFile': True}
2025-03-06 13:59:44,640 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', 'modifiedTime': '2025-03-06 13:58:23.0770', 'isFile': True}
2025-03-06 13:59:44,640 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,640 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,640 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml'}
2025-03-06 13:59:44,645 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:44,645 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', 'existed': True}
2025-03-06 13:59:44,645 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', 'existed': True}
2025-03-06 13:59:44,645 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:172248" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,645 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:172248', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml'}
2025-03-06 13:59:44,653 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml"},
 "errors":[]
}
2025-03-06 13:59:44,653 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml'}
2025-03-06 13:59:44,653 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml'}
2025-03-06 13:59:44,653 [DEBUG] py4...: --------------------
2025-03-06 13:59:44,653 [DEBUG] py4...: Calling export_network('networks_graphml/Monobactam biosynthesis [bvu00261].graphml', 'graphml', network=172428, overwrite_file=True)
2025-03-06 13:59:44,653 [DEBUG] py4...: ǀCalling get_network_suid(172428, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,653 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,654 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:44,656 [DEBUG] py4...: ǀǀOK[200], content: [173298,172644,172980,172248,172428]
2025-03-06 13:59:44,657 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [173298, 172644, 172980, 172248, 172428]
2025-03-06 13:59:44,657 [DEBUG] py4...: ǀReturning 'get_network_suid': 172428
2025-03-06 13:59:44,657 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Monobactam biosynthesis [bvu00261].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,657 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,657 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml'}
2025-03-06 13:59:44,663 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml","modifiedTime":"2025-03-06 13:58:23.0796","isFile":true},
 "errors":[]
}
2025-03-06 13:59:44,664 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml', 'modifiedTime': '2025-03-06 13:58:23.0796', 'isFile': True}
2025-03-06 13:59:44,664 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml', 'modifiedTime': '2025-03-06 13:58:23.0796', 'isFile': True}
2025-03-06 13:59:44,664 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Monobactam biosynthesis [bvu00261].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,664 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,664 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml'}
2025-03-06 13:59:44,669 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:44,670 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml', 'existed': True}
2025-03-06 13:59:44,670 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml', 'existed': True}
2025-03-06 13:59:44,670 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:172428" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,670 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:172428', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml'}
2025-03-06 13:59:44,681 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml"},
 "errors":[]
}
2025-03-06 13:59:44,681 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml'}
2025-03-06 13:59:44,682 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml'}
2025-03-06 13:59:44,682 [DEBUG] py4...: --------------------
2025-03-06 13:59:44,682 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_15.cys')
2025-03-06 13:59:44,682 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_15.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:44,682 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_15.cys'}
2025-03-06 13:59:45,606 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:59:45,607 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:59:45,607 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:59:45,607 [DEBUG] py4...: --------------------
2025-03-06 13:59:45,608 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:59:45,608 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,610 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:45,618 [DEBUG] py4...: ǀOK[200], content: [{"name":"Novobiocin biosynthesis [bvu00401]","SUID":179251},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":178459},{"name":"Benzoate degradation [bvu00362]","SUID":178665},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":179465},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":179071}]
2025-03-06 13:59:45,618 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 179251}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 178459}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 178665}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 179465}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 179071}]
2025-03-06 13:59:45,618 [DEBUG] py4...: Returning 'get_network_list': ['Novobiocin biosynthesis [bvu00401]', 'Acarbose and validamycin biosynthesis [bvu00525]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Streptomycin biosynthesis [bvu00521]']
2025-03-06 13:59:45,618 [DEBUG] py4...: --------------------
2025-03-06 13:59:45,619 [DEBUG] py4...: Calling get_network_suid('Novobiocin biosynthesis [bvu00401]')
2025-03-06 13:59:45,619 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,619 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,619 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:45,624 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Novobiocin biosynthesis [bvu00401]","SUID":179251},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":178459},{"name":"Benzoate degradation [bvu00362]","SUID":178665},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":179465},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":179071}]
2025-03-06 13:59:45,624 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 179251}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 178459}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 178665}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 179465}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 179071}]
2025-03-06 13:59:45,624 [DEBUG] py4...: ǀReturning 'get_network_list': ['Novobiocin biosynthesis [bvu00401]', 'Acarbose and validamycin biosynthesis [bvu00525]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Streptomycin biosynthesis [bvu00521]']
2025-03-06 13:59:45,624 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Novobiocin biosynthesis [bvu00401]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,625 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Novobiocin biosynthesis [bvu00401]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:45,630 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 179251
}
],
 "errors":[]
}
2025-03-06 13:59:45,630 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 179251}]
2025-03-06 13:59:45,630 [DEBUG] py4...: Returning 'get_network_suid': 179251
2025-03-06 13:59:45,631 [DEBUG] py4...: --------------------
2025-03-06 13:59:45,631 [DEBUG] py4...: Calling get_network_suid('Acarbose and validamycin biosynthesis [bvu00525]')
2025-03-06 13:59:45,631 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,631 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,631 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:45,636 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Novobiocin biosynthesis [bvu00401]","SUID":179251},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":178459},{"name":"Benzoate degradation [bvu00362]","SUID":178665},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":179465},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":179071}]
2025-03-06 13:59:45,637 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 179251}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 178459}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 178665}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 179465}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 179071}]
2025-03-06 13:59:45,638 [DEBUG] py4...: ǀReturning 'get_network_list': ['Novobiocin biosynthesis [bvu00401]', 'Acarbose and validamycin biosynthesis [bvu00525]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Streptomycin biosynthesis [bvu00521]']
2025-03-06 13:59:45,638 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Acarbose and validamycin biosynthesis [bvu00525]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,638 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Acarbose and validamycin biosynthesis [bvu00525]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:45,643 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 178459
}
],
 "errors":[]
}
2025-03-06 13:59:45,643 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 178459}]
2025-03-06 13:59:45,643 [DEBUG] py4...: Returning 'get_network_suid': 178459
2025-03-06 13:59:45,643 [DEBUG] py4...: --------------------
2025-03-06 13:59:45,643 [DEBUG] py4...: Calling get_network_suid('Benzoate degradation [bvu00362]')
2025-03-06 13:59:45,643 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,643 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,643 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:45,646 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Novobiocin biosynthesis [bvu00401]","SUID":179251},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":178459},{"name":"Benzoate degradation [bvu00362]","SUID":178665},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":179465},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":179071}]
2025-03-06 13:59:45,646 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 179251}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 178459}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 178665}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 179465}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 179071}]
2025-03-06 13:59:45,646 [DEBUG] py4...: ǀReturning 'get_network_list': ['Novobiocin biosynthesis [bvu00401]', 'Acarbose and validamycin biosynthesis [bvu00525]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Streptomycin biosynthesis [bvu00521]']
2025-03-06 13:59:45,646 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Benzoate degradation [bvu00362]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,647 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Benzoate degradation [bvu00362]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:45,653 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 178665
}
],
 "errors":[]
}
2025-03-06 13:59:45,653 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 178665}]
2025-03-06 13:59:45,653 [DEBUG] py4...: Returning 'get_network_suid': 178665
2025-03-06 13:59:45,654 [DEBUG] py4...: --------------------
2025-03-06 13:59:45,654 [DEBUG] py4...: Calling get_network_suid('Biosynthesis of various plant secondary metabolites [bvu00999]')
2025-03-06 13:59:45,654 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,654 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,654 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:45,659 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Novobiocin biosynthesis [bvu00401]","SUID":179251},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":178459},{"name":"Benzoate degradation [bvu00362]","SUID":178665},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":179465},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":179071}]
2025-03-06 13:59:45,659 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 179251}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 178459}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 178665}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 179465}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 179071}]
2025-03-06 13:59:45,659 [DEBUG] py4...: ǀReturning 'get_network_list': ['Novobiocin biosynthesis [bvu00401]', 'Acarbose and validamycin biosynthesis [bvu00525]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Streptomycin biosynthesis [bvu00521]']
2025-03-06 13:59:45,660 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biosynthesis of various plant secondary metabolites [bvu00999]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,660 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:45,665 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 179465
}
],
 "errors":[]
}
2025-03-06 13:59:45,665 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 179465}]
2025-03-06 13:59:45,666 [DEBUG] py4...: Returning 'get_network_suid': 179465
2025-03-06 13:59:45,666 [DEBUG] py4...: --------------------
2025-03-06 13:59:45,666 [DEBUG] py4...: Calling get_network_suid('Streptomycin biosynthesis [bvu00521]')
2025-03-06 13:59:45,666 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,666 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,666 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:45,669 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Novobiocin biosynthesis [bvu00401]","SUID":179251},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":178459},{"name":"Benzoate degradation [bvu00362]","SUID":178665},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":179465},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":179071}]
2025-03-06 13:59:45,669 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 179251}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 178459}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 178665}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 179465}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 179071}]
2025-03-06 13:59:45,669 [DEBUG] py4...: ǀReturning 'get_network_list': ['Novobiocin biosynthesis [bvu00401]', 'Acarbose and validamycin biosynthesis [bvu00525]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Streptomycin biosynthesis [bvu00521]']
2025-03-06 13:59:45,669 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Streptomycin biosynthesis [bvu00521]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,669 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Streptomycin biosynthesis [bvu00521]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:45,673 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 179071
}
],
 "errors":[]
}
2025-03-06 13:59:45,673 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 179071}]
2025-03-06 13:59:45,673 [DEBUG] py4...: Returning 'get_network_suid': 179071
2025-03-06 13:59:45,673 [DEBUG] py4...: --------------------
2025-03-06 13:59:45,673 [DEBUG] py4...: Calling export_network('networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', 'graphml', network=179251, overwrite_file=True)
2025-03-06 13:59:45,673 [DEBUG] py4...: ǀCalling get_network_suid(179251, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,673 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,673 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:45,681 [DEBUG] py4...: ǀǀOK[200], content: [179251,178459,178665,179465,179071]
2025-03-06 13:59:45,681 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [179251, 178459, 178665, 179465, 179071]
2025-03-06 13:59:45,681 [DEBUG] py4...: ǀReturning 'get_network_suid': 179251
2025-03-06 13:59:45,681 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,681 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,682 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml'}
2025-03-06 13:59:45,688 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml","modifiedTime":"2025-03-06 13:58:26.0164","isFile":true},
 "errors":[]
}
2025-03-06 13:59:45,689 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', 'modifiedTime': '2025-03-06 13:58:26.0164', 'isFile': True}
2025-03-06 13:59:45,689 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', 'modifiedTime': '2025-03-06 13:58:26.0164', 'isFile': True}
2025-03-06 13:59:45,689 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,689 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,689 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml'}
2025-03-06 13:59:45,695 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:45,695 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', 'existed': True}
2025-03-06 13:59:45,696 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', 'existed': True}
2025-03-06 13:59:45,696 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:179251" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,696 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:179251', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml'}
2025-03-06 13:59:45,706 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml"},
 "errors":[]
}
2025-03-06 13:59:45,707 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml'}
2025-03-06 13:59:45,707 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml'}
2025-03-06 13:59:45,707 [DEBUG] py4...: --------------------
2025-03-06 13:59:45,707 [DEBUG] py4...: Calling export_network('networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', 'graphml', network=178459, overwrite_file=True)
2025-03-06 13:59:45,707 [DEBUG] py4...: ǀCalling get_network_suid(178459, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,707 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,707 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:45,712 [DEBUG] py4...: ǀǀOK[200], content: [179251,178459,178665,179465,179071]
2025-03-06 13:59:45,712 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [179251, 178459, 178665, 179465, 179071]
2025-03-06 13:59:45,713 [DEBUG] py4...: ǀReturning 'get_network_suid': 178459
2025-03-06 13:59:45,713 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,713 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,713 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml'}
2025-03-06 13:59:45,719 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml","modifiedTime":"2025-03-06 13:58:26.0227","isFile":true},
 "errors":[]
}
2025-03-06 13:59:45,719 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', 'modifiedTime': '2025-03-06 13:58:26.0227', 'isFile': True}
2025-03-06 13:59:45,720 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', 'modifiedTime': '2025-03-06 13:58:26.0227', 'isFile': True}
2025-03-06 13:59:45,720 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,720 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,720 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml'}
2025-03-06 13:59:45,728 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:45,729 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', 'existed': True}
2025-03-06 13:59:45,729 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', 'existed': True}
2025-03-06 13:59:45,729 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:178459" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,729 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:178459', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml'}
2025-03-06 13:59:45,739 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml"},
 "errors":[]
}
2025-03-06 13:59:45,740 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml'}
2025-03-06 13:59:45,740 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml'}
2025-03-06 13:59:45,740 [DEBUG] py4...: --------------------
2025-03-06 13:59:45,740 [DEBUG] py4...: Calling export_network('networks_graphml/Benzoate degradation [bvu00362].graphml', 'graphml', network=178665, overwrite_file=True)
2025-03-06 13:59:45,740 [DEBUG] py4...: ǀCalling get_network_suid(178665, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,740 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,740 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:45,745 [DEBUG] py4...: ǀǀOK[200], content: [179251,178459,178665,179465,179071]
2025-03-06 13:59:45,745 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [179251, 178459, 178665, 179465, 179071]
2025-03-06 13:59:45,745 [DEBUG] py4...: ǀReturning 'get_network_suid': 178665
2025-03-06 13:59:45,745 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Benzoate degradation [bvu00362].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,745 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,746 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml'}
2025-03-06 13:59:45,751 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml","modifiedTime":"2025-03-06 13:58:26.0187","isFile":true},
 "errors":[]
}
2025-03-06 13:59:45,752 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml', 'modifiedTime': '2025-03-06 13:58:26.0187', 'isFile': True}
2025-03-06 13:59:45,752 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml', 'modifiedTime': '2025-03-06 13:58:26.0187', 'isFile': True}
2025-03-06 13:59:45,752 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Benzoate degradation [bvu00362].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,752 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,752 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml'}
2025-03-06 13:59:45,763 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:45,763 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml', 'existed': True}
2025-03-06 13:59:45,763 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml', 'existed': True}
2025-03-06 13:59:45,763 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:178665" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,763 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:178665', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml'}
2025-03-06 13:59:45,775 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml"},
 "errors":[]
}
2025-03-06 13:59:45,775 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml'}
2025-03-06 13:59:45,776 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml'}
2025-03-06 13:59:45,776 [DEBUG] py4...: --------------------
2025-03-06 13:59:45,776 [DEBUG] py4...: Calling export_network('networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', 'graphml', network=179465, overwrite_file=True)
2025-03-06 13:59:45,776 [DEBUG] py4...: ǀCalling get_network_suid(179465, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,776 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,776 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:45,780 [DEBUG] py4...: ǀǀOK[200], content: [179251,178459,178665,179465,179071]
2025-03-06 13:59:45,781 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [179251, 178459, 178665, 179465, 179071]
2025-03-06 13:59:45,781 [DEBUG] py4...: ǀReturning 'get_network_suid': 179465
2025-03-06 13:59:45,781 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,781 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,781 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml'}
2025-03-06 13:59:45,789 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml","modifiedTime":"2025-03-06 13:58:26.0204","isFile":true},
 "errors":[]
}
2025-03-06 13:59:45,789 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', 'modifiedTime': '2025-03-06 13:58:26.0204', 'isFile': True}
2025-03-06 13:59:45,790 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', 'modifiedTime': '2025-03-06 13:58:26.0204', 'isFile': True}
2025-03-06 13:59:45,790 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,790 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,790 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml'}
2025-03-06 13:59:45,796 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:45,796 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', 'existed': True}
2025-03-06 13:59:45,796 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', 'existed': True}
2025-03-06 13:59:45,796 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:179465" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,796 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:179465', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml'}
2025-03-06 13:59:45,803 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml"},
 "errors":[]
}
2025-03-06 13:59:45,803 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml'}
2025-03-06 13:59:45,803 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml'}
2025-03-06 13:59:45,803 [DEBUG] py4...: --------------------
2025-03-06 13:59:45,803 [DEBUG] py4...: Calling export_network('networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', 'graphml', network=179071, overwrite_file=True)
2025-03-06 13:59:45,803 [DEBUG] py4...: ǀCalling get_network_suid(179071, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,803 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,803 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:45,806 [DEBUG] py4...: ǀǀOK[200], content: [179251,178459,178665,179465,179071]
2025-03-06 13:59:45,806 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [179251, 178459, 178665, 179465, 179071]
2025-03-06 13:59:45,806 [DEBUG] py4...: ǀReturning 'get_network_suid': 179071
2025-03-06 13:59:45,806 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,806 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,807 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml'}
2025-03-06 13:59:45,810 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml","modifiedTime":"2025-03-06 13:58:26.0243","isFile":true},
 "errors":[]
}
2025-03-06 13:59:45,811 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', 'modifiedTime': '2025-03-06 13:58:26.0243', 'isFile': True}
2025-03-06 13:59:45,811 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', 'modifiedTime': '2025-03-06 13:58:26.0243', 'isFile': True}
2025-03-06 13:59:45,811 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,811 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,811 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml'}
2025-03-06 13:59:45,818 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml","existed":true},
 "errors":[]
}
2025-03-06 13:59:45,818 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', 'existed': True}
2025-03-06 13:59:45,818 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', 'existed': True}
2025-03-06 13:59:45,818 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:179071" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,818 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:179071', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml'}
2025-03-06 13:59:45,825 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml"},
 "errors":[]
}
2025-03-06 13:59:45,826 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml'}
2025-03-06 13:59:45,826 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml'}
2025-03-06 13:59:45,826 [DEBUG] py4...: --------------------
2025-03-06 13:59:45,826 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_8.cys')
2025-03-06 13:59:45,826 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_8.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:45,826 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_8.cys'}
2025-03-06 13:59:46,836 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:59:46,837 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:59:46,837 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:59:46,837 [DEBUG] py4...: --------------------
2025-03-06 13:59:46,837 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:59:46,837 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,837 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:46,845 [DEBUG] py4...: ǀOK[200], content: [{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":186145},{"name":"Phenylalanine metabolism [bvu00360]","SUID":187025},{"name":"Tyrosine metabolism [bvu00350]","SUID":187623},{"name":"Histidine metabolism [bvu00340]","SUID":187333},{"name":"Arginine and proline metabolism [bvu00330]","SUID":186543}]
2025-03-06 13:59:46,845 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 186145}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 187025}, {'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 187623}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 187333}, {'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 186543}]
2025-03-06 13:59:46,845 [DEBUG] py4...: Returning 'get_network_list': ['Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]', 'Tyrosine metabolism [bvu00350]', 'Histidine metabolism [bvu00340]', 'Arginine and proline metabolism [bvu00330]']
2025-03-06 13:59:46,845 [DEBUG] py4...: --------------------
2025-03-06 13:59:46,846 [DEBUG] py4...: Calling get_network_suid('Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]')
2025-03-06 13:59:46,846 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,846 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,846 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:46,850 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":186145},{"name":"Phenylalanine metabolism [bvu00360]","SUID":187025},{"name":"Tyrosine metabolism [bvu00350]","SUID":187623},{"name":"Histidine metabolism [bvu00340]","SUID":187333},{"name":"Arginine and proline metabolism [bvu00330]","SUID":186543}]
2025-03-06 13:59:46,851 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 186145}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 187025}, {'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 187623}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 187333}, {'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 186543}]
2025-03-06 13:59:46,852 [DEBUG] py4...: ǀReturning 'get_network_list': ['Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]', 'Tyrosine metabolism [bvu00350]', 'Histidine metabolism [bvu00340]', 'Arginine and proline metabolism [bvu00330]']
2025-03-06 13:59:46,852 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,852 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:46,863 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 186145
}
],
 "errors":[]
}
2025-03-06 13:59:46,864 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 186145}]
2025-03-06 13:59:46,864 [DEBUG] py4...: Returning 'get_network_suid': 186145
2025-03-06 13:59:46,864 [DEBUG] py4...: --------------------
2025-03-06 13:59:46,864 [DEBUG] py4...: Calling get_network_suid('Phenylalanine metabolism [bvu00360]')
2025-03-06 13:59:46,864 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,864 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,864 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:46,870 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":186145},{"name":"Phenylalanine metabolism [bvu00360]","SUID":187025},{"name":"Tyrosine metabolism [bvu00350]","SUID":187623},{"name":"Histidine metabolism [bvu00340]","SUID":187333},{"name":"Arginine and proline metabolism [bvu00330]","SUID":186543}]
2025-03-06 13:59:46,870 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 186145}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 187025}, {'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 187623}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 187333}, {'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 186543}]
2025-03-06 13:59:46,871 [DEBUG] py4...: ǀReturning 'get_network_list': ['Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]', 'Tyrosine metabolism [bvu00350]', 'Histidine metabolism [bvu00340]', 'Arginine and proline metabolism [bvu00330]']
2025-03-06 13:59:46,871 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Phenylalanine metabolism [bvu00360]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,871 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Phenylalanine metabolism [bvu00360]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:46,877 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 187025
}
],
 "errors":[]
}
2025-03-06 13:59:46,878 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 187025}]
2025-03-06 13:59:46,878 [DEBUG] py4...: Returning 'get_network_suid': 187025
2025-03-06 13:59:46,878 [DEBUG] py4...: --------------------
2025-03-06 13:59:46,878 [DEBUG] py4...: Calling get_network_suid('Tyrosine metabolism [bvu00350]')
2025-03-06 13:59:46,878 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,878 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,878 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:46,883 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":186145},{"name":"Phenylalanine metabolism [bvu00360]","SUID":187025},{"name":"Tyrosine metabolism [bvu00350]","SUID":187623},{"name":"Histidine metabolism [bvu00340]","SUID":187333},{"name":"Arginine and proline metabolism [bvu00330]","SUID":186543}]
2025-03-06 13:59:46,883 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 186145}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 187025}, {'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 187623}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 187333}, {'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 186543}]
2025-03-06 13:59:46,883 [DEBUG] py4...: ǀReturning 'get_network_list': ['Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]', 'Tyrosine metabolism [bvu00350]', 'Histidine metabolism [bvu00340]', 'Arginine and proline metabolism [bvu00330]']
2025-03-06 13:59:46,886 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Tyrosine metabolism [bvu00350]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,886 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Tyrosine metabolism [bvu00350]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:46,894 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 187623
}
],
 "errors":[]
}
2025-03-06 13:59:46,896 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 187623}]
2025-03-06 13:59:46,896 [DEBUG] py4...: Returning 'get_network_suid': 187623
2025-03-06 13:59:46,896 [DEBUG] py4...: --------------------
2025-03-06 13:59:46,896 [DEBUG] py4...: Calling get_network_suid('Histidine metabolism [bvu00340]')
2025-03-06 13:59:46,896 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,896 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,896 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:46,904 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":186145},{"name":"Phenylalanine metabolism [bvu00360]","SUID":187025},{"name":"Tyrosine metabolism [bvu00350]","SUID":187623},{"name":"Histidine metabolism [bvu00340]","SUID":187333},{"name":"Arginine and proline metabolism [bvu00330]","SUID":186543}]
2025-03-06 13:59:46,906 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 186145}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 187025}, {'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 187623}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 187333}, {'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 186543}]
2025-03-06 13:59:46,906 [DEBUG] py4...: ǀReturning 'get_network_list': ['Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]', 'Tyrosine metabolism [bvu00350]', 'Histidine metabolism [bvu00340]', 'Arginine and proline metabolism [bvu00330]']
2025-03-06 13:59:46,906 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Histidine metabolism [bvu00340]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,906 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Histidine metabolism [bvu00340]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:46,915 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 187333
}
],
 "errors":[]
}
2025-03-06 13:59:46,916 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 187333}]
2025-03-06 13:59:46,916 [DEBUG] py4...: Returning 'get_network_suid': 187333
2025-03-06 13:59:46,916 [DEBUG] py4...: --------------------
2025-03-06 13:59:46,916 [DEBUG] py4...: Calling get_network_suid('Arginine and proline metabolism [bvu00330]')
2025-03-06 13:59:46,916 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,916 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,917 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:46,924 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":186145},{"name":"Phenylalanine metabolism [bvu00360]","SUID":187025},{"name":"Tyrosine metabolism [bvu00350]","SUID":187623},{"name":"Histidine metabolism [bvu00340]","SUID":187333},{"name":"Arginine and proline metabolism [bvu00330]","SUID":186543}]
2025-03-06 13:59:46,924 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 186145}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 187025}, {'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 187623}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 187333}, {'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 186543}]
2025-03-06 13:59:46,924 [DEBUG] py4...: ǀReturning 'get_network_list': ['Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]', 'Tyrosine metabolism [bvu00350]', 'Histidine metabolism [bvu00340]', 'Arginine and proline metabolism [bvu00330]']
2025-03-06 13:59:46,924 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Arginine and proline metabolism [bvu00330]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,924 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Arginine and proline metabolism [bvu00330]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:46,928 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 186543
}
],
 "errors":[]
}
2025-03-06 13:59:46,928 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 186543}]
2025-03-06 13:59:46,928 [DEBUG] py4...: Returning 'get_network_suid': 186543
2025-03-06 13:59:46,929 [DEBUG] py4...: --------------------
2025-03-06 13:59:46,929 [DEBUG] py4...: Calling export_network('networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml', 'graphml', network=186145, overwrite_file=True)
2025-03-06 13:59:46,929 [DEBUG] py4...: ǀCalling get_network_suid(186145, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,929 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,929 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:46,932 [DEBUG] py4...: ǀǀOK[200], content: [186145,187025,187623,187333,186543]
2025-03-06 13:59:46,932 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [186145, 187025, 187623, 187333, 186543]
2025-03-06 13:59:46,932 [DEBUG] py4...: ǀReturning 'get_network_suid': 186145
2025-03-06 13:59:46,932 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,932 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,932 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml'}
2025-03-06 13:59:46,936 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:46,936 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:46,936 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:46,936 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:186145" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,936 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:186145', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml'}
2025-03-06 13:59:46,945 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml"},
 "errors":[]
}
2025-03-06 13:59:46,946 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml'}
2025-03-06 13:59:46,946 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml'}
2025-03-06 13:59:46,946 [DEBUG] py4...: --------------------
2025-03-06 13:59:46,946 [DEBUG] py4...: Calling export_network('networks_graphml/Phenylalanine metabolism [bvu00360].graphml', 'graphml', network=187025, overwrite_file=True)
2025-03-06 13:59:46,946 [DEBUG] py4...: ǀCalling get_network_suid(187025, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,946 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,946 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:46,953 [DEBUG] py4...: ǀǀOK[200], content: [186145,187025,187623,187333,186543]
2025-03-06 13:59:46,954 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [186145, 187025, 187623, 187333, 186543]
2025-03-06 13:59:46,954 [DEBUG] py4...: ǀReturning 'get_network_suid': 187025
2025-03-06 13:59:46,955 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Phenylalanine metabolism [bvu00360].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,955 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,955 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml'}
2025-03-06 13:59:46,960 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:46,961 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:46,961 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:46,961 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:187025" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,961 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:187025', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml'}
2025-03-06 13:59:46,969 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml"},
 "errors":[]
}
2025-03-06 13:59:46,970 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml'}
2025-03-06 13:59:46,970 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml'}
2025-03-06 13:59:46,970 [DEBUG] py4...: --------------------
2025-03-06 13:59:46,970 [DEBUG] py4...: Calling export_network('networks_graphml/Tyrosine metabolism [bvu00350].graphml', 'graphml', network=187623, overwrite_file=True)
2025-03-06 13:59:46,970 [DEBUG] py4...: ǀCalling get_network_suid(187623, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,970 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,970 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:46,975 [DEBUG] py4...: ǀǀOK[200], content: [186145,187025,187623,187333,186543]
2025-03-06 13:59:46,976 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [186145, 187025, 187623, 187333, 186543]
2025-03-06 13:59:46,977 [DEBUG] py4...: ǀReturning 'get_network_suid': 187623
2025-03-06 13:59:46,977 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Tyrosine metabolism [bvu00350].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,977 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,978 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml'}
2025-03-06 13:59:46,983 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:46,984 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:46,984 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:46,984 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:187623" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,984 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:187623', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml'}
2025-03-06 13:59:46,990 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml"},
 "errors":[]
}
2025-03-06 13:59:46,994 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml'}
2025-03-06 13:59:46,994 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml'}
2025-03-06 13:59:46,994 [DEBUG] py4...: --------------------
2025-03-06 13:59:46,994 [DEBUG] py4...: Calling export_network('networks_graphml/Histidine metabolism [bvu00340].graphml', 'graphml', network=187333, overwrite_file=True)
2025-03-06 13:59:46,994 [DEBUG] py4...: ǀCalling get_network_suid(187333, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,994 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,994 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:46,999 [DEBUG] py4...: ǀǀOK[200], content: [186145,187025,187623,187333,186543]
2025-03-06 13:59:46,999 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [186145, 187025, 187623, 187333, 186543]
2025-03-06 13:59:46,999 [DEBUG] py4...: ǀReturning 'get_network_suid': 187333
2025-03-06 13:59:46,999 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Histidine metabolism [bvu00340].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,999 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:46,999 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml'}
2025-03-06 13:59:47,002 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:47,003 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:47,003 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:47,003 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:187333" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,003 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:187333', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml'}
2025-03-06 13:59:47,014 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml"},
 "errors":[]
}
2025-03-06 13:59:47,015 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml'}
2025-03-06 13:59:47,015 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml'}
2025-03-06 13:59:47,015 [DEBUG] py4...: --------------------
2025-03-06 13:59:47,015 [DEBUG] py4...: Calling export_network('networks_graphml/Arginine and proline metabolism [bvu00330].graphml', 'graphml', network=186543, overwrite_file=True)
2025-03-06 13:59:47,015 [DEBUG] py4...: ǀCalling get_network_suid(186543, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,015 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,015 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:47,019 [DEBUG] py4...: ǀǀOK[200], content: [186145,187025,187623,187333,186543]
2025-03-06 13:59:47,019 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [186145, 187025, 187623, 187333, 186543]
2025-03-06 13:59:47,019 [DEBUG] py4...: ǀReturning 'get_network_suid': 186543
2025-03-06 13:59:47,019 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Arginine and proline metabolism [bvu00330].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,019 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,019 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml'}
2025-03-06 13:59:47,024 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:47,027 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:47,027 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:47,027 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:186543" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,028 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:186543', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml'}
2025-03-06 13:59:47,035 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml"},
 "errors":[]
}
2025-03-06 13:59:47,035 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml'}
2025-03-06 13:59:47,035 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml'}
2025-03-06 13:59:47,035 [DEBUG] py4...: --------------------
2025-03-06 13:59:47,035 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_17.cys')
2025-03-06 13:59:47,035 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_17.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,035 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_17.cys'}
2025-03-06 13:59:47,855 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:59:47,856 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:59:47,856 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:59:47,856 [DEBUG] py4...: --------------------
2025-03-06 13:59:47,857 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:59:47,857 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,857 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:47,869 [DEBUG] py4...: ǀOK[200], content: [{"name":"RNA degradation [bvu03018]","SUID":194882},{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":195712},{"name":"Protein export [bvu03060]","SUID":195172},{"name":"Sulfur relay system [bvu04122]","SUID":195336},{"name":"DNA replication [bvu03030]","SUID":195516}]
2025-03-06 13:59:47,870 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'RNA degradation [bvu03018]', 'SUID': 194882}, {'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 195712}, {'name': 'Protein export [bvu03060]', 'SUID': 195172}, {'name': 'Sulfur relay system [bvu04122]', 'SUID': 195336}, {'name': 'DNA replication [bvu03030]', 'SUID': 195516}]
2025-03-06 13:59:47,870 [DEBUG] py4...: Returning 'get_network_list': ['RNA degradation [bvu03018]', 'Protein processing in endoplasmic reticulum [bvu04141]', 'Protein export [bvu03060]', 'Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]']
2025-03-06 13:59:47,870 [DEBUG] py4...: --------------------
2025-03-06 13:59:47,870 [DEBUG] py4...: Calling get_network_suid('RNA degradation [bvu03018]')
2025-03-06 13:59:47,870 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,870 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,870 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:47,877 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"RNA degradation [bvu03018]","SUID":194882},{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":195712},{"name":"Protein export [bvu03060]","SUID":195172},{"name":"Sulfur relay system [bvu04122]","SUID":195336},{"name":"DNA replication [bvu03030]","SUID":195516}]
2025-03-06 13:59:47,877 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'RNA degradation [bvu03018]', 'SUID': 194882}, {'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 195712}, {'name': 'Protein export [bvu03060]', 'SUID': 195172}, {'name': 'Sulfur relay system [bvu04122]', 'SUID': 195336}, {'name': 'DNA replication [bvu03030]', 'SUID': 195516}]
2025-03-06 13:59:47,877 [DEBUG] py4...: ǀReturning 'get_network_list': ['RNA degradation [bvu03018]', 'Protein processing in endoplasmic reticulum [bvu04141]', 'Protein export [bvu03060]', 'Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]']
2025-03-06 13:59:47,877 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="RNA degradation [bvu03018]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,878 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'RNA degradation [bvu03018]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:47,887 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 194882
}
],
 "errors":[]
}
2025-03-06 13:59:47,887 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 194882}]
2025-03-06 13:59:47,887 [DEBUG] py4...: Returning 'get_network_suid': 194882
2025-03-06 13:59:47,887 [DEBUG] py4...: --------------------
2025-03-06 13:59:47,887 [DEBUG] py4...: Calling get_network_suid('Protein processing in endoplasmic reticulum [bvu04141]')
2025-03-06 13:59:47,887 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,887 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,887 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:47,892 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"RNA degradation [bvu03018]","SUID":194882},{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":195712},{"name":"Protein export [bvu03060]","SUID":195172},{"name":"Sulfur relay system [bvu04122]","SUID":195336},{"name":"DNA replication [bvu03030]","SUID":195516}]
2025-03-06 13:59:47,892 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'RNA degradation [bvu03018]', 'SUID': 194882}, {'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 195712}, {'name': 'Protein export [bvu03060]', 'SUID': 195172}, {'name': 'Sulfur relay system [bvu04122]', 'SUID': 195336}, {'name': 'DNA replication [bvu03030]', 'SUID': 195516}]
2025-03-06 13:59:47,892 [DEBUG] py4...: ǀReturning 'get_network_list': ['RNA degradation [bvu03018]', 'Protein processing in endoplasmic reticulum [bvu04141]', 'Protein export [bvu03060]', 'Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]']
2025-03-06 13:59:47,892 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Protein processing in endoplasmic reticulum [bvu04141]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,893 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Protein processing in endoplasmic reticulum [bvu04141]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:47,899 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 195712
}
],
 "errors":[]
}
2025-03-06 13:59:47,900 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 195712}]
2025-03-06 13:59:47,900 [DEBUG] py4...: Returning 'get_network_suid': 195712
2025-03-06 13:59:47,900 [DEBUG] py4...: --------------------
2025-03-06 13:59:47,900 [DEBUG] py4...: Calling get_network_suid('Protein export [bvu03060]')
2025-03-06 13:59:47,900 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,900 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,900 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:47,903 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"RNA degradation [bvu03018]","SUID":194882},{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":195712},{"name":"Protein export [bvu03060]","SUID":195172},{"name":"Sulfur relay system [bvu04122]","SUID":195336},{"name":"DNA replication [bvu03030]","SUID":195516}]
2025-03-06 13:59:47,903 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'RNA degradation [bvu03018]', 'SUID': 194882}, {'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 195712}, {'name': 'Protein export [bvu03060]', 'SUID': 195172}, {'name': 'Sulfur relay system [bvu04122]', 'SUID': 195336}, {'name': 'DNA replication [bvu03030]', 'SUID': 195516}]
2025-03-06 13:59:47,903 [DEBUG] py4...: ǀReturning 'get_network_list': ['RNA degradation [bvu03018]', 'Protein processing in endoplasmic reticulum [bvu04141]', 'Protein export [bvu03060]', 'Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]']
2025-03-06 13:59:47,903 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Protein export [bvu03060]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,904 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Protein export [bvu03060]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:47,907 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 195172
}
],
 "errors":[]
}
2025-03-06 13:59:47,907 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 195172}]
2025-03-06 13:59:47,907 [DEBUG] py4...: Returning 'get_network_suid': 195172
2025-03-06 13:59:47,908 [DEBUG] py4...: --------------------
2025-03-06 13:59:47,908 [DEBUG] py4...: Calling get_network_suid('Sulfur relay system [bvu04122]')
2025-03-06 13:59:47,908 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,908 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,908 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:47,916 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"RNA degradation [bvu03018]","SUID":194882},{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":195712},{"name":"Protein export [bvu03060]","SUID":195172},{"name":"Sulfur relay system [bvu04122]","SUID":195336},{"name":"DNA replication [bvu03030]","SUID":195516}]
2025-03-06 13:59:47,917 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'RNA degradation [bvu03018]', 'SUID': 194882}, {'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 195712}, {'name': 'Protein export [bvu03060]', 'SUID': 195172}, {'name': 'Sulfur relay system [bvu04122]', 'SUID': 195336}, {'name': 'DNA replication [bvu03030]', 'SUID': 195516}]
2025-03-06 13:59:47,917 [DEBUG] py4...: ǀReturning 'get_network_list': ['RNA degradation [bvu03018]', 'Protein processing in endoplasmic reticulum [bvu04141]', 'Protein export [bvu03060]', 'Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]']
2025-03-06 13:59:47,917 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Sulfur relay system [bvu04122]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,918 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Sulfur relay system [bvu04122]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:47,925 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 195336
}
],
 "errors":[]
}
2025-03-06 13:59:47,925 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 195336}]
2025-03-06 13:59:47,925 [DEBUG] py4...: Returning 'get_network_suid': 195336
2025-03-06 13:59:47,925 [DEBUG] py4...: --------------------
2025-03-06 13:59:47,926 [DEBUG] py4...: Calling get_network_suid('DNA replication [bvu03030]')
2025-03-06 13:59:47,926 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,926 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,926 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:47,929 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"RNA degradation [bvu03018]","SUID":194882},{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":195712},{"name":"Protein export [bvu03060]","SUID":195172},{"name":"Sulfur relay system [bvu04122]","SUID":195336},{"name":"DNA replication [bvu03030]","SUID":195516}]
2025-03-06 13:59:47,930 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'RNA degradation [bvu03018]', 'SUID': 194882}, {'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 195712}, {'name': 'Protein export [bvu03060]', 'SUID': 195172}, {'name': 'Sulfur relay system [bvu04122]', 'SUID': 195336}, {'name': 'DNA replication [bvu03030]', 'SUID': 195516}]
2025-03-06 13:59:47,930 [DEBUG] py4...: ǀReturning 'get_network_list': ['RNA degradation [bvu03018]', 'Protein processing in endoplasmic reticulum [bvu04141]', 'Protein export [bvu03060]', 'Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]']
2025-03-06 13:59:47,930 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="DNA replication [bvu03030]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,930 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'DNA replication [bvu03030]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:47,935 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 195516
}
],
 "errors":[]
}
2025-03-06 13:59:47,935 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 195516}]
2025-03-06 13:59:47,936 [DEBUG] py4...: Returning 'get_network_suid': 195516
2025-03-06 13:59:47,936 [DEBUG] py4...: --------------------
2025-03-06 13:59:47,936 [DEBUG] py4...: Calling export_network('networks_graphml/RNA degradation [bvu03018].graphml', 'graphml', network=194882, overwrite_file=True)
2025-03-06 13:59:47,936 [DEBUG] py4...: ǀCalling get_network_suid(194882, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,936 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,936 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:47,946 [DEBUG] py4...: ǀǀOK[200], content: [194882,195712,195172,195336,195516]
2025-03-06 13:59:47,946 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [194882, 195712, 195172, 195336, 195516]
2025-03-06 13:59:47,946 [DEBUG] py4...: ǀReturning 'get_network_suid': 194882
2025-03-06 13:59:47,946 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/RNA degradation [bvu03018].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,946 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,946 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml'}
2025-03-06 13:59:47,963 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:47,964 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:47,964 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:47,964 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:194882" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:47,965 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:194882', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml'}
2025-03-06 13:59:48,011 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml"},
 "errors":[]
}
2025-03-06 13:59:48,012 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml'}
2025-03-06 13:59:48,012 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml'}
2025-03-06 13:59:48,013 [DEBUG] py4...: --------------------
2025-03-06 13:59:48,013 [DEBUG] py4...: Calling export_network('networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml', 'graphml', network=195712, overwrite_file=True)
2025-03-06 13:59:48,013 [DEBUG] py4...: ǀCalling get_network_suid(195712, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,013 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,013 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:48,029 [DEBUG] py4...: ǀǀOK[200], content: [194882,195712,195172,195336,195516]
2025-03-06 13:59:48,029 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [194882, 195712, 195172, 195336, 195516]
2025-03-06 13:59:48,030 [DEBUG] py4...: ǀReturning 'get_network_suid': 195712
2025-03-06 13:59:48,030 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,030 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,030 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml'}
2025-03-06 13:59:48,036 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:48,036 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:48,036 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:48,036 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:195712" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,036 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:195712', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml'}
2025-03-06 13:59:48,061 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml"},
 "errors":[]
}
2025-03-06 13:59:48,061 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml'}
2025-03-06 13:59:48,061 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml'}
2025-03-06 13:59:48,061 [DEBUG] py4...: --------------------
2025-03-06 13:59:48,061 [DEBUG] py4...: Calling export_network('networks_graphml/Protein export [bvu03060].graphml', 'graphml', network=195172, overwrite_file=True)
2025-03-06 13:59:48,061 [DEBUG] py4...: ǀCalling get_network_suid(195172, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,061 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,061 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:48,065 [DEBUG] py4...: ǀǀOK[200], content: [194882,195712,195172,195336,195516]
2025-03-06 13:59:48,065 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [194882, 195712, 195172, 195336, 195516]
2025-03-06 13:59:48,065 [DEBUG] py4...: ǀReturning 'get_network_suid': 195172
2025-03-06 13:59:48,065 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Protein export [bvu03060].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,065 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,065 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml'}
2025-03-06 13:59:48,070 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:48,070 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:48,070 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:48,070 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:195172" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,070 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:195172', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml'}
2025-03-06 13:59:48,076 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml"},
 "errors":[]
}
2025-03-06 13:59:48,076 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml'}
2025-03-06 13:59:48,076 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml'}
2025-03-06 13:59:48,076 [DEBUG] py4...: --------------------
2025-03-06 13:59:48,076 [DEBUG] py4...: Calling export_network('networks_graphml/Sulfur relay system [bvu04122].graphml', 'graphml', network=195336, overwrite_file=True)
2025-03-06 13:59:48,076 [DEBUG] py4...: ǀCalling get_network_suid(195336, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,076 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,076 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:48,079 [DEBUG] py4...: ǀǀOK[200], content: [194882,195712,195172,195336,195516]
2025-03-06 13:59:48,079 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [194882, 195712, 195172, 195336, 195516]
2025-03-06 13:59:48,079 [DEBUG] py4...: ǀReturning 'get_network_suid': 195336
2025-03-06 13:59:48,079 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Sulfur relay system [bvu04122].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,079 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,079 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml'}
2025-03-06 13:59:48,082 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:48,082 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:48,082 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:48,082 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:195336" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,082 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:195336', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml'}
2025-03-06 13:59:48,087 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml"},
 "errors":[]
}
2025-03-06 13:59:48,088 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml'}
2025-03-06 13:59:48,088 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml'}
2025-03-06 13:59:48,088 [DEBUG] py4...: --------------------
2025-03-06 13:59:48,088 [DEBUG] py4...: Calling export_network('networks_graphml/DNA replication [bvu03030].graphml', 'graphml', network=195516, overwrite_file=True)
2025-03-06 13:59:48,088 [DEBUG] py4...: ǀCalling get_network_suid(195516, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,088 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,088 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:48,090 [DEBUG] py4...: ǀǀOK[200], content: [194882,195712,195172,195336,195516]
2025-03-06 13:59:48,091 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [194882, 195712, 195172, 195336, 195516]
2025-03-06 13:59:48,091 [DEBUG] py4...: ǀReturning 'get_network_suid': 195516
2025-03-06 13:59:48,091 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/DNA replication [bvu03030].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,091 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,091 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml'}
2025-03-06 13:59:48,095 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:48,095 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:48,095 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:48,095 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:195516" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,095 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:195516', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml'}
2025-03-06 13:59:48,102 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml"},
 "errors":[]
}
2025-03-06 13:59:48,102 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml'}
2025-03-06 13:59:48,102 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml'}
2025-03-06 13:59:48,102 [DEBUG] py4...: --------------------
2025-03-06 13:59:48,102 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_16.cys')
2025-03-06 13:59:48,102 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_16.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:48,102 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_16.cys'}
2025-03-06 13:59:49,026 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:59:49,027 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:59:49,027 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:59:49,027 [DEBUG] py4...: --------------------
2025-03-06 13:59:49,028 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:59:49,028 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,028 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:49,036 [DEBUG] py4...: ǀOK[200], content: [{"name":"Naphthalene degradation [bvu00626]","SUID":200759},{"name":"Ribosome [bvu03010]","SUID":200117},{"name":"Chloroalkane and chloroalkene degradation [bvu00625]","SUID":200537},{"name":"Aminoacyl-tRNA biosynthesis [bvu00970]","SUID":201199},{"name":"RNA polymerase [bvu03020]","SUID":201005}]
2025-03-06 13:59:49,037 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Naphthalene degradation [bvu00626]', 'SUID': 200759}, {'name': 'Ribosome [bvu03010]', 'SUID': 200117}, {'name': 'Chloroalkane and chloroalkene degradation [bvu00625]', 'SUID': 200537}, {'name': 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'SUID': 201199}, {'name': 'RNA polymerase [bvu03020]', 'SUID': 201005}]
2025-03-06 13:59:49,037 [DEBUG] py4...: Returning 'get_network_list': ['Naphthalene degradation [bvu00626]', 'Ribosome [bvu03010]', 'Chloroalkane and chloroalkene degradation [bvu00625]', 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'RNA polymerase [bvu03020]']
2025-03-06 13:59:49,037 [DEBUG] py4...: --------------------
2025-03-06 13:59:49,037 [DEBUG] py4...: Calling get_network_suid('Naphthalene degradation [bvu00626]')
2025-03-06 13:59:49,037 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,037 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,037 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:49,043 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Naphthalene degradation [bvu00626]","SUID":200759},{"name":"Ribosome [bvu03010]","SUID":200117},{"name":"Chloroalkane and chloroalkene degradation [bvu00625]","SUID":200537},{"name":"Aminoacyl-tRNA biosynthesis [bvu00970]","SUID":201199},{"name":"RNA polymerase [bvu03020]","SUID":201005}]
2025-03-06 13:59:49,045 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Naphthalene degradation [bvu00626]', 'SUID': 200759}, {'name': 'Ribosome [bvu03010]', 'SUID': 200117}, {'name': 'Chloroalkane and chloroalkene degradation [bvu00625]', 'SUID': 200537}, {'name': 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'SUID': 201199}, {'name': 'RNA polymerase [bvu03020]', 'SUID': 201005}]
2025-03-06 13:59:49,045 [DEBUG] py4...: ǀReturning 'get_network_list': ['Naphthalene degradation [bvu00626]', 'Ribosome [bvu03010]', 'Chloroalkane and chloroalkene degradation [bvu00625]', 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'RNA polymerase [bvu03020]']
2025-03-06 13:59:49,045 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Naphthalene degradation [bvu00626]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,045 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Naphthalene degradation [bvu00626]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:49,055 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 200759
}
],
 "errors":[]
}
2025-03-06 13:59:49,056 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 200759}]
2025-03-06 13:59:49,056 [DEBUG] py4...: Returning 'get_network_suid': 200759
2025-03-06 13:59:49,056 [DEBUG] py4...: --------------------
2025-03-06 13:59:49,056 [DEBUG] py4...: Calling get_network_suid('Ribosome [bvu03010]')
2025-03-06 13:59:49,056 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,056 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,056 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:49,064 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Naphthalene degradation [bvu00626]","SUID":200759},{"name":"Ribosome [bvu03010]","SUID":200117},{"name":"Chloroalkane and chloroalkene degradation [bvu00625]","SUID":200537},{"name":"Aminoacyl-tRNA biosynthesis [bvu00970]","SUID":201199},{"name":"RNA polymerase [bvu03020]","SUID":201005}]
2025-03-06 13:59:49,064 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Naphthalene degradation [bvu00626]', 'SUID': 200759}, {'name': 'Ribosome [bvu03010]', 'SUID': 200117}, {'name': 'Chloroalkane and chloroalkene degradation [bvu00625]', 'SUID': 200537}, {'name': 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'SUID': 201199}, {'name': 'RNA polymerase [bvu03020]', 'SUID': 201005}]
2025-03-06 13:59:49,064 [DEBUG] py4...: ǀReturning 'get_network_list': ['Naphthalene degradation [bvu00626]', 'Ribosome [bvu03010]', 'Chloroalkane and chloroalkene degradation [bvu00625]', 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'RNA polymerase [bvu03020]']
2025-03-06 13:59:49,064 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Ribosome [bvu03010]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,064 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Ribosome [bvu03010]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:49,068 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 200117
}
],
 "errors":[]
}
2025-03-06 13:59:49,068 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 200117}]
2025-03-06 13:59:49,068 [DEBUG] py4...: Returning 'get_network_suid': 200117
2025-03-06 13:59:49,068 [DEBUG] py4...: --------------------
2025-03-06 13:59:49,068 [DEBUG] py4...: Calling get_network_suid('Chloroalkane and chloroalkene degradation [bvu00625]')
2025-03-06 13:59:49,068 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,068 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,068 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:49,082 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Naphthalene degradation [bvu00626]","SUID":200759},{"name":"Ribosome [bvu03010]","SUID":200117},{"name":"Chloroalkane and chloroalkene degradation [bvu00625]","SUID":200537},{"name":"Aminoacyl-tRNA biosynthesis [bvu00970]","SUID":201199},{"name":"RNA polymerase [bvu03020]","SUID":201005}]
2025-03-06 13:59:49,084 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Naphthalene degradation [bvu00626]', 'SUID': 200759}, {'name': 'Ribosome [bvu03010]', 'SUID': 200117}, {'name': 'Chloroalkane and chloroalkene degradation [bvu00625]', 'SUID': 200537}, {'name': 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'SUID': 201199}, {'name': 'RNA polymerase [bvu03020]', 'SUID': 201005}]
2025-03-06 13:59:49,085 [DEBUG] py4...: ǀReturning 'get_network_list': ['Naphthalene degradation [bvu00626]', 'Ribosome [bvu03010]', 'Chloroalkane and chloroalkene degradation [bvu00625]', 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'RNA polymerase [bvu03020]']
2025-03-06 13:59:49,085 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Chloroalkane and chloroalkene degradation [bvu00625]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,085 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Chloroalkane and chloroalkene degradation [bvu00625]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:49,098 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 200537
}
],
 "errors":[]
}
2025-03-06 13:59:49,102 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 200537}]
2025-03-06 13:59:49,103 [DEBUG] py4...: Returning 'get_network_suid': 200537
2025-03-06 13:59:49,103 [DEBUG] py4...: --------------------
2025-03-06 13:59:49,103 [DEBUG] py4...: Calling get_network_suid('Aminoacyl-tRNA biosynthesis [bvu00970]')
2025-03-06 13:59:49,103 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,103 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,104 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:49,146 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Naphthalene degradation [bvu00626]","SUID":200759},{"name":"Ribosome [bvu03010]","SUID":200117},{"name":"Chloroalkane and chloroalkene degradation [bvu00625]","SUID":200537},{"name":"Aminoacyl-tRNA biosynthesis [bvu00970]","SUID":201199},{"name":"RNA polymerase [bvu03020]","SUID":201005}]
2025-03-06 13:59:49,147 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Naphthalene degradation [bvu00626]', 'SUID': 200759}, {'name': 'Ribosome [bvu03010]', 'SUID': 200117}, {'name': 'Chloroalkane and chloroalkene degradation [bvu00625]', 'SUID': 200537}, {'name': 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'SUID': 201199}, {'name': 'RNA polymerase [bvu03020]', 'SUID': 201005}]
2025-03-06 13:59:49,147 [DEBUG] py4...: ǀReturning 'get_network_list': ['Naphthalene degradation [bvu00626]', 'Ribosome [bvu03010]', 'Chloroalkane and chloroalkene degradation [bvu00625]', 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'RNA polymerase [bvu03020]']
2025-03-06 13:59:49,147 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Aminoacyl-tRNA biosynthesis [bvu00970]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,147 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:49,156 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 201199
}
],
 "errors":[]
}
2025-03-06 13:59:49,156 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 201199}]
2025-03-06 13:59:49,156 [DEBUG] py4...: Returning 'get_network_suid': 201199
2025-03-06 13:59:49,157 [DEBUG] py4...: --------------------
2025-03-06 13:59:49,157 [DEBUG] py4...: Calling get_network_suid('RNA polymerase [bvu03020]')
2025-03-06 13:59:49,157 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,157 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,157 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:49,167 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Naphthalene degradation [bvu00626]","SUID":200759},{"name":"Ribosome [bvu03010]","SUID":200117},{"name":"Chloroalkane and chloroalkene degradation [bvu00625]","SUID":200537},{"name":"Aminoacyl-tRNA biosynthesis [bvu00970]","SUID":201199},{"name":"RNA polymerase [bvu03020]","SUID":201005}]
2025-03-06 13:59:49,168 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Naphthalene degradation [bvu00626]', 'SUID': 200759}, {'name': 'Ribosome [bvu03010]', 'SUID': 200117}, {'name': 'Chloroalkane and chloroalkene degradation [bvu00625]', 'SUID': 200537}, {'name': 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'SUID': 201199}, {'name': 'RNA polymerase [bvu03020]', 'SUID': 201005}]
2025-03-06 13:59:49,168 [DEBUG] py4...: ǀReturning 'get_network_list': ['Naphthalene degradation [bvu00626]', 'Ribosome [bvu03010]', 'Chloroalkane and chloroalkene degradation [bvu00625]', 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'RNA polymerase [bvu03020]']
2025-03-06 13:59:49,168 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="RNA polymerase [bvu03020]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,168 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'RNA polymerase [bvu03020]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:49,180 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 201005
}
],
 "errors":[]
}
2025-03-06 13:59:49,181 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 201005}]
2025-03-06 13:59:49,181 [DEBUG] py4...: Returning 'get_network_suid': 201005
2025-03-06 13:59:49,181 [DEBUG] py4...: --------------------
2025-03-06 13:59:49,181 [DEBUG] py4...: Calling export_network('networks_graphml/Naphthalene degradation [bvu00626].graphml', 'graphml', network=200759, overwrite_file=True)
2025-03-06 13:59:49,181 [DEBUG] py4...: ǀCalling get_network_suid(200759, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,181 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,182 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:49,199 [DEBUG] py4...: ǀǀOK[200], content: [200759,200117,200537,201199,201005]
2025-03-06 13:59:49,201 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [200759, 200117, 200537, 201199, 201005]
2025-03-06 13:59:49,201 [DEBUG] py4...: ǀReturning 'get_network_suid': 200759
2025-03-06 13:59:49,201 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Naphthalene degradation [bvu00626].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,201 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,201 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml'}
2025-03-06 13:59:49,211 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:49,211 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:49,211 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:49,211 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:200759" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,213 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:200759', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml'}
2025-03-06 13:59:49,224 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml"},
 "errors":[]
}
2025-03-06 13:59:49,224 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml'}
2025-03-06 13:59:49,225 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml'}
2025-03-06 13:59:49,225 [DEBUG] py4...: --------------------
2025-03-06 13:59:49,225 [DEBUG] py4...: Calling export_network('networks_graphml/Ribosome [bvu03010].graphml', 'graphml', network=200117, overwrite_file=True)
2025-03-06 13:59:49,225 [DEBUG] py4...: ǀCalling get_network_suid(200117, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,225 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,225 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:49,233 [DEBUG] py4...: ǀǀOK[200], content: [200759,200117,200537,201199,201005]
2025-03-06 13:59:49,235 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [200759, 200117, 200537, 201199, 201005]
2025-03-06 13:59:49,235 [DEBUG] py4...: ǀReturning 'get_network_suid': 200117
2025-03-06 13:59:49,235 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Ribosome [bvu03010].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,235 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,235 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml'}
2025-03-06 13:59:49,240 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:49,241 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:49,241 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:49,241 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:200117" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,241 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:200117', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml'}
2025-03-06 13:59:49,262 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml"},
 "errors":[]
}
2025-03-06 13:59:49,262 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml'}
2025-03-06 13:59:49,262 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml'}
2025-03-06 13:59:49,262 [DEBUG] py4...: --------------------
2025-03-06 13:59:49,263 [DEBUG] py4...: Calling export_network('networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml', 'graphml', network=200537, overwrite_file=True)
2025-03-06 13:59:49,263 [DEBUG] py4...: ǀCalling get_network_suid(200537, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,263 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,270 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:49,276 [DEBUG] py4...: ǀǀOK[200], content: [200759,200117,200537,201199,201005]
2025-03-06 13:59:49,277 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [200759, 200117, 200537, 201199, 201005]
2025-03-06 13:59:49,277 [DEBUG] py4...: ǀReturning 'get_network_suid': 200537
2025-03-06 13:59:49,277 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,277 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,277 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml'}
2025-03-06 13:59:49,281 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:49,281 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:49,281 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:49,281 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:200537" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,282 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:200537', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml'}
2025-03-06 13:59:49,298 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml"},
 "errors":[]
}
2025-03-06 13:59:49,298 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml'}
2025-03-06 13:59:49,298 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml'}
2025-03-06 13:59:49,298 [DEBUG] py4...: --------------------
2025-03-06 13:59:49,298 [DEBUG] py4...: Calling export_network('networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml', 'graphml', network=201199, overwrite_file=True)
2025-03-06 13:59:49,299 [DEBUG] py4...: ǀCalling get_network_suid(201199, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,299 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,299 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:49,306 [DEBUG] py4...: ǀǀOK[200], content: [200759,200117,200537,201199,201005]
2025-03-06 13:59:49,307 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [200759, 200117, 200537, 201199, 201005]
2025-03-06 13:59:49,307 [DEBUG] py4...: ǀReturning 'get_network_suid': 201199
2025-03-06 13:59:49,307 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,308 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,309 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml'}
2025-03-06 13:59:49,314 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:49,314 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:49,314 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:49,315 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:201199" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,315 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:201199', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml'}
2025-03-06 13:59:49,322 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml"},
 "errors":[]
}
2025-03-06 13:59:49,322 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml'}
2025-03-06 13:59:49,322 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml'}
2025-03-06 13:59:49,322 [DEBUG] py4...: --------------------
2025-03-06 13:59:49,322 [DEBUG] py4...: Calling export_network('networks_graphml/RNA polymerase [bvu03020].graphml', 'graphml', network=201005, overwrite_file=True)
2025-03-06 13:59:49,322 [DEBUG] py4...: ǀCalling get_network_suid(201005, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,322 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,322 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:49,326 [DEBUG] py4...: ǀǀOK[200], content: [200759,200117,200537,201199,201005]
2025-03-06 13:59:49,326 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [200759, 200117, 200537, 201199, 201005]
2025-03-06 13:59:49,326 [DEBUG] py4...: ǀReturning 'get_network_suid': 201005
2025-03-06 13:59:49,326 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/RNA polymerase [bvu03020].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,326 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,326 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml'}
2025-03-06 13:59:49,329 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:49,329 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:49,330 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:49,330 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:201005" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,330 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:201005', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml'}
2025-03-06 13:59:49,336 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml"},
 "errors":[]
}
2025-03-06 13:59:49,337 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml'}
2025-03-06 13:59:49,337 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml'}
2025-03-06 13:59:49,337 [DEBUG] py4...: --------------------
2025-03-06 13:59:49,337 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_9.cys')
2025-03-06 13:59:49,337 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_9.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:49,338 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_9.cys'}
2025-03-06 13:59:50,114 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:59:50,114 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:59:50,114 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:59:50,115 [DEBUG] py4...: --------------------
2025-03-06 13:59:50,116 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:59:50,116 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,116 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:50,128 [DEBUG] py4...: ǀOK[200], content: [{"name":"Taurine and hypotaurine metabolism [bvu00430]","SUID":207616},{"name":"Phosphonate and phosphinate metabolism [bvu00440]","SUID":207050},{"name":"beta-Alanine metabolism [bvu00410]","SUID":207400},{"name":"Cyanoamino acid metabolism [bvu00460]","SUID":207800},{"name":"Selenocompound metabolism [bvu00450]","SUID":208104}]
2025-03-06 13:59:50,128 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Taurine and hypotaurine metabolism [bvu00430]', 'SUID': 207616}, {'name': 'Phosphonate and phosphinate metabolism [bvu00440]', 'SUID': 207050}, {'name': 'beta-Alanine metabolism [bvu00410]', 'SUID': 207400}, {'name': 'Cyanoamino acid metabolism [bvu00460]', 'SUID': 207800}, {'name': 'Selenocompound metabolism [bvu00450]', 'SUID': 208104}]
2025-03-06 13:59:50,128 [DEBUG] py4...: Returning 'get_network_list': ['Taurine and hypotaurine metabolism [bvu00430]', 'Phosphonate and phosphinate metabolism [bvu00440]', 'beta-Alanine metabolism [bvu00410]', 'Cyanoamino acid metabolism [bvu00460]', 'Selenocompound metabolism [bvu00450]']
2025-03-06 13:59:50,128 [DEBUG] py4...: --------------------
2025-03-06 13:59:50,130 [DEBUG] py4...: Calling get_network_suid('Taurine and hypotaurine metabolism [bvu00430]')
2025-03-06 13:59:50,131 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,131 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,131 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:50,135 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Taurine and hypotaurine metabolism [bvu00430]","SUID":207616},{"name":"Phosphonate and phosphinate metabolism [bvu00440]","SUID":207050},{"name":"beta-Alanine metabolism [bvu00410]","SUID":207400},{"name":"Cyanoamino acid metabolism [bvu00460]","SUID":207800},{"name":"Selenocompound metabolism [bvu00450]","SUID":208104}]
2025-03-06 13:59:50,136 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Taurine and hypotaurine metabolism [bvu00430]', 'SUID': 207616}, {'name': 'Phosphonate and phosphinate metabolism [bvu00440]', 'SUID': 207050}, {'name': 'beta-Alanine metabolism [bvu00410]', 'SUID': 207400}, {'name': 'Cyanoamino acid metabolism [bvu00460]', 'SUID': 207800}, {'name': 'Selenocompound metabolism [bvu00450]', 'SUID': 208104}]
2025-03-06 13:59:50,136 [DEBUG] py4...: ǀReturning 'get_network_list': ['Taurine and hypotaurine metabolism [bvu00430]', 'Phosphonate and phosphinate metabolism [bvu00440]', 'beta-Alanine metabolism [bvu00410]', 'Cyanoamino acid metabolism [bvu00460]', 'Selenocompound metabolism [bvu00450]']
2025-03-06 13:59:50,136 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Taurine and hypotaurine metabolism [bvu00430]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,136 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Taurine and hypotaurine metabolism [bvu00430]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:50,141 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 207616
}
],
 "errors":[]
}
2025-03-06 13:59:50,142 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 207616}]
2025-03-06 13:59:50,142 [DEBUG] py4...: Returning 'get_network_suid': 207616
2025-03-06 13:59:50,142 [DEBUG] py4...: --------------------
2025-03-06 13:59:50,142 [DEBUG] py4...: Calling get_network_suid('Phosphonate and phosphinate metabolism [bvu00440]')
2025-03-06 13:59:50,143 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,143 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,143 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:50,148 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Taurine and hypotaurine metabolism [bvu00430]","SUID":207616},{"name":"Phosphonate and phosphinate metabolism [bvu00440]","SUID":207050},{"name":"beta-Alanine metabolism [bvu00410]","SUID":207400},{"name":"Cyanoamino acid metabolism [bvu00460]","SUID":207800},{"name":"Selenocompound metabolism [bvu00450]","SUID":208104}]
2025-03-06 13:59:50,149 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Taurine and hypotaurine metabolism [bvu00430]', 'SUID': 207616}, {'name': 'Phosphonate and phosphinate metabolism [bvu00440]', 'SUID': 207050}, {'name': 'beta-Alanine metabolism [bvu00410]', 'SUID': 207400}, {'name': 'Cyanoamino acid metabolism [bvu00460]', 'SUID': 207800}, {'name': 'Selenocompound metabolism [bvu00450]', 'SUID': 208104}]
2025-03-06 13:59:50,149 [DEBUG] py4...: ǀReturning 'get_network_list': ['Taurine and hypotaurine metabolism [bvu00430]', 'Phosphonate and phosphinate metabolism [bvu00440]', 'beta-Alanine metabolism [bvu00410]', 'Cyanoamino acid metabolism [bvu00460]', 'Selenocompound metabolism [bvu00450]']
2025-03-06 13:59:50,149 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Phosphonate and phosphinate metabolism [bvu00440]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,150 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Phosphonate and phosphinate metabolism [bvu00440]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:50,160 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 207050
}
],
 "errors":[]
}
2025-03-06 13:59:50,160 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 207050}]
2025-03-06 13:59:50,161 [DEBUG] py4...: Returning 'get_network_suid': 207050
2025-03-06 13:59:50,161 [DEBUG] py4...: --------------------
2025-03-06 13:59:50,161 [DEBUG] py4...: Calling get_network_suid('beta-Alanine metabolism [bvu00410]')
2025-03-06 13:59:50,161 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,161 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,162 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:50,168 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Taurine and hypotaurine metabolism [bvu00430]","SUID":207616},{"name":"Phosphonate and phosphinate metabolism [bvu00440]","SUID":207050},{"name":"beta-Alanine metabolism [bvu00410]","SUID":207400},{"name":"Cyanoamino acid metabolism [bvu00460]","SUID":207800},{"name":"Selenocompound metabolism [bvu00450]","SUID":208104}]
2025-03-06 13:59:50,169 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Taurine and hypotaurine metabolism [bvu00430]', 'SUID': 207616}, {'name': 'Phosphonate and phosphinate metabolism [bvu00440]', 'SUID': 207050}, {'name': 'beta-Alanine metabolism [bvu00410]', 'SUID': 207400}, {'name': 'Cyanoamino acid metabolism [bvu00460]', 'SUID': 207800}, {'name': 'Selenocompound metabolism [bvu00450]', 'SUID': 208104}]
2025-03-06 13:59:50,169 [DEBUG] py4...: ǀReturning 'get_network_list': ['Taurine and hypotaurine metabolism [bvu00430]', 'Phosphonate and phosphinate metabolism [bvu00440]', 'beta-Alanine metabolism [bvu00410]', 'Cyanoamino acid metabolism [bvu00460]', 'Selenocompound metabolism [bvu00450]']
2025-03-06 13:59:50,169 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="beta-Alanine metabolism [bvu00410]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,169 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'beta-Alanine metabolism [bvu00410]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:50,179 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 207400
}
],
 "errors":[]
}
2025-03-06 13:59:50,179 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 207400}]
2025-03-06 13:59:50,179 [DEBUG] py4...: Returning 'get_network_suid': 207400
2025-03-06 13:59:50,179 [DEBUG] py4...: --------------------
2025-03-06 13:59:50,180 [DEBUG] py4...: Calling get_network_suid('Cyanoamino acid metabolism [bvu00460]')
2025-03-06 13:59:50,180 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,180 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,180 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:50,189 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Taurine and hypotaurine metabolism [bvu00430]","SUID":207616},{"name":"Phosphonate and phosphinate metabolism [bvu00440]","SUID":207050},{"name":"beta-Alanine metabolism [bvu00410]","SUID":207400},{"name":"Cyanoamino acid metabolism [bvu00460]","SUID":207800},{"name":"Selenocompound metabolism [bvu00450]","SUID":208104}]
2025-03-06 13:59:50,189 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Taurine and hypotaurine metabolism [bvu00430]', 'SUID': 207616}, {'name': 'Phosphonate and phosphinate metabolism [bvu00440]', 'SUID': 207050}, {'name': 'beta-Alanine metabolism [bvu00410]', 'SUID': 207400}, {'name': 'Cyanoamino acid metabolism [bvu00460]', 'SUID': 207800}, {'name': 'Selenocompound metabolism [bvu00450]', 'SUID': 208104}]
2025-03-06 13:59:50,189 [DEBUG] py4...: ǀReturning 'get_network_list': ['Taurine and hypotaurine metabolism [bvu00430]', 'Phosphonate and phosphinate metabolism [bvu00440]', 'beta-Alanine metabolism [bvu00410]', 'Cyanoamino acid metabolism [bvu00460]', 'Selenocompound metabolism [bvu00450]']
2025-03-06 13:59:50,189 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Cyanoamino acid metabolism [bvu00460]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,190 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Cyanoamino acid metabolism [bvu00460]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:50,199 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 207800
}
],
 "errors":[]
}
2025-03-06 13:59:50,199 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 207800}]
2025-03-06 13:59:50,199 [DEBUG] py4...: Returning 'get_network_suid': 207800
2025-03-06 13:59:50,199 [DEBUG] py4...: --------------------
2025-03-06 13:59:50,199 [DEBUG] py4...: Calling get_network_suid('Selenocompound metabolism [bvu00450]')
2025-03-06 13:59:50,199 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,199 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,199 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:50,202 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Taurine and hypotaurine metabolism [bvu00430]","SUID":207616},{"name":"Phosphonate and phosphinate metabolism [bvu00440]","SUID":207050},{"name":"beta-Alanine metabolism [bvu00410]","SUID":207400},{"name":"Cyanoamino acid metabolism [bvu00460]","SUID":207800},{"name":"Selenocompound metabolism [bvu00450]","SUID":208104}]
2025-03-06 13:59:50,202 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Taurine and hypotaurine metabolism [bvu00430]', 'SUID': 207616}, {'name': 'Phosphonate and phosphinate metabolism [bvu00440]', 'SUID': 207050}, {'name': 'beta-Alanine metabolism [bvu00410]', 'SUID': 207400}, {'name': 'Cyanoamino acid metabolism [bvu00460]', 'SUID': 207800}, {'name': 'Selenocompound metabolism [bvu00450]', 'SUID': 208104}]
2025-03-06 13:59:50,203 [DEBUG] py4...: ǀReturning 'get_network_list': ['Taurine and hypotaurine metabolism [bvu00430]', 'Phosphonate and phosphinate metabolism [bvu00440]', 'beta-Alanine metabolism [bvu00410]', 'Cyanoamino acid metabolism [bvu00460]', 'Selenocompound metabolism [bvu00450]']
2025-03-06 13:59:50,203 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Selenocompound metabolism [bvu00450]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,203 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Selenocompound metabolism [bvu00450]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:50,206 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 208104
}
],
 "errors":[]
}
2025-03-06 13:59:50,206 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 208104}]
2025-03-06 13:59:50,206 [DEBUG] py4...: Returning 'get_network_suid': 208104
2025-03-06 13:59:50,207 [DEBUG] py4...: --------------------
2025-03-06 13:59:50,207 [DEBUG] py4...: Calling export_network('networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml', 'graphml', network=207616, overwrite_file=True)
2025-03-06 13:59:50,207 [DEBUG] py4...: ǀCalling get_network_suid(207616, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,207 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,207 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:50,213 [DEBUG] py4...: ǀǀOK[200], content: [207616,207050,207400,207800,208104]
2025-03-06 13:59:50,214 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [207616, 207050, 207400, 207800, 208104]
2025-03-06 13:59:50,214 [DEBUG] py4...: ǀReturning 'get_network_suid': 207616
2025-03-06 13:59:50,214 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,214 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,214 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml'}
2025-03-06 13:59:50,224 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:50,228 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:50,228 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:50,228 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:207616" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,228 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:207616', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml'}
2025-03-06 13:59:50,237 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml"},
 "errors":[]
}
2025-03-06 13:59:50,237 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml'}
2025-03-06 13:59:50,237 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml'}
2025-03-06 13:59:50,237 [DEBUG] py4...: --------------------
2025-03-06 13:59:50,237 [DEBUG] py4...: Calling export_network('networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml', 'graphml', network=207050, overwrite_file=True)
2025-03-06 13:59:50,237 [DEBUG] py4...: ǀCalling get_network_suid(207050, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,238 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,238 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:50,246 [DEBUG] py4...: ǀǀOK[200], content: [207616,207050,207400,207800,208104]
2025-03-06 13:59:50,246 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [207616, 207050, 207400, 207800, 208104]
2025-03-06 13:59:50,246 [DEBUG] py4...: ǀReturning 'get_network_suid': 207050
2025-03-06 13:59:50,246 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,246 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,246 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml'}
2025-03-06 13:59:50,249 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:50,249 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:50,249 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:50,249 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:207050" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,249 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:207050', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml'}
2025-03-06 13:59:50,256 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml"},
 "errors":[]
}
2025-03-06 13:59:50,256 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml'}
2025-03-06 13:59:50,256 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml'}
2025-03-06 13:59:50,256 [DEBUG] py4...: --------------------
2025-03-06 13:59:50,256 [DEBUG] py4...: Calling export_network('networks_graphml/beta-Alanine metabolism [bvu00410].graphml', 'graphml', network=207400, overwrite_file=True)
2025-03-06 13:59:50,256 [DEBUG] py4...: ǀCalling get_network_suid(207400, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,256 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,256 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:50,264 [DEBUG] py4...: ǀǀOK[200], content: [207616,207050,207400,207800,208104]
2025-03-06 13:59:50,265 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [207616, 207050, 207400, 207800, 208104]
2025-03-06 13:59:50,265 [DEBUG] py4...: ǀReturning 'get_network_suid': 207400
2025-03-06 13:59:50,265 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/beta-Alanine metabolism [bvu00410].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,265 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,265 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml'}
2025-03-06 13:59:50,273 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:50,273 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:50,273 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:50,273 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:207400" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,274 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:207400', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml'}
2025-03-06 13:59:50,283 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml"},
 "errors":[]
}
2025-03-06 13:59:50,284 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml'}
2025-03-06 13:59:50,284 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml'}
2025-03-06 13:59:50,284 [DEBUG] py4...: --------------------
2025-03-06 13:59:50,284 [DEBUG] py4...: Calling export_network('networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml', 'graphml', network=207800, overwrite_file=True)
2025-03-06 13:59:50,284 [DEBUG] py4...: ǀCalling get_network_suid(207800, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,284 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,284 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:50,289 [DEBUG] py4...: ǀǀOK[200], content: [207616,207050,207400,207800,208104]
2025-03-06 13:59:50,289 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [207616, 207050, 207400, 207800, 208104]
2025-03-06 13:59:50,290 [DEBUG] py4...: ǀReturning 'get_network_suid': 207800
2025-03-06 13:59:50,290 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,290 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,290 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml'}
2025-03-06 13:59:50,299 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:50,304 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:50,304 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:50,304 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:207800" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,304 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:207800', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml'}
2025-03-06 13:59:50,312 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml"},
 "errors":[]
}
2025-03-06 13:59:50,312 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml'}
2025-03-06 13:59:50,312 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml'}
2025-03-06 13:59:50,312 [DEBUG] py4...: --------------------
2025-03-06 13:59:50,312 [DEBUG] py4...: Calling export_network('networks_graphml/Selenocompound metabolism [bvu00450].graphml', 'graphml', network=208104, overwrite_file=True)
2025-03-06 13:59:50,312 [DEBUG] py4...: ǀCalling get_network_suid(208104, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,313 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,313 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:50,321 [DEBUG] py4...: ǀǀOK[200], content: [207616,207050,207400,207800,208104]
2025-03-06 13:59:50,321 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [207616, 207050, 207400, 207800, 208104]
2025-03-06 13:59:50,321 [DEBUG] py4...: ǀReturning 'get_network_suid': 208104
2025-03-06 13:59:50,321 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Selenocompound metabolism [bvu00450].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,322 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,322 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml'}
2025-03-06 13:59:50,327 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:50,327 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:50,327 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:50,327 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:208104" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,327 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:208104', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml'}
2025-03-06 13:59:50,333 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml"},
 "errors":[]
}
2025-03-06 13:59:50,333 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml'}
2025-03-06 13:59:50,333 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml'}
2025-03-06 13:59:50,334 [DEBUG] py4...: --------------------
2025-03-06 13:59:50,334 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_4.cys')
2025-03-06 13:59:50,334 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_4.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:50,334 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_4.cys'}
2025-03-06 13:59:51,291 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:59:51,292 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:59:51,292 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:59:51,292 [DEBUG] py4...: --------------------
2025-03-06 13:59:51,293 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:59:51,293 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,294 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:51,299 [DEBUG] py4...: ǀOK[200], content: [{"name":"Other carbon fixation pathways [bvu00720]","SUID":213521},{"name":"Methane metabolism [bvu00680]","SUID":213905},{"name":"Carbon fixation by Calvin cycle [bvu00710]","SUID":212933},{"name":"Sulfur metabolism [bvu00920]","SUID":214453},{"name":"Nitrogen metabolism [bvu00910]","SUID":213215}]
2025-03-06 13:59:51,301 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Other carbon fixation pathways [bvu00720]', 'SUID': 213521}, {'name': 'Methane metabolism [bvu00680]', 'SUID': 213905}, {'name': 'Carbon fixation by Calvin cycle [bvu00710]', 'SUID': 212933}, {'name': 'Sulfur metabolism [bvu00920]', 'SUID': 214453}, {'name': 'Nitrogen metabolism [bvu00910]', 'SUID': 213215}]
2025-03-06 13:59:51,302 [DEBUG] py4...: Returning 'get_network_list': ['Other carbon fixation pathways [bvu00720]', 'Methane metabolism [bvu00680]', 'Carbon fixation by Calvin cycle [bvu00710]', 'Sulfur metabolism [bvu00920]', 'Nitrogen metabolism [bvu00910]']
2025-03-06 13:59:51,302 [DEBUG] py4...: --------------------
2025-03-06 13:59:51,302 [DEBUG] py4...: Calling get_network_suid('Other carbon fixation pathways [bvu00720]')
2025-03-06 13:59:51,302 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,302 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,302 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:51,307 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other carbon fixation pathways [bvu00720]","SUID":213521},{"name":"Methane metabolism [bvu00680]","SUID":213905},{"name":"Carbon fixation by Calvin cycle [bvu00710]","SUID":212933},{"name":"Sulfur metabolism [bvu00920]","SUID":214453},{"name":"Nitrogen metabolism [bvu00910]","SUID":213215}]
2025-03-06 13:59:51,307 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other carbon fixation pathways [bvu00720]', 'SUID': 213521}, {'name': 'Methane metabolism [bvu00680]', 'SUID': 213905}, {'name': 'Carbon fixation by Calvin cycle [bvu00710]', 'SUID': 212933}, {'name': 'Sulfur metabolism [bvu00920]', 'SUID': 214453}, {'name': 'Nitrogen metabolism [bvu00910]', 'SUID': 213215}]
2025-03-06 13:59:51,308 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other carbon fixation pathways [bvu00720]', 'Methane metabolism [bvu00680]', 'Carbon fixation by Calvin cycle [bvu00710]', 'Sulfur metabolism [bvu00920]', 'Nitrogen metabolism [bvu00910]']
2025-03-06 13:59:51,308 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Other carbon fixation pathways [bvu00720]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,308 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Other carbon fixation pathways [bvu00720]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:51,313 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 213521
}
],
 "errors":[]
}
2025-03-06 13:59:51,314 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 213521}]
2025-03-06 13:59:51,314 [DEBUG] py4...: Returning 'get_network_suid': 213521
2025-03-06 13:59:51,314 [DEBUG] py4...: --------------------
2025-03-06 13:59:51,314 [DEBUG] py4...: Calling get_network_suid('Methane metabolism [bvu00680]')
2025-03-06 13:59:51,314 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,315 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,315 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:51,321 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other carbon fixation pathways [bvu00720]","SUID":213521},{"name":"Methane metabolism [bvu00680]","SUID":213905},{"name":"Carbon fixation by Calvin cycle [bvu00710]","SUID":212933},{"name":"Sulfur metabolism [bvu00920]","SUID":214453},{"name":"Nitrogen metabolism [bvu00910]","SUID":213215}]
2025-03-06 13:59:51,322 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other carbon fixation pathways [bvu00720]', 'SUID': 213521}, {'name': 'Methane metabolism [bvu00680]', 'SUID': 213905}, {'name': 'Carbon fixation by Calvin cycle [bvu00710]', 'SUID': 212933}, {'name': 'Sulfur metabolism [bvu00920]', 'SUID': 214453}, {'name': 'Nitrogen metabolism [bvu00910]', 'SUID': 213215}]
2025-03-06 13:59:51,322 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other carbon fixation pathways [bvu00720]', 'Methane metabolism [bvu00680]', 'Carbon fixation by Calvin cycle [bvu00710]', 'Sulfur metabolism [bvu00920]', 'Nitrogen metabolism [bvu00910]']
2025-03-06 13:59:51,322 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Methane metabolism [bvu00680]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,322 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Methane metabolism [bvu00680]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:51,331 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 213905
}
],
 "errors":[]
}
2025-03-06 13:59:51,331 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 213905}]
2025-03-06 13:59:51,331 [DEBUG] py4...: Returning 'get_network_suid': 213905
2025-03-06 13:59:51,332 [DEBUG] py4...: --------------------
2025-03-06 13:59:51,332 [DEBUG] py4...: Calling get_network_suid('Carbon fixation by Calvin cycle [bvu00710]')
2025-03-06 13:59:51,333 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,333 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,333 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:51,339 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other carbon fixation pathways [bvu00720]","SUID":213521},{"name":"Methane metabolism [bvu00680]","SUID":213905},{"name":"Carbon fixation by Calvin cycle [bvu00710]","SUID":212933},{"name":"Sulfur metabolism [bvu00920]","SUID":214453},{"name":"Nitrogen metabolism [bvu00910]","SUID":213215}]
2025-03-06 13:59:51,339 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other carbon fixation pathways [bvu00720]', 'SUID': 213521}, {'name': 'Methane metabolism [bvu00680]', 'SUID': 213905}, {'name': 'Carbon fixation by Calvin cycle [bvu00710]', 'SUID': 212933}, {'name': 'Sulfur metabolism [bvu00920]', 'SUID': 214453}, {'name': 'Nitrogen metabolism [bvu00910]', 'SUID': 213215}]
2025-03-06 13:59:51,339 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other carbon fixation pathways [bvu00720]', 'Methane metabolism [bvu00680]', 'Carbon fixation by Calvin cycle [bvu00710]', 'Sulfur metabolism [bvu00920]', 'Nitrogen metabolism [bvu00910]']
2025-03-06 13:59:51,339 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Carbon fixation by Calvin cycle [bvu00710]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,340 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Carbon fixation by Calvin cycle [bvu00710]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:51,345 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 212933
}
],
 "errors":[]
}
2025-03-06 13:59:51,346 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 212933}]
2025-03-06 13:59:51,346 [DEBUG] py4...: Returning 'get_network_suid': 212933
2025-03-06 13:59:51,346 [DEBUG] py4...: --------------------
2025-03-06 13:59:51,346 [DEBUG] py4...: Calling get_network_suid('Sulfur metabolism [bvu00920]')
2025-03-06 13:59:51,346 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,346 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,346 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:51,353 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other carbon fixation pathways [bvu00720]","SUID":213521},{"name":"Methane metabolism [bvu00680]","SUID":213905},{"name":"Carbon fixation by Calvin cycle [bvu00710]","SUID":212933},{"name":"Sulfur metabolism [bvu00920]","SUID":214453},{"name":"Nitrogen metabolism [bvu00910]","SUID":213215}]
2025-03-06 13:59:51,353 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other carbon fixation pathways [bvu00720]', 'SUID': 213521}, {'name': 'Methane metabolism [bvu00680]', 'SUID': 213905}, {'name': 'Carbon fixation by Calvin cycle [bvu00710]', 'SUID': 212933}, {'name': 'Sulfur metabolism [bvu00920]', 'SUID': 214453}, {'name': 'Nitrogen metabolism [bvu00910]', 'SUID': 213215}]
2025-03-06 13:59:51,353 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other carbon fixation pathways [bvu00720]', 'Methane metabolism [bvu00680]', 'Carbon fixation by Calvin cycle [bvu00710]', 'Sulfur metabolism [bvu00920]', 'Nitrogen metabolism [bvu00910]']
2025-03-06 13:59:51,353 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Sulfur metabolism [bvu00920]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,353 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Sulfur metabolism [bvu00920]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:51,361 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 214453
}
],
 "errors":[]
}
2025-03-06 13:59:51,362 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 214453}]
2025-03-06 13:59:51,362 [DEBUG] py4...: Returning 'get_network_suid': 214453
2025-03-06 13:59:51,362 [DEBUG] py4...: --------------------
2025-03-06 13:59:51,363 [DEBUG] py4...: Calling get_network_suid('Nitrogen metabolism [bvu00910]')
2025-03-06 13:59:51,363 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,363 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,363 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:51,372 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Other carbon fixation pathways [bvu00720]","SUID":213521},{"name":"Methane metabolism [bvu00680]","SUID":213905},{"name":"Carbon fixation by Calvin cycle [bvu00710]","SUID":212933},{"name":"Sulfur metabolism [bvu00920]","SUID":214453},{"name":"Nitrogen metabolism [bvu00910]","SUID":213215}]
2025-03-06 13:59:51,373 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Other carbon fixation pathways [bvu00720]', 'SUID': 213521}, {'name': 'Methane metabolism [bvu00680]', 'SUID': 213905}, {'name': 'Carbon fixation by Calvin cycle [bvu00710]', 'SUID': 212933}, {'name': 'Sulfur metabolism [bvu00920]', 'SUID': 214453}, {'name': 'Nitrogen metabolism [bvu00910]', 'SUID': 213215}]
2025-03-06 13:59:51,373 [DEBUG] py4...: ǀReturning 'get_network_list': ['Other carbon fixation pathways [bvu00720]', 'Methane metabolism [bvu00680]', 'Carbon fixation by Calvin cycle [bvu00710]', 'Sulfur metabolism [bvu00920]', 'Nitrogen metabolism [bvu00910]']
2025-03-06 13:59:51,373 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Nitrogen metabolism [bvu00910]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,376 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Nitrogen metabolism [bvu00910]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:51,387 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 213215
}
],
 "errors":[]
}
2025-03-06 13:59:51,388 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 213215}]
2025-03-06 13:59:51,388 [DEBUG] py4...: Returning 'get_network_suid': 213215
2025-03-06 13:59:51,388 [DEBUG] py4...: --------------------
2025-03-06 13:59:51,388 [DEBUG] py4...: Calling export_network('networks_graphml/Other carbon fixation pathways [bvu00720].graphml', 'graphml', network=213521, overwrite_file=True)
2025-03-06 13:59:51,388 [DEBUG] py4...: ǀCalling get_network_suid(213521, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,388 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,388 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:51,397 [DEBUG] py4...: ǀǀOK[200], content: [213521,213905,212933,214453,213215]
2025-03-06 13:59:51,397 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [213521, 213905, 212933, 214453, 213215]
2025-03-06 13:59:51,398 [DEBUG] py4...: ǀReturning 'get_network_suid': 213521
2025-03-06 13:59:51,398 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Other carbon fixation pathways [bvu00720].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,398 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,398 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml'}
2025-03-06 13:59:51,401 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:51,402 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:51,402 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:51,402 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:213521" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,402 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:213521', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml'}
2025-03-06 13:59:51,412 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml"},
 "errors":[]
}
2025-03-06 13:59:51,413 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml'}
2025-03-06 13:59:51,413 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml'}
2025-03-06 13:59:51,413 [DEBUG] py4...: --------------------
2025-03-06 13:59:51,413 [DEBUG] py4...: Calling export_network('networks_graphml/Methane metabolism [bvu00680].graphml', 'graphml', network=213905, overwrite_file=True)
2025-03-06 13:59:51,413 [DEBUG] py4...: ǀCalling get_network_suid(213905, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,413 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,414 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:51,421 [DEBUG] py4...: ǀǀOK[200], content: [213521,213905,212933,214453,213215]
2025-03-06 13:59:51,421 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [213521, 213905, 212933, 214453, 213215]
2025-03-06 13:59:51,421 [DEBUG] py4...: ǀReturning 'get_network_suid': 213905
2025-03-06 13:59:51,421 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Methane metabolism [bvu00680].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,421 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,421 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml'}
2025-03-06 13:59:51,425 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:51,425 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:51,425 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:51,425 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:213905" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,425 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:213905', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml'}
2025-03-06 13:59:51,433 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml"},
 "errors":[]
}
2025-03-06 13:59:51,433 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml'}
2025-03-06 13:59:51,433 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml'}
2025-03-06 13:59:51,433 [DEBUG] py4...: --------------------
2025-03-06 13:59:51,433 [DEBUG] py4...: Calling export_network('networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml', 'graphml', network=212933, overwrite_file=True)
2025-03-06 13:59:51,433 [DEBUG] py4...: ǀCalling get_network_suid(212933, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,433 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,433 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:51,437 [DEBUG] py4...: ǀǀOK[200], content: [213521,213905,212933,214453,213215]
2025-03-06 13:59:51,438 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [213521, 213905, 212933, 214453, 213215]
2025-03-06 13:59:51,438 [DEBUG] py4...: ǀReturning 'get_network_suid': 212933
2025-03-06 13:59:51,438 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,438 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,438 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml'}
2025-03-06 13:59:51,444 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:51,444 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:51,444 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:51,444 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:212933" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,444 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:212933', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml'}
2025-03-06 13:59:51,452 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml"},
 "errors":[]
}
2025-03-06 13:59:51,453 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml'}
2025-03-06 13:59:51,453 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml'}
2025-03-06 13:59:51,453 [DEBUG] py4...: --------------------
2025-03-06 13:59:51,453 [DEBUG] py4...: Calling export_network('networks_graphml/Sulfur metabolism [bvu00920].graphml', 'graphml', network=214453, overwrite_file=True)
2025-03-06 13:59:51,453 [DEBUG] py4...: ǀCalling get_network_suid(214453, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,453 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,453 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:51,460 [DEBUG] py4...: ǀǀOK[200], content: [213521,213905,212933,214453,213215]
2025-03-06 13:59:51,460 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [213521, 213905, 212933, 214453, 213215]
2025-03-06 13:59:51,460 [DEBUG] py4...: ǀReturning 'get_network_suid': 214453
2025-03-06 13:59:51,460 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Sulfur metabolism [bvu00920].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,460 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,460 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml'}
2025-03-06 13:59:51,463 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:51,464 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:51,464 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:51,464 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:214453" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,464 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:214453', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml'}
2025-03-06 13:59:51,478 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml"},
 "errors":[]
}
2025-03-06 13:59:51,479 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml'}
2025-03-06 13:59:51,479 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml'}
2025-03-06 13:59:51,479 [DEBUG] py4...: --------------------
2025-03-06 13:59:51,479 [DEBUG] py4...: Calling export_network('networks_graphml/Nitrogen metabolism [bvu00910].graphml', 'graphml', network=213215, overwrite_file=True)
2025-03-06 13:59:51,479 [DEBUG] py4...: ǀCalling get_network_suid(213215, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,479 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,480 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:51,487 [DEBUG] py4...: ǀǀOK[200], content: [213521,213905,212933,214453,213215]
2025-03-06 13:59:51,487 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [213521, 213905, 212933, 214453, 213215]
2025-03-06 13:59:51,487 [DEBUG] py4...: ǀReturning 'get_network_suid': 213215
2025-03-06 13:59:51,487 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Nitrogen metabolism [bvu00910].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,487 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,488 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml'}
2025-03-06 13:59:51,491 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:51,491 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:51,491 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:51,491 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:213215" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,491 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:213215', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml'}
2025-03-06 13:59:51,501 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml"},
 "errors":[]
}
2025-03-06 13:59:51,502 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml'}
2025-03-06 13:59:51,502 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml'}
2025-03-06 13:59:51,502 [DEBUG] py4...: --------------------
2025-03-06 13:59:51,503 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_5.cys')
2025-03-06 13:59:51,503 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_5.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:51,503 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_5.cys'}
2025-03-06 13:59:52,460 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:59:52,461 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:59:52,461 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:59:52,461 [DEBUG] py4...: --------------------
2025-03-06 13:59:52,461 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:59:52,461 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,461 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:52,468 [DEBUG] py4...: ǀOK[200], content: [{"name":"Secondary bile acid biosynthesis [bvu00121]","SUID":222256},{"name":"Glycerolipid metabolism [bvu00561]","SUID":223904},{"name":"Glycerophospholipid metabolism [bvu00564]","SUID":224160},{"name":"Fatty acid degradation [bvu00071]","SUID":223558},{"name":"Fatty acid biosynthesis [bvu00061]","SUID":222542}]
2025-03-06 13:59:52,469 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Secondary bile acid biosynthesis [bvu00121]', 'SUID': 222256}, {'name': 'Glycerolipid metabolism [bvu00561]', 'SUID': 223904}, {'name': 'Glycerophospholipid metabolism [bvu00564]', 'SUID': 224160}, {'name': 'Fatty acid degradation [bvu00071]', 'SUID': 223558}, {'name': 'Fatty acid biosynthesis [bvu00061]', 'SUID': 222542}]
2025-03-06 13:59:52,469 [DEBUG] py4...: Returning 'get_network_list': ['Secondary bile acid biosynthesis [bvu00121]', 'Glycerolipid metabolism [bvu00561]', 'Glycerophospholipid metabolism [bvu00564]', 'Fatty acid degradation [bvu00071]', 'Fatty acid biosynthesis [bvu00061]']
2025-03-06 13:59:52,469 [DEBUG] py4...: --------------------
2025-03-06 13:59:52,469 [DEBUG] py4...: Calling get_network_suid('Secondary bile acid biosynthesis [bvu00121]')
2025-03-06 13:59:52,469 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,469 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,469 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:52,475 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Secondary bile acid biosynthesis [bvu00121]","SUID":222256},{"name":"Glycerolipid metabolism [bvu00561]","SUID":223904},{"name":"Glycerophospholipid metabolism [bvu00564]","SUID":224160},{"name":"Fatty acid degradation [bvu00071]","SUID":223558},{"name":"Fatty acid biosynthesis [bvu00061]","SUID":222542}]
2025-03-06 13:59:52,475 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Secondary bile acid biosynthesis [bvu00121]', 'SUID': 222256}, {'name': 'Glycerolipid metabolism [bvu00561]', 'SUID': 223904}, {'name': 'Glycerophospholipid metabolism [bvu00564]', 'SUID': 224160}, {'name': 'Fatty acid degradation [bvu00071]', 'SUID': 223558}, {'name': 'Fatty acid biosynthesis [bvu00061]', 'SUID': 222542}]
2025-03-06 13:59:52,476 [DEBUG] py4...: ǀReturning 'get_network_list': ['Secondary bile acid biosynthesis [bvu00121]', 'Glycerolipid metabolism [bvu00561]', 'Glycerophospholipid metabolism [bvu00564]', 'Fatty acid degradation [bvu00071]', 'Fatty acid biosynthesis [bvu00061]']
2025-03-06 13:59:52,476 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Secondary bile acid biosynthesis [bvu00121]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,477 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Secondary bile acid biosynthesis [bvu00121]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:52,485 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 222256
}
],
 "errors":[]
}
2025-03-06 13:59:52,486 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 222256}]
2025-03-06 13:59:52,486 [DEBUG] py4...: Returning 'get_network_suid': 222256
2025-03-06 13:59:52,486 [DEBUG] py4...: --------------------
2025-03-06 13:59:52,486 [DEBUG] py4...: Calling get_network_suid('Glycerolipid metabolism [bvu00561]')
2025-03-06 13:59:52,486 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,486 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,486 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:52,491 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Secondary bile acid biosynthesis [bvu00121]","SUID":222256},{"name":"Glycerolipid metabolism [bvu00561]","SUID":223904},{"name":"Glycerophospholipid metabolism [bvu00564]","SUID":224160},{"name":"Fatty acid degradation [bvu00071]","SUID":223558},{"name":"Fatty acid biosynthesis [bvu00061]","SUID":222542}]
2025-03-06 13:59:52,491 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Secondary bile acid biosynthesis [bvu00121]', 'SUID': 222256}, {'name': 'Glycerolipid metabolism [bvu00561]', 'SUID': 223904}, {'name': 'Glycerophospholipid metabolism [bvu00564]', 'SUID': 224160}, {'name': 'Fatty acid degradation [bvu00071]', 'SUID': 223558}, {'name': 'Fatty acid biosynthesis [bvu00061]', 'SUID': 222542}]
2025-03-06 13:59:52,492 [DEBUG] py4...: ǀReturning 'get_network_list': ['Secondary bile acid biosynthesis [bvu00121]', 'Glycerolipid metabolism [bvu00561]', 'Glycerophospholipid metabolism [bvu00564]', 'Fatty acid degradation [bvu00071]', 'Fatty acid biosynthesis [bvu00061]']
2025-03-06 13:59:52,492 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glycerolipid metabolism [bvu00561]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,492 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glycerolipid metabolism [bvu00561]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:52,498 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 223904
}
],
 "errors":[]
}
2025-03-06 13:59:52,501 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 223904}]
2025-03-06 13:59:52,501 [DEBUG] py4...: Returning 'get_network_suid': 223904
2025-03-06 13:59:52,501 [DEBUG] py4...: --------------------
2025-03-06 13:59:52,501 [DEBUG] py4...: Calling get_network_suid('Glycerophospholipid metabolism [bvu00564]')
2025-03-06 13:59:52,501 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,501 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,502 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:52,511 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Secondary bile acid biosynthesis [bvu00121]","SUID":222256},{"name":"Glycerolipid metabolism [bvu00561]","SUID":223904},{"name":"Glycerophospholipid metabolism [bvu00564]","SUID":224160},{"name":"Fatty acid degradation [bvu00071]","SUID":223558},{"name":"Fatty acid biosynthesis [bvu00061]","SUID":222542}]
2025-03-06 13:59:52,512 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Secondary bile acid biosynthesis [bvu00121]', 'SUID': 222256}, {'name': 'Glycerolipid metabolism [bvu00561]', 'SUID': 223904}, {'name': 'Glycerophospholipid metabolism [bvu00564]', 'SUID': 224160}, {'name': 'Fatty acid degradation [bvu00071]', 'SUID': 223558}, {'name': 'Fatty acid biosynthesis [bvu00061]', 'SUID': 222542}]
2025-03-06 13:59:52,512 [DEBUG] py4...: ǀReturning 'get_network_list': ['Secondary bile acid biosynthesis [bvu00121]', 'Glycerolipid metabolism [bvu00561]', 'Glycerophospholipid metabolism [bvu00564]', 'Fatty acid degradation [bvu00071]', 'Fatty acid biosynthesis [bvu00061]']
2025-03-06 13:59:52,512 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glycerophospholipid metabolism [bvu00564]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,513 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glycerophospholipid metabolism [bvu00564]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:52,530 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 224160
}
],
 "errors":[]
}
2025-03-06 13:59:52,531 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 224160}]
2025-03-06 13:59:52,531 [DEBUG] py4...: Returning 'get_network_suid': 224160
2025-03-06 13:59:52,531 [DEBUG] py4...: --------------------
2025-03-06 13:59:52,531 [DEBUG] py4...: Calling get_network_suid('Fatty acid degradation [bvu00071]')
2025-03-06 13:59:52,531 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,531 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,531 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:52,536 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Secondary bile acid biosynthesis [bvu00121]","SUID":222256},{"name":"Glycerolipid metabolism [bvu00561]","SUID":223904},{"name":"Glycerophospholipid metabolism [bvu00564]","SUID":224160},{"name":"Fatty acid degradation [bvu00071]","SUID":223558},{"name":"Fatty acid biosynthesis [bvu00061]","SUID":222542}]
2025-03-06 13:59:52,537 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Secondary bile acid biosynthesis [bvu00121]', 'SUID': 222256}, {'name': 'Glycerolipid metabolism [bvu00561]', 'SUID': 223904}, {'name': 'Glycerophospholipid metabolism [bvu00564]', 'SUID': 224160}, {'name': 'Fatty acid degradation [bvu00071]', 'SUID': 223558}, {'name': 'Fatty acid biosynthesis [bvu00061]', 'SUID': 222542}]
2025-03-06 13:59:52,537 [DEBUG] py4...: ǀReturning 'get_network_list': ['Secondary bile acid biosynthesis [bvu00121]', 'Glycerolipid metabolism [bvu00561]', 'Glycerophospholipid metabolism [bvu00564]', 'Fatty acid degradation [bvu00071]', 'Fatty acid biosynthesis [bvu00061]']
2025-03-06 13:59:52,537 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Fatty acid degradation [bvu00071]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,538 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Fatty acid degradation [bvu00071]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:52,542 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 223558
}
],
 "errors":[]
}
2025-03-06 13:59:52,542 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 223558}]
2025-03-06 13:59:52,542 [DEBUG] py4...: Returning 'get_network_suid': 223558
2025-03-06 13:59:52,542 [DEBUG] py4...: --------------------
2025-03-06 13:59:52,542 [DEBUG] py4...: Calling get_network_suid('Fatty acid biosynthesis [bvu00061]')
2025-03-06 13:59:52,542 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,542 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,542 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:52,545 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Secondary bile acid biosynthesis [bvu00121]","SUID":222256},{"name":"Glycerolipid metabolism [bvu00561]","SUID":223904},{"name":"Glycerophospholipid metabolism [bvu00564]","SUID":224160},{"name":"Fatty acid degradation [bvu00071]","SUID":223558},{"name":"Fatty acid biosynthesis [bvu00061]","SUID":222542}]
2025-03-06 13:59:52,545 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Secondary bile acid biosynthesis [bvu00121]', 'SUID': 222256}, {'name': 'Glycerolipid metabolism [bvu00561]', 'SUID': 223904}, {'name': 'Glycerophospholipid metabolism [bvu00564]', 'SUID': 224160}, {'name': 'Fatty acid degradation [bvu00071]', 'SUID': 223558}, {'name': 'Fatty acid biosynthesis [bvu00061]', 'SUID': 222542}]
2025-03-06 13:59:52,545 [DEBUG] py4...: ǀReturning 'get_network_list': ['Secondary bile acid biosynthesis [bvu00121]', 'Glycerolipid metabolism [bvu00561]', 'Glycerophospholipid metabolism [bvu00564]', 'Fatty acid degradation [bvu00071]', 'Fatty acid biosynthesis [bvu00061]']
2025-03-06 13:59:52,545 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Fatty acid biosynthesis [bvu00061]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,545 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Fatty acid biosynthesis [bvu00061]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:52,549 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 222542
}
],
 "errors":[]
}
2025-03-06 13:59:52,549 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 222542}]
2025-03-06 13:59:52,549 [DEBUG] py4...: Returning 'get_network_suid': 222542
2025-03-06 13:59:52,549 [DEBUG] py4...: --------------------
2025-03-06 13:59:52,549 [DEBUG] py4...: Calling export_network('networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml', 'graphml', network=222256, overwrite_file=True)
2025-03-06 13:59:52,549 [DEBUG] py4...: ǀCalling get_network_suid(222256, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,549 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,550 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:52,553 [DEBUG] py4...: ǀǀOK[200], content: [222256,223904,224160,223558,222542]
2025-03-06 13:59:52,553 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [222256, 223904, 224160, 223558, 222542]
2025-03-06 13:59:52,553 [DEBUG] py4...: ǀReturning 'get_network_suid': 222256
2025-03-06 13:59:52,553 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,553 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,553 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml'}
2025-03-06 13:59:52,556 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:52,556 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:52,557 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:52,557 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:222256" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,557 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:222256', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml'}
2025-03-06 13:59:52,570 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml"},
 "errors":[]
}
2025-03-06 13:59:52,570 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml'}
2025-03-06 13:59:52,570 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml'}
2025-03-06 13:59:52,570 [DEBUG] py4...: --------------------
2025-03-06 13:59:52,570 [DEBUG] py4...: Calling export_network('networks_graphml/Glycerolipid metabolism [bvu00561].graphml', 'graphml', network=223904, overwrite_file=True)
2025-03-06 13:59:52,570 [DEBUG] py4...: ǀCalling get_network_suid(223904, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,570 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,570 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:52,573 [DEBUG] py4...: ǀǀOK[200], content: [222256,223904,224160,223558,222542]
2025-03-06 13:59:52,573 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [222256, 223904, 224160, 223558, 222542]
2025-03-06 13:59:52,574 [DEBUG] py4...: ǀReturning 'get_network_suid': 223904
2025-03-06 13:59:52,574 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Glycerolipid metabolism [bvu00561].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,574 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,574 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml'}
2025-03-06 13:59:52,577 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:52,577 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:52,578 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:52,578 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:223904" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,578 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:223904', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml'}
2025-03-06 13:59:52,585 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml"},
 "errors":[]
}
2025-03-06 13:59:52,586 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml'}
2025-03-06 13:59:52,586 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml'}
2025-03-06 13:59:52,586 [DEBUG] py4...: --------------------
2025-03-06 13:59:52,586 [DEBUG] py4...: Calling export_network('networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml', 'graphml', network=224160, overwrite_file=True)
2025-03-06 13:59:52,586 [DEBUG] py4...: ǀCalling get_network_suid(224160, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,586 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,586 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:52,589 [DEBUG] py4...: ǀǀOK[200], content: [222256,223904,224160,223558,222542]
2025-03-06 13:59:52,589 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [222256, 223904, 224160, 223558, 222542]
2025-03-06 13:59:52,589 [DEBUG] py4...: ǀReturning 'get_network_suid': 224160
2025-03-06 13:59:52,590 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,590 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,590 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml'}
2025-03-06 13:59:52,596 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:52,596 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:52,596 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:52,597 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:224160" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,597 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:224160', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml'}
2025-03-06 13:59:52,606 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml"},
 "errors":[]
}
2025-03-06 13:59:52,607 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml'}
2025-03-06 13:59:52,607 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml'}
2025-03-06 13:59:52,607 [DEBUG] py4...: --------------------
2025-03-06 13:59:52,607 [DEBUG] py4...: Calling export_network('networks_graphml/Fatty acid degradation [bvu00071].graphml', 'graphml', network=223558, overwrite_file=True)
2025-03-06 13:59:52,608 [DEBUG] py4...: ǀCalling get_network_suid(223558, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,608 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,608 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:52,623 [DEBUG] py4...: ǀǀOK[200], content: [222256,223904,224160,223558,222542]
2025-03-06 13:59:52,623 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [222256, 223904, 224160, 223558, 222542]
2025-03-06 13:59:52,623 [DEBUG] py4...: ǀReturning 'get_network_suid': 223558
2025-03-06 13:59:52,623 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Fatty acid degradation [bvu00071].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,623 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,624 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml'}
2025-03-06 13:59:52,627 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:52,627 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:52,627 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:52,627 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:223558" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,627 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:223558', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml'}
2025-03-06 13:59:52,635 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml"},
 "errors":[]
}
2025-03-06 13:59:52,635 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml'}
2025-03-06 13:59:52,635 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml'}
2025-03-06 13:59:52,635 [DEBUG] py4...: --------------------
2025-03-06 13:59:52,635 [DEBUG] py4...: Calling export_network('networks_graphml/Fatty acid biosynthesis [bvu00061].graphml', 'graphml', network=222542, overwrite_file=True)
2025-03-06 13:59:52,635 [DEBUG] py4...: ǀCalling get_network_suid(222542, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,635 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,635 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:52,638 [DEBUG] py4...: ǀǀOK[200], content: [222256,223904,224160,223558,222542]
2025-03-06 13:59:52,645 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [222256, 223904, 224160, 223558, 222542]
2025-03-06 13:59:52,645 [DEBUG] py4...: ǀReturning 'get_network_suid': 222542
2025-03-06 13:59:52,645 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Fatty acid biosynthesis [bvu00061].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,645 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,645 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml'}
2025-03-06 13:59:52,658 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:52,658 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:52,658 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:52,658 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:222542" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,658 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:222542', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml'}
2025-03-06 13:59:52,673 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml"},
 "errors":[]
}
2025-03-06 13:59:52,673 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml'}
2025-03-06 13:59:52,673 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml'}
2025-03-06 13:59:52,673 [DEBUG] py4...: --------------------
2025-03-06 13:59:52,673 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_7.cys')
2025-03-06 13:59:52,673 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_7.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:52,673 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_7.cys'}
2025-03-06 13:59:55,351 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:59:55,353 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:59:55,353 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:59:55,354 [DEBUG] py4...: --------------------
2025-03-06 13:59:55,354 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:59:55,355 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,355 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:55,365 [DEBUG] py4...: ǀOK[200], content: [{"name":"Valine, leucine and isoleucine biosynthesis [bvu00290]","SUID":233139},{"name":"Arginine biosynthesis [bvu00220]","SUID":234483},{"name":"Valine, leucine and isoleucine degradation [bvu00280]","SUID":233649},{"name":"Cysteine and methionine metabolism [bvu00270]","SUID":233957},{"name":"Lysine biosynthesis [bvu00300]","SUID":233385}]
2025-03-06 13:59:55,366 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'SUID': 233139}, {'name': 'Arginine biosynthesis [bvu00220]', 'SUID': 234483}, {'name': 'Valine, leucine and isoleucine degradation [bvu00280]', 'SUID': 233649}, {'name': 'Cysteine and methionine metabolism [bvu00270]', 'SUID': 233957}, {'name': 'Lysine biosynthesis [bvu00300]', 'SUID': 233385}]
2025-03-06 13:59:55,366 [DEBUG] py4...: Returning 'get_network_list': ['Valine, leucine and isoleucine biosynthesis [bvu00290]', 'Arginine biosynthesis [bvu00220]', 'Valine, leucine and isoleucine degradation [bvu00280]', 'Cysteine and methionine metabolism [bvu00270]', 'Lysine biosynthesis [bvu00300]']
2025-03-06 13:59:55,366 [DEBUG] py4...: --------------------
2025-03-06 13:59:55,366 [DEBUG] py4...: Calling get_network_suid('Valine, leucine and isoleucine biosynthesis [bvu00290]')
2025-03-06 13:59:55,366 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,366 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,366 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:55,370 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Valine, leucine and isoleucine biosynthesis [bvu00290]","SUID":233139},{"name":"Arginine biosynthesis [bvu00220]","SUID":234483},{"name":"Valine, leucine and isoleucine degradation [bvu00280]","SUID":233649},{"name":"Cysteine and methionine metabolism [bvu00270]","SUID":233957},{"name":"Lysine biosynthesis [bvu00300]","SUID":233385}]
2025-03-06 13:59:55,370 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'SUID': 233139}, {'name': 'Arginine biosynthesis [bvu00220]', 'SUID': 234483}, {'name': 'Valine, leucine and isoleucine degradation [bvu00280]', 'SUID': 233649}, {'name': 'Cysteine and methionine metabolism [bvu00270]', 'SUID': 233957}, {'name': 'Lysine biosynthesis [bvu00300]', 'SUID': 233385}]
2025-03-06 13:59:55,370 [DEBUG] py4...: ǀReturning 'get_network_list': ['Valine, leucine and isoleucine biosynthesis [bvu00290]', 'Arginine biosynthesis [bvu00220]', 'Valine, leucine and isoleucine degradation [bvu00280]', 'Cysteine and methionine metabolism [bvu00270]', 'Lysine biosynthesis [bvu00300]']
2025-03-06 13:59:55,370 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Valine, leucine and isoleucine biosynthesis [bvu00290]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,370 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:55,376 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 233139
}
],
 "errors":[]
}
2025-03-06 13:59:55,377 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 233139}]
2025-03-06 13:59:55,377 [DEBUG] py4...: Returning 'get_network_suid': 233139
2025-03-06 13:59:55,377 [DEBUG] py4...: --------------------
2025-03-06 13:59:55,377 [DEBUG] py4...: Calling get_network_suid('Arginine biosynthesis [bvu00220]')
2025-03-06 13:59:55,378 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,378 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,378 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:55,387 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Valine, leucine and isoleucine biosynthesis [bvu00290]","SUID":233139},{"name":"Arginine biosynthesis [bvu00220]","SUID":234483},{"name":"Valine, leucine and isoleucine degradation [bvu00280]","SUID":233649},{"name":"Cysteine and methionine metabolism [bvu00270]","SUID":233957},{"name":"Lysine biosynthesis [bvu00300]","SUID":233385}]
2025-03-06 13:59:55,388 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'SUID': 233139}, {'name': 'Arginine biosynthesis [bvu00220]', 'SUID': 234483}, {'name': 'Valine, leucine and isoleucine degradation [bvu00280]', 'SUID': 233649}, {'name': 'Cysteine and methionine metabolism [bvu00270]', 'SUID': 233957}, {'name': 'Lysine biosynthesis [bvu00300]', 'SUID': 233385}]
2025-03-06 13:59:55,388 [DEBUG] py4...: ǀReturning 'get_network_list': ['Valine, leucine and isoleucine biosynthesis [bvu00290]', 'Arginine biosynthesis [bvu00220]', 'Valine, leucine and isoleucine degradation [bvu00280]', 'Cysteine and methionine metabolism [bvu00270]', 'Lysine biosynthesis [bvu00300]']
2025-03-06 13:59:55,388 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Arginine biosynthesis [bvu00220]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,388 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Arginine biosynthesis [bvu00220]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:55,395 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 234483
}
],
 "errors":[]
}
2025-03-06 13:59:55,395 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 234483}]
2025-03-06 13:59:55,395 [DEBUG] py4...: Returning 'get_network_suid': 234483
2025-03-06 13:59:55,395 [DEBUG] py4...: --------------------
2025-03-06 13:59:55,395 [DEBUG] py4...: Calling get_network_suid('Valine, leucine and isoleucine degradation [bvu00280]')
2025-03-06 13:59:55,395 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,395 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,395 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:55,398 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Valine, leucine and isoleucine biosynthesis [bvu00290]","SUID":233139},{"name":"Arginine biosynthesis [bvu00220]","SUID":234483},{"name":"Valine, leucine and isoleucine degradation [bvu00280]","SUID":233649},{"name":"Cysteine and methionine metabolism [bvu00270]","SUID":233957},{"name":"Lysine biosynthesis [bvu00300]","SUID":233385}]
2025-03-06 13:59:55,398 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'SUID': 233139}, {'name': 'Arginine biosynthesis [bvu00220]', 'SUID': 234483}, {'name': 'Valine, leucine and isoleucine degradation [bvu00280]', 'SUID': 233649}, {'name': 'Cysteine and methionine metabolism [bvu00270]', 'SUID': 233957}, {'name': 'Lysine biosynthesis [bvu00300]', 'SUID': 233385}]
2025-03-06 13:59:55,398 [DEBUG] py4...: ǀReturning 'get_network_list': ['Valine, leucine and isoleucine biosynthesis [bvu00290]', 'Arginine biosynthesis [bvu00220]', 'Valine, leucine and isoleucine degradation [bvu00280]', 'Cysteine and methionine metabolism [bvu00270]', 'Lysine biosynthesis [bvu00300]']
2025-03-06 13:59:55,398 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Valine, leucine and isoleucine degradation [bvu00280]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,398 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Valine, leucine and isoleucine degradation [bvu00280]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:55,403 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 233649
}
],
 "errors":[]
}
2025-03-06 13:59:55,403 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 233649}]
2025-03-06 13:59:55,403 [DEBUG] py4...: Returning 'get_network_suid': 233649
2025-03-06 13:59:55,403 [DEBUG] py4...: --------------------
2025-03-06 13:59:55,403 [DEBUG] py4...: Calling get_network_suid('Cysteine and methionine metabolism [bvu00270]')
2025-03-06 13:59:55,403 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,403 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,403 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:55,406 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Valine, leucine and isoleucine biosynthesis [bvu00290]","SUID":233139},{"name":"Arginine biosynthesis [bvu00220]","SUID":234483},{"name":"Valine, leucine and isoleucine degradation [bvu00280]","SUID":233649},{"name":"Cysteine and methionine metabolism [bvu00270]","SUID":233957},{"name":"Lysine biosynthesis [bvu00300]","SUID":233385}]
2025-03-06 13:59:55,406 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'SUID': 233139}, {'name': 'Arginine biosynthesis [bvu00220]', 'SUID': 234483}, {'name': 'Valine, leucine and isoleucine degradation [bvu00280]', 'SUID': 233649}, {'name': 'Cysteine and methionine metabolism [bvu00270]', 'SUID': 233957}, {'name': 'Lysine biosynthesis [bvu00300]', 'SUID': 233385}]
2025-03-06 13:59:55,406 [DEBUG] py4...: ǀReturning 'get_network_list': ['Valine, leucine and isoleucine biosynthesis [bvu00290]', 'Arginine biosynthesis [bvu00220]', 'Valine, leucine and isoleucine degradation [bvu00280]', 'Cysteine and methionine metabolism [bvu00270]', 'Lysine biosynthesis [bvu00300]']
2025-03-06 13:59:55,406 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Cysteine and methionine metabolism [bvu00270]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,407 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Cysteine and methionine metabolism [bvu00270]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:55,410 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 233957
}
],
 "errors":[]
}
2025-03-06 13:59:55,410 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 233957}]
2025-03-06 13:59:55,410 [DEBUG] py4...: Returning 'get_network_suid': 233957
2025-03-06 13:59:55,410 [DEBUG] py4...: --------------------
2025-03-06 13:59:55,411 [DEBUG] py4...: Calling get_network_suid('Lysine biosynthesis [bvu00300]')
2025-03-06 13:59:55,411 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,411 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,411 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:55,414 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Valine, leucine and isoleucine biosynthesis [bvu00290]","SUID":233139},{"name":"Arginine biosynthesis [bvu00220]","SUID":234483},{"name":"Valine, leucine and isoleucine degradation [bvu00280]","SUID":233649},{"name":"Cysteine and methionine metabolism [bvu00270]","SUID":233957},{"name":"Lysine biosynthesis [bvu00300]","SUID":233385}]
2025-03-06 13:59:55,414 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'SUID': 233139}, {'name': 'Arginine biosynthesis [bvu00220]', 'SUID': 234483}, {'name': 'Valine, leucine and isoleucine degradation [bvu00280]', 'SUID': 233649}, {'name': 'Cysteine and methionine metabolism [bvu00270]', 'SUID': 233957}, {'name': 'Lysine biosynthesis [bvu00300]', 'SUID': 233385}]
2025-03-06 13:59:55,415 [DEBUG] py4...: ǀReturning 'get_network_list': ['Valine, leucine and isoleucine biosynthesis [bvu00290]', 'Arginine biosynthesis [bvu00220]', 'Valine, leucine and isoleucine degradation [bvu00280]', 'Cysteine and methionine metabolism [bvu00270]', 'Lysine biosynthesis [bvu00300]']
2025-03-06 13:59:55,415 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Lysine biosynthesis [bvu00300]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,415 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Lysine biosynthesis [bvu00300]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:55,418 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 233385
}
],
 "errors":[]
}
2025-03-06 13:59:55,419 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 233385}]
2025-03-06 13:59:55,419 [DEBUG] py4...: Returning 'get_network_suid': 233385
2025-03-06 13:59:55,419 [DEBUG] py4...: --------------------
2025-03-06 13:59:55,419 [DEBUG] py4...: Calling export_network('networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml', 'graphml', network=233139, overwrite_file=True)
2025-03-06 13:59:55,419 [DEBUG] py4...: ǀCalling get_network_suid(233139, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,419 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,419 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:55,422 [DEBUG] py4...: ǀǀOK[200], content: [233139,234483,233649,233957,233385]
2025-03-06 13:59:55,422 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [233139, 234483, 233649, 233957, 233385]
2025-03-06 13:59:55,422 [DEBUG] py4...: ǀReturning 'get_network_suid': 233139
2025-03-06 13:59:55,423 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,423 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,423 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml'}
2025-03-06 13:59:55,426 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:55,426 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:55,426 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:55,426 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:233139" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,426 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:233139', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml'}
2025-03-06 13:59:55,434 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml"},
 "errors":[]
}
2025-03-06 13:59:55,434 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml'}
2025-03-06 13:59:55,435 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml'}
2025-03-06 13:59:55,435 [DEBUG] py4...: --------------------
2025-03-06 13:59:55,435 [DEBUG] py4...: Calling export_network('networks_graphml/Arginine biosynthesis [bvu00220].graphml', 'graphml', network=234483, overwrite_file=True)
2025-03-06 13:59:55,435 [DEBUG] py4...: ǀCalling get_network_suid(234483, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,435 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,435 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:55,443 [DEBUG] py4...: ǀǀOK[200], content: [233139,234483,233649,233957,233385]
2025-03-06 13:59:55,443 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [233139, 234483, 233649, 233957, 233385]
2025-03-06 13:59:55,443 [DEBUG] py4...: ǀReturning 'get_network_suid': 234483
2025-03-06 13:59:55,443 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Arginine biosynthesis [bvu00220].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,443 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,443 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml'}
2025-03-06 13:59:55,449 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:55,449 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:55,449 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:55,449 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:234483" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,450 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:234483', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml'}
2025-03-06 13:59:55,456 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml"},
 "errors":[]
}
2025-03-06 13:59:55,456 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml'}
2025-03-06 13:59:55,456 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml'}
2025-03-06 13:59:55,456 [DEBUG] py4...: --------------------
2025-03-06 13:59:55,456 [DEBUG] py4...: Calling export_network('networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml', 'graphml', network=233649, overwrite_file=True)
2025-03-06 13:59:55,456 [DEBUG] py4...: ǀCalling get_network_suid(233649, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,456 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,456 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:55,459 [DEBUG] py4...: ǀǀOK[200], content: [233139,234483,233649,233957,233385]
2025-03-06 13:59:55,460 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [233139, 234483, 233649, 233957, 233385]
2025-03-06 13:59:55,460 [DEBUG] py4...: ǀReturning 'get_network_suid': 233649
2025-03-06 13:59:55,460 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,460 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,460 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml'}
2025-03-06 13:59:55,465 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:55,465 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:55,466 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:55,466 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:233649" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,466 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:233649', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml'}
2025-03-06 13:59:55,472 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml"},
 "errors":[]
}
2025-03-06 13:59:55,472 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml'}
2025-03-06 13:59:55,472 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml'}
2025-03-06 13:59:55,472 [DEBUG] py4...: --------------------
2025-03-06 13:59:55,472 [DEBUG] py4...: Calling export_network('networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml', 'graphml', network=233957, overwrite_file=True)
2025-03-06 13:59:55,472 [DEBUG] py4...: ǀCalling get_network_suid(233957, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,472 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,472 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:55,475 [DEBUG] py4...: ǀǀOK[200], content: [233139,234483,233649,233957,233385]
2025-03-06 13:59:55,475 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [233139, 234483, 233649, 233957, 233385]
2025-03-06 13:59:55,475 [DEBUG] py4...: ǀReturning 'get_network_suid': 233957
2025-03-06 13:59:55,475 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,475 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,475 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml'}
2025-03-06 13:59:55,478 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:55,478 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:55,478 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:55,478 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:233957" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,479 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:233957', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml'}
2025-03-06 13:59:55,490 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml"},
 "errors":[]
}
2025-03-06 13:59:55,491 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml'}
2025-03-06 13:59:55,491 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml'}
2025-03-06 13:59:55,491 [DEBUG] py4...: --------------------
2025-03-06 13:59:55,491 [DEBUG] py4...: Calling export_network('networks_graphml/Lysine biosynthesis [bvu00300].graphml', 'graphml', network=233385, overwrite_file=True)
2025-03-06 13:59:55,491 [DEBUG] py4...: ǀCalling get_network_suid(233385, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,491 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,491 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:55,494 [DEBUG] py4...: ǀǀOK[200], content: [233139,234483,233649,233957,233385]
2025-03-06 13:59:55,494 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [233139, 234483, 233649, 233957, 233385]
2025-03-06 13:59:55,494 [DEBUG] py4...: ǀReturning 'get_network_suid': 233385
2025-03-06 13:59:55,494 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Lysine biosynthesis [bvu00300].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,494 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,495 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml'}
2025-03-06 13:59:55,498 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:55,499 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:55,499 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:55,499 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:233385" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,499 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:233385', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml'}
2025-03-06 13:59:55,505 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml"},
 "errors":[]
}
2025-03-06 13:59:55,505 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml'}
2025-03-06 13:59:55,505 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml'}
2025-03-06 13:59:55,505 [DEBUG] py4...: --------------------
2025-03-06 13:59:55,505 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_18.cys')
2025-03-06 13:59:55,505 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_18.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:55,505 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_18.cys'}
2025-03-06 13:59:56,846 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:59:56,847 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:59:56,847 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:59:56,847 [DEBUG] py4...: --------------------
2025-03-06 13:59:56,847 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:59:56,847 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,847 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:56,852 [DEBUG] py4...: ǀOK[200], content: [{"name":"Base excision repair [bvu03410]","SUID":240946},{"name":"Homologous recombination [bvu03440]","SUID":240742},{"name":"ABC transporters [bvu02010]","SUID":241142},{"name":"Mismatch repair [bvu03430]","SUID":242847},{"name":"Nucleotide excision repair [bvu03420]","SUID":242975}]
2025-03-06 13:59:56,852 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Base excision repair [bvu03410]', 'SUID': 240946}, {'name': 'Homologous recombination [bvu03440]', 'SUID': 240742}, {'name': 'ABC transporters [bvu02010]', 'SUID': 241142}, {'name': 'Mismatch repair [bvu03430]', 'SUID': 242847}, {'name': 'Nucleotide excision repair [bvu03420]', 'SUID': 242975}]
2025-03-06 13:59:56,852 [DEBUG] py4...: Returning 'get_network_list': ['Base excision repair [bvu03410]', 'Homologous recombination [bvu03440]', 'ABC transporters [bvu02010]', 'Mismatch repair [bvu03430]', 'Nucleotide excision repair [bvu03420]']
2025-03-06 13:59:56,852 [DEBUG] py4...: --------------------
2025-03-06 13:59:56,852 [DEBUG] py4...: Calling get_network_suid('Base excision repair [bvu03410]')
2025-03-06 13:59:56,852 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,852 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,852 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:56,857 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Base excision repair [bvu03410]","SUID":240946},{"name":"Homologous recombination [bvu03440]","SUID":240742},{"name":"ABC transporters [bvu02010]","SUID":241142},{"name":"Mismatch repair [bvu03430]","SUID":242847},{"name":"Nucleotide excision repair [bvu03420]","SUID":242975}]
2025-03-06 13:59:56,858 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Base excision repair [bvu03410]', 'SUID': 240946}, {'name': 'Homologous recombination [bvu03440]', 'SUID': 240742}, {'name': 'ABC transporters [bvu02010]', 'SUID': 241142}, {'name': 'Mismatch repair [bvu03430]', 'SUID': 242847}, {'name': 'Nucleotide excision repair [bvu03420]', 'SUID': 242975}]
2025-03-06 13:59:56,858 [DEBUG] py4...: ǀReturning 'get_network_list': ['Base excision repair [bvu03410]', 'Homologous recombination [bvu03440]', 'ABC transporters [bvu02010]', 'Mismatch repair [bvu03430]', 'Nucleotide excision repair [bvu03420]']
2025-03-06 13:59:56,858 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Base excision repair [bvu03410]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,858 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Base excision repair [bvu03410]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:56,862 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 240946
}
],
 "errors":[]
}
2025-03-06 13:59:56,862 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 240946}]
2025-03-06 13:59:56,862 [DEBUG] py4...: Returning 'get_network_suid': 240946
2025-03-06 13:59:56,862 [DEBUG] py4...: --------------------
2025-03-06 13:59:56,862 [DEBUG] py4...: Calling get_network_suid('Homologous recombination [bvu03440]')
2025-03-06 13:59:56,862 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,862 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,863 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:56,868 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Base excision repair [bvu03410]","SUID":240946},{"name":"Homologous recombination [bvu03440]","SUID":240742},{"name":"ABC transporters [bvu02010]","SUID":241142},{"name":"Mismatch repair [bvu03430]","SUID":242847},{"name":"Nucleotide excision repair [bvu03420]","SUID":242975}]
2025-03-06 13:59:56,868 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Base excision repair [bvu03410]', 'SUID': 240946}, {'name': 'Homologous recombination [bvu03440]', 'SUID': 240742}, {'name': 'ABC transporters [bvu02010]', 'SUID': 241142}, {'name': 'Mismatch repair [bvu03430]', 'SUID': 242847}, {'name': 'Nucleotide excision repair [bvu03420]', 'SUID': 242975}]
2025-03-06 13:59:56,868 [DEBUG] py4...: ǀReturning 'get_network_list': ['Base excision repair [bvu03410]', 'Homologous recombination [bvu03440]', 'ABC transporters [bvu02010]', 'Mismatch repair [bvu03430]', 'Nucleotide excision repair [bvu03420]']
2025-03-06 13:59:56,868 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Homologous recombination [bvu03440]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,868 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Homologous recombination [bvu03440]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:56,873 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 240742
}
],
 "errors":[]
}
2025-03-06 13:59:56,873 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 240742}]
2025-03-06 13:59:56,873 [DEBUG] py4...: Returning 'get_network_suid': 240742
2025-03-06 13:59:56,873 [DEBUG] py4...: --------------------
2025-03-06 13:59:56,873 [DEBUG] py4...: Calling get_network_suid('ABC transporters [bvu02010]')
2025-03-06 13:59:56,873 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,873 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,873 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:56,877 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Base excision repair [bvu03410]","SUID":240946},{"name":"Homologous recombination [bvu03440]","SUID":240742},{"name":"ABC transporters [bvu02010]","SUID":241142},{"name":"Mismatch repair [bvu03430]","SUID":242847},{"name":"Nucleotide excision repair [bvu03420]","SUID":242975}]
2025-03-06 13:59:56,877 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Base excision repair [bvu03410]', 'SUID': 240946}, {'name': 'Homologous recombination [bvu03440]', 'SUID': 240742}, {'name': 'ABC transporters [bvu02010]', 'SUID': 241142}, {'name': 'Mismatch repair [bvu03430]', 'SUID': 242847}, {'name': 'Nucleotide excision repair [bvu03420]', 'SUID': 242975}]
2025-03-06 13:59:56,877 [DEBUG] py4...: ǀReturning 'get_network_list': ['Base excision repair [bvu03410]', 'Homologous recombination [bvu03440]', 'ABC transporters [bvu02010]', 'Mismatch repair [bvu03430]', 'Nucleotide excision repair [bvu03420]']
2025-03-06 13:59:56,877 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="ABC transporters [bvu02010]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,877 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'ABC transporters [bvu02010]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:56,881 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 241142
}
],
 "errors":[]
}
2025-03-06 13:59:56,881 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 241142}]
2025-03-06 13:59:56,881 [DEBUG] py4...: Returning 'get_network_suid': 241142
2025-03-06 13:59:56,881 [DEBUG] py4...: --------------------
2025-03-06 13:59:56,881 [DEBUG] py4...: Calling get_network_suid('Mismatch repair [bvu03430]')
2025-03-06 13:59:56,881 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,881 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,881 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:56,884 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Base excision repair [bvu03410]","SUID":240946},{"name":"Homologous recombination [bvu03440]","SUID":240742},{"name":"ABC transporters [bvu02010]","SUID":241142},{"name":"Mismatch repair [bvu03430]","SUID":242847},{"name":"Nucleotide excision repair [bvu03420]","SUID":242975}]
2025-03-06 13:59:56,885 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Base excision repair [bvu03410]', 'SUID': 240946}, {'name': 'Homologous recombination [bvu03440]', 'SUID': 240742}, {'name': 'ABC transporters [bvu02010]', 'SUID': 241142}, {'name': 'Mismatch repair [bvu03430]', 'SUID': 242847}, {'name': 'Nucleotide excision repair [bvu03420]', 'SUID': 242975}]
2025-03-06 13:59:56,885 [DEBUG] py4...: ǀReturning 'get_network_list': ['Base excision repair [bvu03410]', 'Homologous recombination [bvu03440]', 'ABC transporters [bvu02010]', 'Mismatch repair [bvu03430]', 'Nucleotide excision repair [bvu03420]']
2025-03-06 13:59:56,885 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Mismatch repair [bvu03430]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,885 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Mismatch repair [bvu03430]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:56,889 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 242847
}
],
 "errors":[]
}
2025-03-06 13:59:56,889 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 242847}]
2025-03-06 13:59:56,890 [DEBUG] py4...: Returning 'get_network_suid': 242847
2025-03-06 13:59:56,890 [DEBUG] py4...: --------------------
2025-03-06 13:59:56,890 [DEBUG] py4...: Calling get_network_suid('Nucleotide excision repair [bvu03420]')
2025-03-06 13:59:56,890 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,890 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,890 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:56,893 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Base excision repair [bvu03410]","SUID":240946},{"name":"Homologous recombination [bvu03440]","SUID":240742},{"name":"ABC transporters [bvu02010]","SUID":241142},{"name":"Mismatch repair [bvu03430]","SUID":242847},{"name":"Nucleotide excision repair [bvu03420]","SUID":242975}]
2025-03-06 13:59:56,893 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Base excision repair [bvu03410]', 'SUID': 240946}, {'name': 'Homologous recombination [bvu03440]', 'SUID': 240742}, {'name': 'ABC transporters [bvu02010]', 'SUID': 241142}, {'name': 'Mismatch repair [bvu03430]', 'SUID': 242847}, {'name': 'Nucleotide excision repair [bvu03420]', 'SUID': 242975}]
2025-03-06 13:59:56,893 [DEBUG] py4...: ǀReturning 'get_network_list': ['Base excision repair [bvu03410]', 'Homologous recombination [bvu03440]', 'ABC transporters [bvu02010]', 'Mismatch repair [bvu03430]', 'Nucleotide excision repair [bvu03420]']
2025-03-06 13:59:56,893 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Nucleotide excision repair [bvu03420]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,893 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Nucleotide excision repair [bvu03420]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:56,897 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 242975
}
],
 "errors":[]
}
2025-03-06 13:59:56,897 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 242975}]
2025-03-06 13:59:56,898 [DEBUG] py4...: Returning 'get_network_suid': 242975
2025-03-06 13:59:56,898 [DEBUG] py4...: --------------------
2025-03-06 13:59:56,898 [DEBUG] py4...: Calling export_network('networks_graphml/Base excision repair [bvu03410].graphml', 'graphml', network=240946, overwrite_file=True)
2025-03-06 13:59:56,898 [DEBUG] py4...: ǀCalling get_network_suid(240946, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,898 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,898 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:56,901 [DEBUG] py4...: ǀǀOK[200], content: [240946,240742,241142,242847,242975]
2025-03-06 13:59:56,901 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [240946, 240742, 241142, 242847, 242975]
2025-03-06 13:59:56,901 [DEBUG] py4...: ǀReturning 'get_network_suid': 240946
2025-03-06 13:59:56,901 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Base excision repair [bvu03410].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,901 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,901 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml'}
2025-03-06 13:59:56,904 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:56,905 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:56,905 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:56,905 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:240946" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,905 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:240946', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml'}
2025-03-06 13:59:56,924 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml"},
 "errors":[]
}
2025-03-06 13:59:56,925 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml'}
2025-03-06 13:59:56,925 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml'}
2025-03-06 13:59:56,925 [DEBUG] py4...: --------------------
2025-03-06 13:59:56,925 [DEBUG] py4...: Calling export_network('networks_graphml/Homologous recombination [bvu03440].graphml', 'graphml', network=240742, overwrite_file=True)
2025-03-06 13:59:56,925 [DEBUG] py4...: ǀCalling get_network_suid(240742, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,925 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,925 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:56,928 [DEBUG] py4...: ǀǀOK[200], content: [240946,240742,241142,242847,242975]
2025-03-06 13:59:56,928 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [240946, 240742, 241142, 242847, 242975]
2025-03-06 13:59:56,928 [DEBUG] py4...: ǀReturning 'get_network_suid': 240742
2025-03-06 13:59:56,928 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Homologous recombination [bvu03440].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,928 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,928 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml'}
2025-03-06 13:59:56,931 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:56,931 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:56,932 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:56,932 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:240742" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,932 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:240742', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml'}
2025-03-06 13:59:56,947 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml"},
 "errors":[]
}
2025-03-06 13:59:56,948 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml'}
2025-03-06 13:59:56,948 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml'}
2025-03-06 13:59:56,948 [DEBUG] py4...: --------------------
2025-03-06 13:59:56,948 [DEBUG] py4...: Calling export_network('networks_graphml/ABC transporters [bvu02010].graphml', 'graphml', network=241142, overwrite_file=True)
2025-03-06 13:59:56,948 [DEBUG] py4...: ǀCalling get_network_suid(241142, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,948 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,948 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:56,951 [DEBUG] py4...: ǀǀOK[200], content: [240946,240742,241142,242847,242975]
2025-03-06 13:59:56,951 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [240946, 240742, 241142, 242847, 242975]
2025-03-06 13:59:56,951 [DEBUG] py4...: ǀReturning 'get_network_suid': 241142
2025-03-06 13:59:56,951 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/ABC transporters [bvu02010].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,951 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,951 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml'}
2025-03-06 13:59:56,954 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:56,954 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:56,955 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:56,955 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:241142" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,955 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:241142', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml'}
2025-03-06 13:59:56,970 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml"},
 "errors":[]
}
2025-03-06 13:59:56,971 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml'}
2025-03-06 13:59:56,971 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml'}
2025-03-06 13:59:56,971 [DEBUG] py4...: --------------------
2025-03-06 13:59:56,971 [DEBUG] py4...: Calling export_network('networks_graphml/Mismatch repair [bvu03430].graphml', 'graphml', network=242847, overwrite_file=True)
2025-03-06 13:59:56,971 [DEBUG] py4...: ǀCalling get_network_suid(242847, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,971 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,971 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:56,974 [DEBUG] py4...: ǀǀOK[200], content: [240946,240742,241142,242847,242975]
2025-03-06 13:59:56,974 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [240946, 240742, 241142, 242847, 242975]
2025-03-06 13:59:56,974 [DEBUG] py4...: ǀReturning 'get_network_suid': 242847
2025-03-06 13:59:56,974 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Mismatch repair [bvu03430].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,974 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,974 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml'}
2025-03-06 13:59:56,978 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:56,978 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:56,978 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:56,978 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:242847" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,978 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:242847', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml'}
2025-03-06 13:59:56,993 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml"},
 "errors":[]
}
2025-03-06 13:59:56,993 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml'}
2025-03-06 13:59:56,993 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml'}
2025-03-06 13:59:56,993 [DEBUG] py4...: --------------------
2025-03-06 13:59:56,993 [DEBUG] py4...: Calling export_network('networks_graphml/Nucleotide excision repair [bvu03420].graphml', 'graphml', network=242975, overwrite_file=True)
2025-03-06 13:59:56,993 [DEBUG] py4...: ǀCalling get_network_suid(242975, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,993 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,994 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:56,998 [DEBUG] py4...: ǀǀOK[200], content: [240946,240742,241142,242847,242975]
2025-03-06 13:59:56,999 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [240946, 240742, 241142, 242847, 242975]
2025-03-06 13:59:56,999 [DEBUG] py4...: ǀReturning 'get_network_suid': 242975
2025-03-06 13:59:56,999 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Nucleotide excision repair [bvu03420].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,999 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:56,999 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml'}
2025-03-06 13:59:57,003 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:57,003 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:57,003 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:57,003 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:242975" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:57,004 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:242975', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml'}
2025-03-06 13:59:57,019 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml"},
 "errors":[]
}
2025-03-06 13:59:57,020 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml'}
2025-03-06 13:59:57,020 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml'}
2025-03-06 13:59:57,020 [DEBUG] py4...: --------------------
2025-03-06 13:59:57,020 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_19.cys')
2025-03-06 13:59:57,020 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_19.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:57,020 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_19.cys'}
2025-03-06 13:59:58,036 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:59:58,037 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:59:58,037 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:59:58,037 [DEBUG] py4...: --------------------
2025-03-06 13:59:58,037 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:59:58,037 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,037 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:58,042 [DEBUG] py4...: ǀOK[200], content: [{"name":"Quorum sensing [bvu02024]","SUID":253940},{"name":"Bacterial secretion system [bvu03070]","SUID":254820},{"name":"Two-component system [bvu02020]","SUID":255476},{"name":"Peroxisome [bvu04146]","SUID":255048},{"name":"Lysosome [bvu04142]","SUID":255246}]
2025-03-06 13:59:58,043 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Quorum sensing [bvu02024]', 'SUID': 253940}, {'name': 'Bacterial secretion system [bvu03070]', 'SUID': 254820}, {'name': 'Two-component system [bvu02020]', 'SUID': 255476}, {'name': 'Peroxisome [bvu04146]', 'SUID': 255048}, {'name': 'Lysosome [bvu04142]', 'SUID': 255246}]
2025-03-06 13:59:58,043 [DEBUG] py4...: Returning 'get_network_list': ['Quorum sensing [bvu02024]', 'Bacterial secretion system [bvu03070]', 'Two-component system [bvu02020]', 'Peroxisome [bvu04146]', 'Lysosome [bvu04142]']
2025-03-06 13:59:58,043 [DEBUG] py4...: --------------------
2025-03-06 13:59:58,043 [DEBUG] py4...: Calling get_network_suid('Quorum sensing [bvu02024]')
2025-03-06 13:59:58,044 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,045 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,045 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:58,050 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Quorum sensing [bvu02024]","SUID":253940},{"name":"Bacterial secretion system [bvu03070]","SUID":254820},{"name":"Two-component system [bvu02020]","SUID":255476},{"name":"Peroxisome [bvu04146]","SUID":255048},{"name":"Lysosome [bvu04142]","SUID":255246}]
2025-03-06 13:59:58,051 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Quorum sensing [bvu02024]', 'SUID': 253940}, {'name': 'Bacterial secretion system [bvu03070]', 'SUID': 254820}, {'name': 'Two-component system [bvu02020]', 'SUID': 255476}, {'name': 'Peroxisome [bvu04146]', 'SUID': 255048}, {'name': 'Lysosome [bvu04142]', 'SUID': 255246}]
2025-03-06 13:59:58,051 [DEBUG] py4...: ǀReturning 'get_network_list': ['Quorum sensing [bvu02024]', 'Bacterial secretion system [bvu03070]', 'Two-component system [bvu02020]', 'Peroxisome [bvu04146]', 'Lysosome [bvu04142]']
2025-03-06 13:59:58,051 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Quorum sensing [bvu02024]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,051 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Quorum sensing [bvu02024]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:58,059 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 253940
}
],
 "errors":[]
}
2025-03-06 13:59:58,059 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 253940}]
2025-03-06 13:59:58,059 [DEBUG] py4...: Returning 'get_network_suid': 253940
2025-03-06 13:59:58,060 [DEBUG] py4...: --------------------
2025-03-06 13:59:58,060 [DEBUG] py4...: Calling get_network_suid('Bacterial secretion system [bvu03070]')
2025-03-06 13:59:58,060 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,060 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,060 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:58,065 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Quorum sensing [bvu02024]","SUID":253940},{"name":"Bacterial secretion system [bvu03070]","SUID":254820},{"name":"Two-component system [bvu02020]","SUID":255476},{"name":"Peroxisome [bvu04146]","SUID":255048},{"name":"Lysosome [bvu04142]","SUID":255246}]
2025-03-06 13:59:58,065 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Quorum sensing [bvu02024]', 'SUID': 253940}, {'name': 'Bacterial secretion system [bvu03070]', 'SUID': 254820}, {'name': 'Two-component system [bvu02020]', 'SUID': 255476}, {'name': 'Peroxisome [bvu04146]', 'SUID': 255048}, {'name': 'Lysosome [bvu04142]', 'SUID': 255246}]
2025-03-06 13:59:58,065 [DEBUG] py4...: ǀReturning 'get_network_list': ['Quorum sensing [bvu02024]', 'Bacterial secretion system [bvu03070]', 'Two-component system [bvu02020]', 'Peroxisome [bvu04146]', 'Lysosome [bvu04142]']
2025-03-06 13:59:58,065 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Bacterial secretion system [bvu03070]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,065 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Bacterial secretion system [bvu03070]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:58,069 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 254820
}
],
 "errors":[]
}
2025-03-06 13:59:58,069 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 254820}]
2025-03-06 13:59:58,069 [DEBUG] py4...: Returning 'get_network_suid': 254820
2025-03-06 13:59:58,069 [DEBUG] py4...: --------------------
2025-03-06 13:59:58,069 [DEBUG] py4...: Calling get_network_suid('Two-component system [bvu02020]')
2025-03-06 13:59:58,069 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,069 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,069 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:58,073 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Quorum sensing [bvu02024]","SUID":253940},{"name":"Bacterial secretion system [bvu03070]","SUID":254820},{"name":"Two-component system [bvu02020]","SUID":255476},{"name":"Peroxisome [bvu04146]","SUID":255048},{"name":"Lysosome [bvu04142]","SUID":255246}]
2025-03-06 13:59:58,073 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Quorum sensing [bvu02024]', 'SUID': 253940}, {'name': 'Bacterial secretion system [bvu03070]', 'SUID': 254820}, {'name': 'Two-component system [bvu02020]', 'SUID': 255476}, {'name': 'Peroxisome [bvu04146]', 'SUID': 255048}, {'name': 'Lysosome [bvu04142]', 'SUID': 255246}]
2025-03-06 13:59:58,073 [DEBUG] py4...: ǀReturning 'get_network_list': ['Quorum sensing [bvu02024]', 'Bacterial secretion system [bvu03070]', 'Two-component system [bvu02020]', 'Peroxisome [bvu04146]', 'Lysosome [bvu04142]']
2025-03-06 13:59:58,073 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Two-component system [bvu02020]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,074 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Two-component system [bvu02020]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:58,078 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 255476
}
],
 "errors":[]
}
2025-03-06 13:59:58,078 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 255476}]
2025-03-06 13:59:58,078 [DEBUG] py4...: Returning 'get_network_suid': 255476
2025-03-06 13:59:58,078 [DEBUG] py4...: --------------------
2025-03-06 13:59:58,078 [DEBUG] py4...: Calling get_network_suid('Peroxisome [bvu04146]')
2025-03-06 13:59:58,078 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,078 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,078 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:58,081 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Quorum sensing [bvu02024]","SUID":253940},{"name":"Bacterial secretion system [bvu03070]","SUID":254820},{"name":"Two-component system [bvu02020]","SUID":255476},{"name":"Peroxisome [bvu04146]","SUID":255048},{"name":"Lysosome [bvu04142]","SUID":255246}]
2025-03-06 13:59:58,081 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Quorum sensing [bvu02024]', 'SUID': 253940}, {'name': 'Bacterial secretion system [bvu03070]', 'SUID': 254820}, {'name': 'Two-component system [bvu02020]', 'SUID': 255476}, {'name': 'Peroxisome [bvu04146]', 'SUID': 255048}, {'name': 'Lysosome [bvu04142]', 'SUID': 255246}]
2025-03-06 13:59:58,081 [DEBUG] py4...: ǀReturning 'get_network_list': ['Quorum sensing [bvu02024]', 'Bacterial secretion system [bvu03070]', 'Two-component system [bvu02020]', 'Peroxisome [bvu04146]', 'Lysosome [bvu04142]']
2025-03-06 13:59:58,081 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Peroxisome [bvu04146]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,082 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Peroxisome [bvu04146]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:58,088 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 255048
}
],
 "errors":[]
}
2025-03-06 13:59:58,088 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 255048}]
2025-03-06 13:59:58,088 [DEBUG] py4...: Returning 'get_network_suid': 255048
2025-03-06 13:59:58,088 [DEBUG] py4...: --------------------
2025-03-06 13:59:58,088 [DEBUG] py4...: Calling get_network_suid('Lysosome [bvu04142]')
2025-03-06 13:59:58,088 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,088 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,088 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:58,091 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Quorum sensing [bvu02024]","SUID":253940},{"name":"Bacterial secretion system [bvu03070]","SUID":254820},{"name":"Two-component system [bvu02020]","SUID":255476},{"name":"Peroxisome [bvu04146]","SUID":255048},{"name":"Lysosome [bvu04142]","SUID":255246}]
2025-03-06 13:59:58,091 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Quorum sensing [bvu02024]', 'SUID': 253940}, {'name': 'Bacterial secretion system [bvu03070]', 'SUID': 254820}, {'name': 'Two-component system [bvu02020]', 'SUID': 255476}, {'name': 'Peroxisome [bvu04146]', 'SUID': 255048}, {'name': 'Lysosome [bvu04142]', 'SUID': 255246}]
2025-03-06 13:59:58,091 [DEBUG] py4...: ǀReturning 'get_network_list': ['Quorum sensing [bvu02024]', 'Bacterial secretion system [bvu03070]', 'Two-component system [bvu02020]', 'Peroxisome [bvu04146]', 'Lysosome [bvu04142]']
2025-03-06 13:59:58,091 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Lysosome [bvu04142]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,091 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Lysosome [bvu04142]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:58,095 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 255246
}
],
 "errors":[]
}
2025-03-06 13:59:58,095 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 255246}]
2025-03-06 13:59:58,095 [DEBUG] py4...: Returning 'get_network_suid': 255246
2025-03-06 13:59:58,095 [DEBUG] py4...: --------------------
2025-03-06 13:59:58,095 [DEBUG] py4...: Calling export_network('networks_graphml/Quorum sensing [bvu02024].graphml', 'graphml', network=253940, overwrite_file=True)
2025-03-06 13:59:58,095 [DEBUG] py4...: ǀCalling get_network_suid(253940, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,095 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,095 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:58,098 [DEBUG] py4...: ǀǀOK[200], content: [253940,254820,255476,255048,255246]
2025-03-06 13:59:58,098 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [253940, 254820, 255476, 255048, 255246]
2025-03-06 13:59:58,098 [DEBUG] py4...: ǀReturning 'get_network_suid': 253940
2025-03-06 13:59:58,098 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Quorum sensing [bvu02024].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,098 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,098 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml'}
2025-03-06 13:59:58,101 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:58,102 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:58,102 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:58,102 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:253940" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,102 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:253940', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml'}
2025-03-06 13:59:58,113 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml"},
 "errors":[]
}
2025-03-06 13:59:58,113 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml'}
2025-03-06 13:59:58,113 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml'}
2025-03-06 13:59:58,113 [DEBUG] py4...: --------------------
2025-03-06 13:59:58,113 [DEBUG] py4...: Calling export_network('networks_graphml/Bacterial secretion system [bvu03070].graphml', 'graphml', network=254820, overwrite_file=True)
2025-03-06 13:59:58,113 [DEBUG] py4...: ǀCalling get_network_suid(254820, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,113 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,114 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:58,117 [DEBUG] py4...: ǀǀOK[200], content: [253940,254820,255476,255048,255246]
2025-03-06 13:59:58,117 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [253940, 254820, 255476, 255048, 255246]
2025-03-06 13:59:58,117 [DEBUG] py4...: ǀReturning 'get_network_suid': 254820
2025-03-06 13:59:58,117 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Bacterial secretion system [bvu03070].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,117 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,117 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml'}
2025-03-06 13:59:58,120 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:58,121 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:58,121 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:58,121 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:254820" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,121 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:254820', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml'}
2025-03-06 13:59:58,132 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml"},
 "errors":[]
}
2025-03-06 13:59:58,132 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml'}
2025-03-06 13:59:58,132 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml'}
2025-03-06 13:59:58,132 [DEBUG] py4...: --------------------
2025-03-06 13:59:58,132 [DEBUG] py4...: Calling export_network('networks_graphml/Two-component system [bvu02020].graphml', 'graphml', network=255476, overwrite_file=True)
2025-03-06 13:59:58,132 [DEBUG] py4...: ǀCalling get_network_suid(255476, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,132 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,132 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:58,135 [DEBUG] py4...: ǀǀOK[200], content: [253940,254820,255476,255048,255246]
2025-03-06 13:59:58,135 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [253940, 254820, 255476, 255048, 255246]
2025-03-06 13:59:58,135 [DEBUG] py4...: ǀReturning 'get_network_suid': 255476
2025-03-06 13:59:58,135 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Two-component system [bvu02020].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,135 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,135 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml'}
2025-03-06 13:59:58,139 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:58,139 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:58,139 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:58,139 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:255476" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,139 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:255476', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml'}
2025-03-06 13:59:58,150 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml"},
 "errors":[]
}
2025-03-06 13:59:58,151 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml'}
2025-03-06 13:59:58,151 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml'}
2025-03-06 13:59:58,151 [DEBUG] py4...: --------------------
2025-03-06 13:59:58,151 [DEBUG] py4...: Calling export_network('networks_graphml/Peroxisome [bvu04146].graphml', 'graphml', network=255048, overwrite_file=True)
2025-03-06 13:59:58,151 [DEBUG] py4...: ǀCalling get_network_suid(255048, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,151 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,151 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:58,156 [DEBUG] py4...: ǀǀOK[200], content: [253940,254820,255476,255048,255246]
2025-03-06 13:59:58,156 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [253940, 254820, 255476, 255048, 255246]
2025-03-06 13:59:58,156 [DEBUG] py4...: ǀReturning 'get_network_suid': 255048
2025-03-06 13:59:58,156 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Peroxisome [bvu04146].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,156 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,156 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml'}
2025-03-06 13:59:58,161 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:58,162 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:58,162 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:58,162 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:255048" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,162 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:255048', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml'}
2025-03-06 13:59:58,174 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml"},
 "errors":[]
}
2025-03-06 13:59:58,174 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml'}
2025-03-06 13:59:58,174 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml'}
2025-03-06 13:59:58,174 [DEBUG] py4...: --------------------
2025-03-06 13:59:58,174 [DEBUG] py4...: Calling export_network('networks_graphml/Lysosome [bvu04142].graphml', 'graphml', network=255246, overwrite_file=True)
2025-03-06 13:59:58,174 [DEBUG] py4...: ǀCalling get_network_suid(255246, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,174 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,174 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:58,177 [DEBUG] py4...: ǀǀOK[200], content: [253940,254820,255476,255048,255246]
2025-03-06 13:59:58,177 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [253940, 254820, 255476, 255048, 255246]
2025-03-06 13:59:58,177 [DEBUG] py4...: ǀReturning 'get_network_suid': 255246
2025-03-06 13:59:58,177 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Lysosome [bvu04142].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,177 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,178 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml'}
2025-03-06 13:59:58,181 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:58,181 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:58,181 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:58,181 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:255246" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,181 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:255246', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml'}
2025-03-06 13:59:58,192 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml"},
 "errors":[]
}
2025-03-06 13:59:58,192 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml'}
2025-03-06 13:59:58,192 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml'}
2025-03-06 13:59:58,192 [DEBUG] py4...: --------------------
2025-03-06 13:59:58,192 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_6.cys')
2025-03-06 13:59:58,193 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_6.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:58,193 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_6.cys'}
2025-03-06 13:59:59,211 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 13:59:59,212 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 13:59:59,212 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 13:59:59,212 [DEBUG] py4...: --------------------
2025-03-06 13:59:59,212 [DEBUG] py4...: Calling get_network_list()
2025-03-06 13:59:59,212 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,212 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:59,217 [DEBUG] py4...: ǀOK[200], content: [{"name":"Sphingolipid metabolism [bvu00600]","SUID":267764},{"name":"Alanine, aspartate and glutamate metabolism [bvu00250]","SUID":268496},{"name":"Glycine, serine and threonine metabolism [bvu00260]","SUID":268066},{"name":"Pyrimidine metabolism [bvu00240]","SUID":269740},{"name":"Purine metabolism [bvu00230]","SUID":268824}]
2025-03-06 13:59:59,217 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Sphingolipid metabolism [bvu00600]', 'SUID': 267764}, {'name': 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'SUID': 268496}, {'name': 'Glycine, serine and threonine metabolism [bvu00260]', 'SUID': 268066}, {'name': 'Pyrimidine metabolism [bvu00240]', 'SUID': 269740}, {'name': 'Purine metabolism [bvu00230]', 'SUID': 268824}]
2025-03-06 13:59:59,217 [DEBUG] py4...: Returning 'get_network_list': ['Sphingolipid metabolism [bvu00600]', 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'Glycine, serine and threonine metabolism [bvu00260]', 'Pyrimidine metabolism [bvu00240]', 'Purine metabolism [bvu00230]']
2025-03-06 13:59:59,217 [DEBUG] py4...: --------------------
2025-03-06 13:59:59,217 [DEBUG] py4...: Calling get_network_suid('Sphingolipid metabolism [bvu00600]')
2025-03-06 13:59:59,218 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,218 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,218 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:59,221 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Sphingolipid metabolism [bvu00600]","SUID":267764},{"name":"Alanine, aspartate and glutamate metabolism [bvu00250]","SUID":268496},{"name":"Glycine, serine and threonine metabolism [bvu00260]","SUID":268066},{"name":"Pyrimidine metabolism [bvu00240]","SUID":269740},{"name":"Purine metabolism [bvu00230]","SUID":268824}]
2025-03-06 13:59:59,221 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Sphingolipid metabolism [bvu00600]', 'SUID': 267764}, {'name': 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'SUID': 268496}, {'name': 'Glycine, serine and threonine metabolism [bvu00260]', 'SUID': 268066}, {'name': 'Pyrimidine metabolism [bvu00240]', 'SUID': 269740}, {'name': 'Purine metabolism [bvu00230]', 'SUID': 268824}]
2025-03-06 13:59:59,221 [DEBUG] py4...: ǀReturning 'get_network_list': ['Sphingolipid metabolism [bvu00600]', 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'Glycine, serine and threonine metabolism [bvu00260]', 'Pyrimidine metabolism [bvu00240]', 'Purine metabolism [bvu00230]']
2025-03-06 13:59:59,221 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Sphingolipid metabolism [bvu00600]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,221 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Sphingolipid metabolism [bvu00600]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:59,225 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 267764
}
],
 "errors":[]
}
2025-03-06 13:59:59,225 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 267764}]
2025-03-06 13:59:59,226 [DEBUG] py4...: Returning 'get_network_suid': 267764
2025-03-06 13:59:59,226 [DEBUG] py4...: --------------------
2025-03-06 13:59:59,226 [DEBUG] py4...: Calling get_network_suid('Alanine, aspartate and glutamate metabolism [bvu00250]')
2025-03-06 13:59:59,226 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,226 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,226 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:59,230 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Sphingolipid metabolism [bvu00600]","SUID":267764},{"name":"Alanine, aspartate and glutamate metabolism [bvu00250]","SUID":268496},{"name":"Glycine, serine and threonine metabolism [bvu00260]","SUID":268066},{"name":"Pyrimidine metabolism [bvu00240]","SUID":269740},{"name":"Purine metabolism [bvu00230]","SUID":268824}]
2025-03-06 13:59:59,231 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Sphingolipid metabolism [bvu00600]', 'SUID': 267764}, {'name': 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'SUID': 268496}, {'name': 'Glycine, serine and threonine metabolism [bvu00260]', 'SUID': 268066}, {'name': 'Pyrimidine metabolism [bvu00240]', 'SUID': 269740}, {'name': 'Purine metabolism [bvu00230]', 'SUID': 268824}]
2025-03-06 13:59:59,231 [DEBUG] py4...: ǀReturning 'get_network_list': ['Sphingolipid metabolism [bvu00600]', 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'Glycine, serine and threonine metabolism [bvu00260]', 'Pyrimidine metabolism [bvu00240]', 'Purine metabolism [bvu00230]']
2025-03-06 13:59:59,231 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Alanine, aspartate and glutamate metabolism [bvu00250]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,231 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:59,235 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 268496
}
],
 "errors":[]
}
2025-03-06 13:59:59,235 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 268496}]
2025-03-06 13:59:59,235 [DEBUG] py4...: Returning 'get_network_suid': 268496
2025-03-06 13:59:59,235 [DEBUG] py4...: --------------------
2025-03-06 13:59:59,235 [DEBUG] py4...: Calling get_network_suid('Glycine, serine and threonine metabolism [bvu00260]')
2025-03-06 13:59:59,235 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,235 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,235 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:59,239 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Sphingolipid metabolism [bvu00600]","SUID":267764},{"name":"Alanine, aspartate and glutamate metabolism [bvu00250]","SUID":268496},{"name":"Glycine, serine and threonine metabolism [bvu00260]","SUID":268066},{"name":"Pyrimidine metabolism [bvu00240]","SUID":269740},{"name":"Purine metabolism [bvu00230]","SUID":268824}]
2025-03-06 13:59:59,241 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Sphingolipid metabolism [bvu00600]', 'SUID': 267764}, {'name': 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'SUID': 268496}, {'name': 'Glycine, serine and threonine metabolism [bvu00260]', 'SUID': 268066}, {'name': 'Pyrimidine metabolism [bvu00240]', 'SUID': 269740}, {'name': 'Purine metabolism [bvu00230]', 'SUID': 268824}]
2025-03-06 13:59:59,241 [DEBUG] py4...: ǀReturning 'get_network_list': ['Sphingolipid metabolism [bvu00600]', 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'Glycine, serine and threonine metabolism [bvu00260]', 'Pyrimidine metabolism [bvu00240]', 'Purine metabolism [bvu00230]']
2025-03-06 13:59:59,241 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glycine, serine and threonine metabolism [bvu00260]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,241 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glycine, serine and threonine metabolism [bvu00260]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:59,245 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 268066
}
],
 "errors":[]
}
2025-03-06 13:59:59,249 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 268066}]
2025-03-06 13:59:59,249 [DEBUG] py4...: Returning 'get_network_suid': 268066
2025-03-06 13:59:59,249 [DEBUG] py4...: --------------------
2025-03-06 13:59:59,249 [DEBUG] py4...: Calling get_network_suid('Pyrimidine metabolism [bvu00240]')
2025-03-06 13:59:59,249 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,249 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,249 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:59,252 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Sphingolipid metabolism [bvu00600]","SUID":267764},{"name":"Alanine, aspartate and glutamate metabolism [bvu00250]","SUID":268496},{"name":"Glycine, serine and threonine metabolism [bvu00260]","SUID":268066},{"name":"Pyrimidine metabolism [bvu00240]","SUID":269740},{"name":"Purine metabolism [bvu00230]","SUID":268824}]
2025-03-06 13:59:59,253 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Sphingolipid metabolism [bvu00600]', 'SUID': 267764}, {'name': 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'SUID': 268496}, {'name': 'Glycine, serine and threonine metabolism [bvu00260]', 'SUID': 268066}, {'name': 'Pyrimidine metabolism [bvu00240]', 'SUID': 269740}, {'name': 'Purine metabolism [bvu00230]', 'SUID': 268824}]
2025-03-06 13:59:59,253 [DEBUG] py4...: ǀReturning 'get_network_list': ['Sphingolipid metabolism [bvu00600]', 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'Glycine, serine and threonine metabolism [bvu00260]', 'Pyrimidine metabolism [bvu00240]', 'Purine metabolism [bvu00230]']
2025-03-06 13:59:59,253 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pyrimidine metabolism [bvu00240]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,253 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pyrimidine metabolism [bvu00240]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:59,256 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 269740
}
],
 "errors":[]
}
2025-03-06 13:59:59,256 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 269740}]
2025-03-06 13:59:59,256 [DEBUG] py4...: Returning 'get_network_suid': 269740
2025-03-06 13:59:59,256 [DEBUG] py4...: --------------------
2025-03-06 13:59:59,257 [DEBUG] py4...: Calling get_network_suid('Purine metabolism [bvu00230]')
2025-03-06 13:59:59,257 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,257 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,257 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 13:59:59,260 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Sphingolipid metabolism [bvu00600]","SUID":267764},{"name":"Alanine, aspartate and glutamate metabolism [bvu00250]","SUID":268496},{"name":"Glycine, serine and threonine metabolism [bvu00260]","SUID":268066},{"name":"Pyrimidine metabolism [bvu00240]","SUID":269740},{"name":"Purine metabolism [bvu00230]","SUID":268824}]
2025-03-06 13:59:59,260 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Sphingolipid metabolism [bvu00600]', 'SUID': 267764}, {'name': 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'SUID': 268496}, {'name': 'Glycine, serine and threonine metabolism [bvu00260]', 'SUID': 268066}, {'name': 'Pyrimidine metabolism [bvu00240]', 'SUID': 269740}, {'name': 'Purine metabolism [bvu00230]', 'SUID': 268824}]
2025-03-06 13:59:59,260 [DEBUG] py4...: ǀReturning 'get_network_list': ['Sphingolipid metabolism [bvu00600]', 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'Glycine, serine and threonine metabolism [bvu00260]', 'Pyrimidine metabolism [bvu00240]', 'Purine metabolism [bvu00230]']
2025-03-06 13:59:59,260 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Purine metabolism [bvu00230]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,260 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Purine metabolism [bvu00230]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 13:59:59,264 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 268824
}
],
 "errors":[]
}
2025-03-06 13:59:59,264 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 268824}]
2025-03-06 13:59:59,264 [DEBUG] py4...: Returning 'get_network_suid': 268824
2025-03-06 13:59:59,264 [DEBUG] py4...: --------------------
2025-03-06 13:59:59,264 [DEBUG] py4...: Calling export_network('networks_graphml/Sphingolipid metabolism [bvu00600].graphml', 'graphml', network=267764, overwrite_file=True)
2025-03-06 13:59:59,264 [DEBUG] py4...: ǀCalling get_network_suid(267764, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,264 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,264 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:59,267 [DEBUG] py4...: ǀǀOK[200], content: [267764,268496,268066,269740,268824]
2025-03-06 13:59:59,267 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [267764, 268496, 268066, 269740, 268824]
2025-03-06 13:59:59,267 [DEBUG] py4...: ǀReturning 'get_network_suid': 267764
2025-03-06 13:59:59,267 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Sphingolipid metabolism [bvu00600].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,267 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,267 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml'}
2025-03-06 13:59:59,270 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:59,270 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:59,270 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:59,270 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:267764" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,270 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:267764', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml'}
2025-03-06 13:59:59,277 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml"},
 "errors":[]
}
2025-03-06 13:59:59,277 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml'}
2025-03-06 13:59:59,277 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml'}
2025-03-06 13:59:59,277 [DEBUG] py4...: --------------------
2025-03-06 13:59:59,277 [DEBUG] py4...: Calling export_network('networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml', 'graphml', network=268496, overwrite_file=True)
2025-03-06 13:59:59,277 [DEBUG] py4...: ǀCalling get_network_suid(268496, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,277 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,277 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:59,279 [DEBUG] py4...: ǀǀOK[200], content: [267764,268496,268066,269740,268824]
2025-03-06 13:59:59,280 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [267764, 268496, 268066, 269740, 268824]
2025-03-06 13:59:59,280 [DEBUG] py4...: ǀReturning 'get_network_suid': 268496
2025-03-06 13:59:59,280 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,280 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,280 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml'}
2025-03-06 13:59:59,283 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:59,283 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:59,283 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:59,283 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:268496" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,283 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:268496', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml'}
2025-03-06 13:59:59,290 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml"},
 "errors":[]
}
2025-03-06 13:59:59,290 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml'}
2025-03-06 13:59:59,291 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml'}
2025-03-06 13:59:59,291 [DEBUG] py4...: --------------------
2025-03-06 13:59:59,291 [DEBUG] py4...: Calling export_network('networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml', 'graphml', network=268066, overwrite_file=True)
2025-03-06 13:59:59,291 [DEBUG] py4...: ǀCalling get_network_suid(268066, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,291 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,291 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:59,293 [DEBUG] py4...: ǀǀOK[200], content: [267764,268496,268066,269740,268824]
2025-03-06 13:59:59,294 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [267764, 268496, 268066, 269740, 268824]
2025-03-06 13:59:59,294 [DEBUG] py4...: ǀReturning 'get_network_suid': 268066
2025-03-06 13:59:59,294 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,294 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,294 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml'}
2025-03-06 13:59:59,297 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:59,297 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:59,297 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:59,297 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:268066" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,297 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:268066', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml'}
2025-03-06 13:59:59,304 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml"},
 "errors":[]
}
2025-03-06 13:59:59,305 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml'}
2025-03-06 13:59:59,305 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml'}
2025-03-06 13:59:59,305 [DEBUG] py4...: --------------------
2025-03-06 13:59:59,305 [DEBUG] py4...: Calling export_network('networks_graphml/Pyrimidine metabolism [bvu00240].graphml', 'graphml', network=269740, overwrite_file=True)
2025-03-06 13:59:59,305 [DEBUG] py4...: ǀCalling get_network_suid(269740, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,305 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,305 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:59,308 [DEBUG] py4...: ǀǀOK[200], content: [267764,268496,268066,269740,268824]
2025-03-06 13:59:59,308 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [267764, 268496, 268066, 269740, 268824]
2025-03-06 13:59:59,308 [DEBUG] py4...: ǀReturning 'get_network_suid': 269740
2025-03-06 13:59:59,308 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Pyrimidine metabolism [bvu00240].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,309 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,309 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml'}
2025-03-06 13:59:59,312 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:59,312 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:59,312 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:59,312 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:269740" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,312 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:269740', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml'}
2025-03-06 13:59:59,320 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml"},
 "errors":[]
}
2025-03-06 13:59:59,321 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml'}
2025-03-06 13:59:59,321 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml'}
2025-03-06 13:59:59,321 [DEBUG] py4...: --------------------
2025-03-06 13:59:59,321 [DEBUG] py4...: Calling export_network('networks_graphml/Purine metabolism [bvu00230].graphml', 'graphml', network=268824, overwrite_file=True)
2025-03-06 13:59:59,321 [DEBUG] py4...: ǀCalling get_network_suid(268824, base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,321 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,321 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 13:59:59,353 [DEBUG] py4...: ǀǀOK[200], content: [267764,268496,268066,269740,268824]
2025-03-06 13:59:59,353 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [267764, 268496, 268066, 269740, 268824]
2025-03-06 13:59:59,353 [DEBUG] py4...: ǀReturning 'get_network_suid': 268824
2025-03-06 13:59:59,353 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Purine metabolism [bvu00230].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,354 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,354 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml'}
2025-03-06 13:59:59,359 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 13:59:59,359 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:59,359 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 13:59:59,359 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:268824" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,359 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:268824', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml'}
2025-03-06 13:59:59,367 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml"},
 "errors":[]
}
2025-03-06 13:59:59,367 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml'}
2025-03-06 13:59:59,367 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml'}
2025-03-06 13:59:59,367 [DEBUG] py4...: --------------------
2025-03-06 13:59:59,367 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_2.cys')
2025-03-06 13:59:59,368 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_2.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 13:59:59,368 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_2.cys'}
2025-03-06 14:00:00,353 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:00:00,354 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:00:00,354 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:00:00,354 [DEBUG] py4...: --------------------
2025-03-06 14:00:00,354 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:00:00,354 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,354 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:00,361 [DEBUG] py4...: ǀOK[200], content: [{"name":"Pyruvate metabolism [bvu00620]","SUID":280678},{"name":"Ascorbate and aldarate metabolism [bvu00053]","SUID":281862},{"name":"Starch and sucrose metabolism [bvu00500]","SUID":280176},{"name":"Galactose metabolism [bvu00052]","SUID":281058},{"name":"Glyoxylate and dicarboxylate metabolism [bvu00630]","SUID":281436}]
2025-03-06 14:00:00,361 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Pyruvate metabolism [bvu00620]', 'SUID': 280678}, {'name': 'Ascorbate and aldarate metabolism [bvu00053]', 'SUID': 281862}, {'name': 'Starch and sucrose metabolism [bvu00500]', 'SUID': 280176}, {'name': 'Galactose metabolism [bvu00052]', 'SUID': 281058}, {'name': 'Glyoxylate and dicarboxylate metabolism [bvu00630]', 'SUID': 281436}]
2025-03-06 14:00:00,361 [DEBUG] py4...: Returning 'get_network_list': ['Pyruvate metabolism [bvu00620]', 'Ascorbate and aldarate metabolism [bvu00053]', 'Starch and sucrose metabolism [bvu00500]', 'Galactose metabolism [bvu00052]', 'Glyoxylate and dicarboxylate metabolism [bvu00630]']
2025-03-06 14:00:00,362 [DEBUG] py4...: --------------------
2025-03-06 14:00:00,362 [DEBUG] py4...: Calling get_network_suid('Pyruvate metabolism [bvu00620]')
2025-03-06 14:00:00,362 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,362 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,362 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:00,365 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Pyruvate metabolism [bvu00620]","SUID":280678},{"name":"Ascorbate and aldarate metabolism [bvu00053]","SUID":281862},{"name":"Starch and sucrose metabolism [bvu00500]","SUID":280176},{"name":"Galactose metabolism [bvu00052]","SUID":281058},{"name":"Glyoxylate and dicarboxylate metabolism [bvu00630]","SUID":281436}]
2025-03-06 14:00:00,365 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Pyruvate metabolism [bvu00620]', 'SUID': 280678}, {'name': 'Ascorbate and aldarate metabolism [bvu00053]', 'SUID': 281862}, {'name': 'Starch and sucrose metabolism [bvu00500]', 'SUID': 280176}, {'name': 'Galactose metabolism [bvu00052]', 'SUID': 281058}, {'name': 'Glyoxylate and dicarboxylate metabolism [bvu00630]', 'SUID': 281436}]
2025-03-06 14:00:00,366 [DEBUG] py4...: ǀReturning 'get_network_list': ['Pyruvate metabolism [bvu00620]', 'Ascorbate and aldarate metabolism [bvu00053]', 'Starch and sucrose metabolism [bvu00500]', 'Galactose metabolism [bvu00052]', 'Glyoxylate and dicarboxylate metabolism [bvu00630]']
2025-03-06 14:00:00,366 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pyruvate metabolism [bvu00620]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,366 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pyruvate metabolism [bvu00620]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:00,369 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 280678
}
],
 "errors":[]
}
2025-03-06 14:00:00,369 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 280678}]
2025-03-06 14:00:00,370 [DEBUG] py4...: Returning 'get_network_suid': 280678
2025-03-06 14:00:00,370 [DEBUG] py4...: --------------------
2025-03-06 14:00:00,370 [DEBUG] py4...: Calling get_network_suid('Ascorbate and aldarate metabolism [bvu00053]')
2025-03-06 14:00:00,370 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,370 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,370 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:00,373 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Pyruvate metabolism [bvu00620]","SUID":280678},{"name":"Ascorbate and aldarate metabolism [bvu00053]","SUID":281862},{"name":"Starch and sucrose metabolism [bvu00500]","SUID":280176},{"name":"Galactose metabolism [bvu00052]","SUID":281058},{"name":"Glyoxylate and dicarboxylate metabolism [bvu00630]","SUID":281436}]
2025-03-06 14:00:00,373 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Pyruvate metabolism [bvu00620]', 'SUID': 280678}, {'name': 'Ascorbate and aldarate metabolism [bvu00053]', 'SUID': 281862}, {'name': 'Starch and sucrose metabolism [bvu00500]', 'SUID': 280176}, {'name': 'Galactose metabolism [bvu00052]', 'SUID': 281058}, {'name': 'Glyoxylate and dicarboxylate metabolism [bvu00630]', 'SUID': 281436}]
2025-03-06 14:00:00,373 [DEBUG] py4...: ǀReturning 'get_network_list': ['Pyruvate metabolism [bvu00620]', 'Ascorbate and aldarate metabolism [bvu00053]', 'Starch and sucrose metabolism [bvu00500]', 'Galactose metabolism [bvu00052]', 'Glyoxylate and dicarboxylate metabolism [bvu00630]']
2025-03-06 14:00:00,373 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Ascorbate and aldarate metabolism [bvu00053]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,374 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Ascorbate and aldarate metabolism [bvu00053]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:00,377 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 281862
}
],
 "errors":[]
}
2025-03-06 14:00:00,377 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 281862}]
2025-03-06 14:00:00,378 [DEBUG] py4...: Returning 'get_network_suid': 281862
2025-03-06 14:00:00,378 [DEBUG] py4...: --------------------
2025-03-06 14:00:00,378 [DEBUG] py4...: Calling get_network_suid('Starch and sucrose metabolism [bvu00500]')
2025-03-06 14:00:00,378 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,378 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,378 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:00,381 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Pyruvate metabolism [bvu00620]","SUID":280678},{"name":"Ascorbate and aldarate metabolism [bvu00053]","SUID":281862},{"name":"Starch and sucrose metabolism [bvu00500]","SUID":280176},{"name":"Galactose metabolism [bvu00052]","SUID":281058},{"name":"Glyoxylate and dicarboxylate metabolism [bvu00630]","SUID":281436}]
2025-03-06 14:00:00,381 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Pyruvate metabolism [bvu00620]', 'SUID': 280678}, {'name': 'Ascorbate and aldarate metabolism [bvu00053]', 'SUID': 281862}, {'name': 'Starch and sucrose metabolism [bvu00500]', 'SUID': 280176}, {'name': 'Galactose metabolism [bvu00052]', 'SUID': 281058}, {'name': 'Glyoxylate and dicarboxylate metabolism [bvu00630]', 'SUID': 281436}]
2025-03-06 14:00:00,381 [DEBUG] py4...: ǀReturning 'get_network_list': ['Pyruvate metabolism [bvu00620]', 'Ascorbate and aldarate metabolism [bvu00053]', 'Starch and sucrose metabolism [bvu00500]', 'Galactose metabolism [bvu00052]', 'Glyoxylate and dicarboxylate metabolism [bvu00630]']
2025-03-06 14:00:00,381 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Starch and sucrose metabolism [bvu00500]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,381 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Starch and sucrose metabolism [bvu00500]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:00,385 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 280176
}
],
 "errors":[]
}
2025-03-06 14:00:00,386 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 280176}]
2025-03-06 14:00:00,386 [DEBUG] py4...: Returning 'get_network_suid': 280176
2025-03-06 14:00:00,386 [DEBUG] py4...: --------------------
2025-03-06 14:00:00,386 [DEBUG] py4...: Calling get_network_suid('Galactose metabolism [bvu00052]')
2025-03-06 14:00:00,386 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,386 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,386 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:00,389 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Pyruvate metabolism [bvu00620]","SUID":280678},{"name":"Ascorbate and aldarate metabolism [bvu00053]","SUID":281862},{"name":"Starch and sucrose metabolism [bvu00500]","SUID":280176},{"name":"Galactose metabolism [bvu00052]","SUID":281058},{"name":"Glyoxylate and dicarboxylate metabolism [bvu00630]","SUID":281436}]
2025-03-06 14:00:00,390 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Pyruvate metabolism [bvu00620]', 'SUID': 280678}, {'name': 'Ascorbate and aldarate metabolism [bvu00053]', 'SUID': 281862}, {'name': 'Starch and sucrose metabolism [bvu00500]', 'SUID': 280176}, {'name': 'Galactose metabolism [bvu00052]', 'SUID': 281058}, {'name': 'Glyoxylate and dicarboxylate metabolism [bvu00630]', 'SUID': 281436}]
2025-03-06 14:00:00,390 [DEBUG] py4...: ǀReturning 'get_network_list': ['Pyruvate metabolism [bvu00620]', 'Ascorbate and aldarate metabolism [bvu00053]', 'Starch and sucrose metabolism [bvu00500]', 'Galactose metabolism [bvu00052]', 'Glyoxylate and dicarboxylate metabolism [bvu00630]']
2025-03-06 14:00:00,390 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Galactose metabolism [bvu00052]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,390 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Galactose metabolism [bvu00052]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:00,394 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 281058
}
],
 "errors":[]
}
2025-03-06 14:00:00,394 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 281058}]
2025-03-06 14:00:00,395 [DEBUG] py4...: Returning 'get_network_suid': 281058
2025-03-06 14:00:00,395 [DEBUG] py4...: --------------------
2025-03-06 14:00:00,395 [DEBUG] py4...: Calling get_network_suid('Glyoxylate and dicarboxylate metabolism [bvu00630]')
2025-03-06 14:00:00,395 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,395 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,395 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:00,398 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Pyruvate metabolism [bvu00620]","SUID":280678},{"name":"Ascorbate and aldarate metabolism [bvu00053]","SUID":281862},{"name":"Starch and sucrose metabolism [bvu00500]","SUID":280176},{"name":"Galactose metabolism [bvu00052]","SUID":281058},{"name":"Glyoxylate and dicarboxylate metabolism [bvu00630]","SUID":281436}]
2025-03-06 14:00:00,398 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Pyruvate metabolism [bvu00620]', 'SUID': 280678}, {'name': 'Ascorbate and aldarate metabolism [bvu00053]', 'SUID': 281862}, {'name': 'Starch and sucrose metabolism [bvu00500]', 'SUID': 280176}, {'name': 'Galactose metabolism [bvu00052]', 'SUID': 281058}, {'name': 'Glyoxylate and dicarboxylate metabolism [bvu00630]', 'SUID': 281436}]
2025-03-06 14:00:00,398 [DEBUG] py4...: ǀReturning 'get_network_list': ['Pyruvate metabolism [bvu00620]', 'Ascorbate and aldarate metabolism [bvu00053]', 'Starch and sucrose metabolism [bvu00500]', 'Galactose metabolism [bvu00052]', 'Glyoxylate and dicarboxylate metabolism [bvu00630]']
2025-03-06 14:00:00,398 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glyoxylate and dicarboxylate metabolism [bvu00630]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,398 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glyoxylate and dicarboxylate metabolism [bvu00630]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:00,402 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 281436
}
],
 "errors":[]
}
2025-03-06 14:00:00,402 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 281436}]
2025-03-06 14:00:00,402 [DEBUG] py4...: Returning 'get_network_suid': 281436
2025-03-06 14:00:00,402 [DEBUG] py4...: --------------------
2025-03-06 14:00:00,402 [DEBUG] py4...: Calling export_network('networks_graphml/Pyruvate metabolism [bvu00620].graphml', 'graphml', network=280678, overwrite_file=True)
2025-03-06 14:00:00,402 [DEBUG] py4...: ǀCalling get_network_suid(280678, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,402 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,402 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:00,406 [DEBUG] py4...: ǀǀOK[200], content: [280678,281862,280176,281058,281436]
2025-03-06 14:00:00,407 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [280678, 281862, 280176, 281058, 281436]
2025-03-06 14:00:00,407 [DEBUG] py4...: ǀReturning 'get_network_suid': 280678
2025-03-06 14:00:00,407 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Pyruvate metabolism [bvu00620].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,407 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,407 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml'}
2025-03-06 14:00:00,410 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:00,410 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:00,410 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:00,410 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:280678" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,410 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:280678', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml'}
2025-03-06 14:00:00,418 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml"},
 "errors":[]
}
2025-03-06 14:00:00,419 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml'}
2025-03-06 14:00:00,419 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml'}
2025-03-06 14:00:00,419 [DEBUG] py4...: --------------------
2025-03-06 14:00:00,419 [DEBUG] py4...: Calling export_network('networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml', 'graphml', network=281862, overwrite_file=True)
2025-03-06 14:00:00,419 [DEBUG] py4...: ǀCalling get_network_suid(281862, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,419 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,419 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:00,422 [DEBUG] py4...: ǀǀOK[200], content: [280678,281862,280176,281058,281436]
2025-03-06 14:00:00,422 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [280678, 281862, 280176, 281058, 281436]
2025-03-06 14:00:00,422 [DEBUG] py4...: ǀReturning 'get_network_suid': 281862
2025-03-06 14:00:00,422 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,422 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,422 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml'}
2025-03-06 14:00:00,425 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:00,425 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:00,425 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:00,425 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:281862" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,426 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:281862', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml'}
2025-03-06 14:00:00,433 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml"},
 "errors":[]
}
2025-03-06 14:00:00,434 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml'}
2025-03-06 14:00:00,434 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml'}
2025-03-06 14:00:00,434 [DEBUG] py4...: --------------------
2025-03-06 14:00:00,434 [DEBUG] py4...: Calling export_network('networks_graphml/Starch and sucrose metabolism [bvu00500].graphml', 'graphml', network=280176, overwrite_file=True)
2025-03-06 14:00:00,434 [DEBUG] py4...: ǀCalling get_network_suid(280176, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,434 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,434 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:00,437 [DEBUG] py4...: ǀǀOK[200], content: [280678,281862,280176,281058,281436]
2025-03-06 14:00:00,437 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [280678, 281862, 280176, 281058, 281436]
2025-03-06 14:00:00,437 [DEBUG] py4...: ǀReturning 'get_network_suid': 280176
2025-03-06 14:00:00,437 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Starch and sucrose metabolism [bvu00500].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,437 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,437 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml'}
2025-03-06 14:00:00,441 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:00,441 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:00,441 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:00,441 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:280176" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,441 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:280176', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml'}
2025-03-06 14:00:00,448 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml"},
 "errors":[]
}
2025-03-06 14:00:00,448 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml'}
2025-03-06 14:00:00,448 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml'}
2025-03-06 14:00:00,448 [DEBUG] py4...: --------------------
2025-03-06 14:00:00,448 [DEBUG] py4...: Calling export_network('networks_graphml/Galactose metabolism [bvu00052].graphml', 'graphml', network=281058, overwrite_file=True)
2025-03-06 14:00:00,449 [DEBUG] py4...: ǀCalling get_network_suid(281058, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,449 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,449 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:00,452 [DEBUG] py4...: ǀǀOK[200], content: [280678,281862,280176,281058,281436]
2025-03-06 14:00:00,452 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [280678, 281862, 280176, 281058, 281436]
2025-03-06 14:00:00,452 [DEBUG] py4...: ǀReturning 'get_network_suid': 281058
2025-03-06 14:00:00,452 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Galactose metabolism [bvu00052].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,452 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,452 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml'}
2025-03-06 14:00:00,456 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:00,456 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:00,456 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:00,456 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:281058" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,456 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:281058', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml'}
2025-03-06 14:00:00,463 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml"},
 "errors":[]
}
2025-03-06 14:00:00,463 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml'}
2025-03-06 14:00:00,463 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml'}
2025-03-06 14:00:00,463 [DEBUG] py4...: --------------------
2025-03-06 14:00:00,464 [DEBUG] py4...: Calling export_network('networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml', 'graphml', network=281436, overwrite_file=True)
2025-03-06 14:00:00,464 [DEBUG] py4...: ǀCalling get_network_suid(281436, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,464 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,464 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:00,467 [DEBUG] py4...: ǀǀOK[200], content: [280678,281862,280176,281058,281436]
2025-03-06 14:00:00,467 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [280678, 281862, 280176, 281058, 281436]
2025-03-06 14:00:00,467 [DEBUG] py4...: ǀReturning 'get_network_suid': 281436
2025-03-06 14:00:00,467 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,467 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,467 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml'}
2025-03-06 14:00:00,470 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:00,470 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:00,470 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:00,470 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:281436" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,470 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:281436', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml'}
2025-03-06 14:00:00,477 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml"},
 "errors":[]
}
2025-03-06 14:00:00,477 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml'}
2025-03-06 14:00:00,477 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml'}
2025-03-06 14:00:00,477 [DEBUG] py4...: --------------------
2025-03-06 14:00:00,477 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_20.cys')
2025-03-06 14:00:00,477 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_20.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:00,477 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_20.cys'}
2025-03-06 14:00:01,421 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:00:01,422 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:00:01,422 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:00:01,422 [DEBUG] py4...: --------------------
2025-03-06 14:00:01,422 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:00:01,422 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,422 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:01,428 [DEBUG] py4...: ǀOK[200], content: [{"name":"Cobalamin transport and metabolism [bvu04980]","SUID":290621},{"name":"Vancomycin resistance [bvu01502]","SUID":289647},{"name":"Flagellar assembly [bvu02040]","SUID":290169},{"name":"Folate transport and metabolism [bvu04981]","SUID":290345},{"name":"beta-Lactam resistance [bvu01501]","SUID":289915}]
2025-03-06 14:00:01,428 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Cobalamin transport and metabolism [bvu04980]', 'SUID': 290621}, {'name': 'Vancomycin resistance [bvu01502]', 'SUID': 289647}, {'name': 'Flagellar assembly [bvu02040]', 'SUID': 290169}, {'name': 'Folate transport and metabolism [bvu04981]', 'SUID': 290345}, {'name': 'beta-Lactam resistance [bvu01501]', 'SUID': 289915}]
2025-03-06 14:00:01,428 [DEBUG] py4...: Returning 'get_network_list': ['Cobalamin transport and metabolism [bvu04980]', 'Vancomycin resistance [bvu01502]', 'Flagellar assembly [bvu02040]', 'Folate transport and metabolism [bvu04981]', 'beta-Lactam resistance [bvu01501]']
2025-03-06 14:00:01,429 [DEBUG] py4...: --------------------
2025-03-06 14:00:01,429 [DEBUG] py4...: Calling get_network_suid('Cobalamin transport and metabolism [bvu04980]')
2025-03-06 14:00:01,429 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,429 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,429 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:01,432 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Cobalamin transport and metabolism [bvu04980]","SUID":290621},{"name":"Vancomycin resistance [bvu01502]","SUID":289647},{"name":"Flagellar assembly [bvu02040]","SUID":290169},{"name":"Folate transport and metabolism [bvu04981]","SUID":290345},{"name":"beta-Lactam resistance [bvu01501]","SUID":289915}]
2025-03-06 14:00:01,432 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Cobalamin transport and metabolism [bvu04980]', 'SUID': 290621}, {'name': 'Vancomycin resistance [bvu01502]', 'SUID': 289647}, {'name': 'Flagellar assembly [bvu02040]', 'SUID': 290169}, {'name': 'Folate transport and metabolism [bvu04981]', 'SUID': 290345}, {'name': 'beta-Lactam resistance [bvu01501]', 'SUID': 289915}]
2025-03-06 14:00:01,432 [DEBUG] py4...: ǀReturning 'get_network_list': ['Cobalamin transport and metabolism [bvu04980]', 'Vancomycin resistance [bvu01502]', 'Flagellar assembly [bvu02040]', 'Folate transport and metabolism [bvu04981]', 'beta-Lactam resistance [bvu01501]']
2025-03-06 14:00:01,432 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Cobalamin transport and metabolism [bvu04980]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,432 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Cobalamin transport and metabolism [bvu04980]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:01,436 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 290621
}
],
 "errors":[]
}
2025-03-06 14:00:01,436 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 290621}]
2025-03-06 14:00:01,436 [DEBUG] py4...: Returning 'get_network_suid': 290621
2025-03-06 14:00:01,436 [DEBUG] py4...: --------------------
2025-03-06 14:00:01,436 [DEBUG] py4...: Calling get_network_suid('Vancomycin resistance [bvu01502]')
2025-03-06 14:00:01,436 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,436 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,436 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:01,440 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Cobalamin transport and metabolism [bvu04980]","SUID":290621},{"name":"Vancomycin resistance [bvu01502]","SUID":289647},{"name":"Flagellar assembly [bvu02040]","SUID":290169},{"name":"Folate transport and metabolism [bvu04981]","SUID":290345},{"name":"beta-Lactam resistance [bvu01501]","SUID":289915}]
2025-03-06 14:00:01,440 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Cobalamin transport and metabolism [bvu04980]', 'SUID': 290621}, {'name': 'Vancomycin resistance [bvu01502]', 'SUID': 289647}, {'name': 'Flagellar assembly [bvu02040]', 'SUID': 290169}, {'name': 'Folate transport and metabolism [bvu04981]', 'SUID': 290345}, {'name': 'beta-Lactam resistance [bvu01501]', 'SUID': 289915}]
2025-03-06 14:00:01,440 [DEBUG] py4...: ǀReturning 'get_network_list': ['Cobalamin transport and metabolism [bvu04980]', 'Vancomycin resistance [bvu01502]', 'Flagellar assembly [bvu02040]', 'Folate transport and metabolism [bvu04981]', 'beta-Lactam resistance [bvu01501]']
2025-03-06 14:00:01,440 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Vancomycin resistance [bvu01502]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,440 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Vancomycin resistance [bvu01502]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:01,444 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 289647
}
],
 "errors":[]
}
2025-03-06 14:00:01,444 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 289647}]
2025-03-06 14:00:01,444 [DEBUG] py4...: Returning 'get_network_suid': 289647
2025-03-06 14:00:01,444 [DEBUG] py4...: --------------------
2025-03-06 14:00:01,444 [DEBUG] py4...: Calling get_network_suid('Flagellar assembly [bvu02040]')
2025-03-06 14:00:01,444 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,444 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,444 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:01,448 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Cobalamin transport and metabolism [bvu04980]","SUID":290621},{"name":"Vancomycin resistance [bvu01502]","SUID":289647},{"name":"Flagellar assembly [bvu02040]","SUID":290169},{"name":"Folate transport and metabolism [bvu04981]","SUID":290345},{"name":"beta-Lactam resistance [bvu01501]","SUID":289915}]
2025-03-06 14:00:01,448 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Cobalamin transport and metabolism [bvu04980]', 'SUID': 290621}, {'name': 'Vancomycin resistance [bvu01502]', 'SUID': 289647}, {'name': 'Flagellar assembly [bvu02040]', 'SUID': 290169}, {'name': 'Folate transport and metabolism [bvu04981]', 'SUID': 290345}, {'name': 'beta-Lactam resistance [bvu01501]', 'SUID': 289915}]
2025-03-06 14:00:01,448 [DEBUG] py4...: ǀReturning 'get_network_list': ['Cobalamin transport and metabolism [bvu04980]', 'Vancomycin resistance [bvu01502]', 'Flagellar assembly [bvu02040]', 'Folate transport and metabolism [bvu04981]', 'beta-Lactam resistance [bvu01501]']
2025-03-06 14:00:01,448 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Flagellar assembly [bvu02040]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,448 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Flagellar assembly [bvu02040]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:01,452 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 290169
}
],
 "errors":[]
}
2025-03-06 14:00:01,453 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 290169}]
2025-03-06 14:00:01,453 [DEBUG] py4...: Returning 'get_network_suid': 290169
2025-03-06 14:00:01,453 [DEBUG] py4...: --------------------
2025-03-06 14:00:01,453 [DEBUG] py4...: Calling get_network_suid('Folate transport and metabolism [bvu04981]')
2025-03-06 14:00:01,453 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,453 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,453 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:01,455 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Cobalamin transport and metabolism [bvu04980]","SUID":290621},{"name":"Vancomycin resistance [bvu01502]","SUID":289647},{"name":"Flagellar assembly [bvu02040]","SUID":290169},{"name":"Folate transport and metabolism [bvu04981]","SUID":290345},{"name":"beta-Lactam resistance [bvu01501]","SUID":289915}]
2025-03-06 14:00:01,456 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Cobalamin transport and metabolism [bvu04980]', 'SUID': 290621}, {'name': 'Vancomycin resistance [bvu01502]', 'SUID': 289647}, {'name': 'Flagellar assembly [bvu02040]', 'SUID': 290169}, {'name': 'Folate transport and metabolism [bvu04981]', 'SUID': 290345}, {'name': 'beta-Lactam resistance [bvu01501]', 'SUID': 289915}]
2025-03-06 14:00:01,456 [DEBUG] py4...: ǀReturning 'get_network_list': ['Cobalamin transport and metabolism [bvu04980]', 'Vancomycin resistance [bvu01502]', 'Flagellar assembly [bvu02040]', 'Folate transport and metabolism [bvu04981]', 'beta-Lactam resistance [bvu01501]']
2025-03-06 14:00:01,456 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Folate transport and metabolism [bvu04981]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,456 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Folate transport and metabolism [bvu04981]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:01,459 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 290345
}
],
 "errors":[]
}
2025-03-06 14:00:01,460 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 290345}]
2025-03-06 14:00:01,460 [DEBUG] py4...: Returning 'get_network_suid': 290345
2025-03-06 14:00:01,460 [DEBUG] py4...: --------------------
2025-03-06 14:00:01,460 [DEBUG] py4...: Calling get_network_suid('beta-Lactam resistance [bvu01501]')
2025-03-06 14:00:01,460 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,460 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,460 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:01,466 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Cobalamin transport and metabolism [bvu04980]","SUID":290621},{"name":"Vancomycin resistance [bvu01502]","SUID":289647},{"name":"Flagellar assembly [bvu02040]","SUID":290169},{"name":"Folate transport and metabolism [bvu04981]","SUID":290345},{"name":"beta-Lactam resistance [bvu01501]","SUID":289915}]
2025-03-06 14:00:01,467 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Cobalamin transport and metabolism [bvu04980]', 'SUID': 290621}, {'name': 'Vancomycin resistance [bvu01502]', 'SUID': 289647}, {'name': 'Flagellar assembly [bvu02040]', 'SUID': 290169}, {'name': 'Folate transport and metabolism [bvu04981]', 'SUID': 290345}, {'name': 'beta-Lactam resistance [bvu01501]', 'SUID': 289915}]
2025-03-06 14:00:01,467 [DEBUG] py4...: ǀReturning 'get_network_list': ['Cobalamin transport and metabolism [bvu04980]', 'Vancomycin resistance [bvu01502]', 'Flagellar assembly [bvu02040]', 'Folate transport and metabolism [bvu04981]', 'beta-Lactam resistance [bvu01501]']
2025-03-06 14:00:01,467 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="beta-Lactam resistance [bvu01501]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,467 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'beta-Lactam resistance [bvu01501]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:01,471 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 289915
}
],
 "errors":[]
}
2025-03-06 14:00:01,471 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 289915}]
2025-03-06 14:00:01,471 [DEBUG] py4...: Returning 'get_network_suid': 289915
2025-03-06 14:00:01,471 [DEBUG] py4...: --------------------
2025-03-06 14:00:01,471 [DEBUG] py4...: Calling export_network('networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml', 'graphml', network=290621, overwrite_file=True)
2025-03-06 14:00:01,471 [DEBUG] py4...: ǀCalling get_network_suid(290621, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,471 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,471 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:01,474 [DEBUG] py4...: ǀǀOK[200], content: [290621,289647,290169,290345,289915]
2025-03-06 14:00:01,474 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [290621, 289647, 290169, 290345, 289915]
2025-03-06 14:00:01,474 [DEBUG] py4...: ǀReturning 'get_network_suid': 290621
2025-03-06 14:00:01,474 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,474 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,474 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml'}
2025-03-06 14:00:01,477 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:01,477 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:01,477 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:01,477 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:290621" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,477 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:290621', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml'}
2025-03-06 14:00:01,483 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml"},
 "errors":[]
}
2025-03-06 14:00:01,483 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml'}
2025-03-06 14:00:01,483 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml'}
2025-03-06 14:00:01,483 [DEBUG] py4...: --------------------
2025-03-06 14:00:01,483 [DEBUG] py4...: Calling export_network('networks_graphml/Vancomycin resistance [bvu01502].graphml', 'graphml', network=289647, overwrite_file=True)
2025-03-06 14:00:01,483 [DEBUG] py4...: ǀCalling get_network_suid(289647, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,483 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,483 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:01,486 [DEBUG] py4...: ǀǀOK[200], content: [290621,289647,290169,290345,289915]
2025-03-06 14:00:01,486 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [290621, 289647, 290169, 290345, 289915]
2025-03-06 14:00:01,486 [DEBUG] py4...: ǀReturning 'get_network_suid': 289647
2025-03-06 14:00:01,486 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Vancomycin resistance [bvu01502].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,486 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,486 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml'}
2025-03-06 14:00:01,489 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:01,490 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:01,490 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:01,490 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:289647" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,490 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:289647', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml'}
2025-03-06 14:00:01,496 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml"},
 "errors":[]
}
2025-03-06 14:00:01,496 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml'}
2025-03-06 14:00:01,496 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml'}
2025-03-06 14:00:01,496 [DEBUG] py4...: --------------------
2025-03-06 14:00:01,496 [DEBUG] py4...: Calling export_network('networks_graphml/Flagellar assembly [bvu02040].graphml', 'graphml', network=290169, overwrite_file=True)
2025-03-06 14:00:01,496 [DEBUG] py4...: ǀCalling get_network_suid(290169, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,496 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,496 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:01,499 [DEBUG] py4...: ǀǀOK[200], content: [290621,289647,290169,290345,289915]
2025-03-06 14:00:01,499 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [290621, 289647, 290169, 290345, 289915]
2025-03-06 14:00:01,499 [DEBUG] py4...: ǀReturning 'get_network_suid': 290169
2025-03-06 14:00:01,499 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Flagellar assembly [bvu02040].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,500 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,500 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml'}
2025-03-06 14:00:01,503 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:01,503 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:01,503 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:01,503 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:290169" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,503 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:290169', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml'}
2025-03-06 14:00:01,509 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml"},
 "errors":[]
}
2025-03-06 14:00:01,510 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml'}
2025-03-06 14:00:01,510 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml'}
2025-03-06 14:00:01,510 [DEBUG] py4...: --------------------
2025-03-06 14:00:01,510 [DEBUG] py4...: Calling export_network('networks_graphml/Folate transport and metabolism [bvu04981].graphml', 'graphml', network=290345, overwrite_file=True)
2025-03-06 14:00:01,510 [DEBUG] py4...: ǀCalling get_network_suid(290345, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,510 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,510 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:01,513 [DEBUG] py4...: ǀǀOK[200], content: [290621,289647,290169,290345,289915]
2025-03-06 14:00:01,513 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [290621, 289647, 290169, 290345, 289915]
2025-03-06 14:00:01,513 [DEBUG] py4...: ǀReturning 'get_network_suid': 290345
2025-03-06 14:00:01,513 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Folate transport and metabolism [bvu04981].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,513 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,513 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml'}
2025-03-06 14:00:01,516 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:01,516 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:01,516 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:01,516 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:290345" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,516 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:290345', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml'}
2025-03-06 14:00:01,522 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml"},
 "errors":[]
}
2025-03-06 14:00:01,522 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml'}
2025-03-06 14:00:01,522 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml'}
2025-03-06 14:00:01,522 [DEBUG] py4...: --------------------
2025-03-06 14:00:01,522 [DEBUG] py4...: Calling export_network('networks_graphml/beta-Lactam resistance [bvu01501].graphml', 'graphml', network=289915, overwrite_file=True)
2025-03-06 14:00:01,522 [DEBUG] py4...: ǀCalling get_network_suid(289915, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,522 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,522 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:01,526 [DEBUG] py4...: ǀǀOK[200], content: [290621,289647,290169,290345,289915]
2025-03-06 14:00:01,526 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [290621, 289647, 290169, 290345, 289915]
2025-03-06 14:00:01,526 [DEBUG] py4...: ǀReturning 'get_network_suid': 289915
2025-03-06 14:00:01,526 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/beta-Lactam resistance [bvu01501].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,526 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,527 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml'}
2025-03-06 14:00:01,534 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:01,535 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:01,535 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:01,535 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:289915" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,536 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:289915', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml'}
2025-03-06 14:00:01,547 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml"},
 "errors":[]
}
2025-03-06 14:00:01,547 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml'}
2025-03-06 14:00:01,547 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml'}
2025-03-06 14:00:01,547 [DEBUG] py4...: --------------------
2025-03-06 14:00:01,547 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_3.cys')
2025-03-06 14:00:01,547 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_3.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:01,547 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_3.cys'}
2025-03-06 14:00:02,532 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:00:02,532 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:00:02,533 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:00:02,533 [DEBUG] py4...: --------------------
2025-03-06 14:00:02,533 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:00:02,533 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,533 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:02,537 [DEBUG] py4...: ǀOK[200], content: [{"name":"Propanoate metabolism [bvu00640]","SUID":296022},{"name":"C5-Branched dibasic acid metabolism [bvu00660]","SUID":296690},{"name":"Oxidative phosphorylation [bvu00190]","SUID":295516},{"name":"Inositol phosphate metabolism [bvu00562]","SUID":295144},{"name":"Butanoate metabolism [bvu00650]","SUID":296362}]
2025-03-06 14:00:02,538 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Propanoate metabolism [bvu00640]', 'SUID': 296022}, {'name': 'C5-Branched dibasic acid metabolism [bvu00660]', 'SUID': 296690}, {'name': 'Oxidative phosphorylation [bvu00190]', 'SUID': 295516}, {'name': 'Inositol phosphate metabolism [bvu00562]', 'SUID': 295144}, {'name': 'Butanoate metabolism [bvu00650]', 'SUID': 296362}]
2025-03-06 14:00:02,538 [DEBUG] py4...: Returning 'get_network_list': ['Propanoate metabolism [bvu00640]', 'C5-Branched dibasic acid metabolism [bvu00660]', 'Oxidative phosphorylation [bvu00190]', 'Inositol phosphate metabolism [bvu00562]', 'Butanoate metabolism [bvu00650]']
2025-03-06 14:00:02,538 [DEBUG] py4...: --------------------
2025-03-06 14:00:02,538 [DEBUG] py4...: Calling get_network_suid('Propanoate metabolism [bvu00640]')
2025-03-06 14:00:02,538 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,538 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,538 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:02,543 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Propanoate metabolism [bvu00640]","SUID":296022},{"name":"C5-Branched dibasic acid metabolism [bvu00660]","SUID":296690},{"name":"Oxidative phosphorylation [bvu00190]","SUID":295516},{"name":"Inositol phosphate metabolism [bvu00562]","SUID":295144},{"name":"Butanoate metabolism [bvu00650]","SUID":296362}]
2025-03-06 14:00:02,544 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Propanoate metabolism [bvu00640]', 'SUID': 296022}, {'name': 'C5-Branched dibasic acid metabolism [bvu00660]', 'SUID': 296690}, {'name': 'Oxidative phosphorylation [bvu00190]', 'SUID': 295516}, {'name': 'Inositol phosphate metabolism [bvu00562]', 'SUID': 295144}, {'name': 'Butanoate metabolism [bvu00650]', 'SUID': 296362}]
2025-03-06 14:00:02,544 [DEBUG] py4...: ǀReturning 'get_network_list': ['Propanoate metabolism [bvu00640]', 'C5-Branched dibasic acid metabolism [bvu00660]', 'Oxidative phosphorylation [bvu00190]', 'Inositol phosphate metabolism [bvu00562]', 'Butanoate metabolism [bvu00650]']
2025-03-06 14:00:02,544 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Propanoate metabolism [bvu00640]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,544 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Propanoate metabolism [bvu00640]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:02,547 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 296022
}
],
 "errors":[]
}
2025-03-06 14:00:02,547 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 296022}]
2025-03-06 14:00:02,547 [DEBUG] py4...: Returning 'get_network_suid': 296022
2025-03-06 14:00:02,547 [DEBUG] py4...: --------------------
2025-03-06 14:00:02,547 [DEBUG] py4...: Calling get_network_suid('C5-Branched dibasic acid metabolism [bvu00660]')
2025-03-06 14:00:02,547 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,547 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,547 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:02,550 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Propanoate metabolism [bvu00640]","SUID":296022},{"name":"C5-Branched dibasic acid metabolism [bvu00660]","SUID":296690},{"name":"Oxidative phosphorylation [bvu00190]","SUID":295516},{"name":"Inositol phosphate metabolism [bvu00562]","SUID":295144},{"name":"Butanoate metabolism [bvu00650]","SUID":296362}]
2025-03-06 14:00:02,551 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Propanoate metabolism [bvu00640]', 'SUID': 296022}, {'name': 'C5-Branched dibasic acid metabolism [bvu00660]', 'SUID': 296690}, {'name': 'Oxidative phosphorylation [bvu00190]', 'SUID': 295516}, {'name': 'Inositol phosphate metabolism [bvu00562]', 'SUID': 295144}, {'name': 'Butanoate metabolism [bvu00650]', 'SUID': 296362}]
2025-03-06 14:00:02,551 [DEBUG] py4...: ǀReturning 'get_network_list': ['Propanoate metabolism [bvu00640]', 'C5-Branched dibasic acid metabolism [bvu00660]', 'Oxidative phosphorylation [bvu00190]', 'Inositol phosphate metabolism [bvu00562]', 'Butanoate metabolism [bvu00650]']
2025-03-06 14:00:02,551 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="C5-Branched dibasic acid metabolism [bvu00660]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,551 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'C5-Branched dibasic acid metabolism [bvu00660]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:02,555 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 296690
}
],
 "errors":[]
}
2025-03-06 14:00:02,555 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 296690}]
2025-03-06 14:00:02,555 [DEBUG] py4...: Returning 'get_network_suid': 296690
2025-03-06 14:00:02,555 [DEBUG] py4...: --------------------
2025-03-06 14:00:02,555 [DEBUG] py4...: Calling get_network_suid('Oxidative phosphorylation [bvu00190]')
2025-03-06 14:00:02,555 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,555 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,555 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:02,558 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Propanoate metabolism [bvu00640]","SUID":296022},{"name":"C5-Branched dibasic acid metabolism [bvu00660]","SUID":296690},{"name":"Oxidative phosphorylation [bvu00190]","SUID":295516},{"name":"Inositol phosphate metabolism [bvu00562]","SUID":295144},{"name":"Butanoate metabolism [bvu00650]","SUID":296362}]
2025-03-06 14:00:02,559 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Propanoate metabolism [bvu00640]', 'SUID': 296022}, {'name': 'C5-Branched dibasic acid metabolism [bvu00660]', 'SUID': 296690}, {'name': 'Oxidative phosphorylation [bvu00190]', 'SUID': 295516}, {'name': 'Inositol phosphate metabolism [bvu00562]', 'SUID': 295144}, {'name': 'Butanoate metabolism [bvu00650]', 'SUID': 296362}]
2025-03-06 14:00:02,559 [DEBUG] py4...: ǀReturning 'get_network_list': ['Propanoate metabolism [bvu00640]', 'C5-Branched dibasic acid metabolism [bvu00660]', 'Oxidative phosphorylation [bvu00190]', 'Inositol phosphate metabolism [bvu00562]', 'Butanoate metabolism [bvu00650]']
2025-03-06 14:00:02,559 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Oxidative phosphorylation [bvu00190]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,559 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Oxidative phosphorylation [bvu00190]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:02,563 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 295516
}
],
 "errors":[]
}
2025-03-06 14:00:02,563 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 295516}]
2025-03-06 14:00:02,563 [DEBUG] py4...: Returning 'get_network_suid': 295516
2025-03-06 14:00:02,563 [DEBUG] py4...: --------------------
2025-03-06 14:00:02,563 [DEBUG] py4...: Calling get_network_suid('Inositol phosphate metabolism [bvu00562]')
2025-03-06 14:00:02,563 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,563 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,564 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:02,567 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Propanoate metabolism [bvu00640]","SUID":296022},{"name":"C5-Branched dibasic acid metabolism [bvu00660]","SUID":296690},{"name":"Oxidative phosphorylation [bvu00190]","SUID":295516},{"name":"Inositol phosphate metabolism [bvu00562]","SUID":295144},{"name":"Butanoate metabolism [bvu00650]","SUID":296362}]
2025-03-06 14:00:02,567 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Propanoate metabolism [bvu00640]', 'SUID': 296022}, {'name': 'C5-Branched dibasic acid metabolism [bvu00660]', 'SUID': 296690}, {'name': 'Oxidative phosphorylation [bvu00190]', 'SUID': 295516}, {'name': 'Inositol phosphate metabolism [bvu00562]', 'SUID': 295144}, {'name': 'Butanoate metabolism [bvu00650]', 'SUID': 296362}]
2025-03-06 14:00:02,567 [DEBUG] py4...: ǀReturning 'get_network_list': ['Propanoate metabolism [bvu00640]', 'C5-Branched dibasic acid metabolism [bvu00660]', 'Oxidative phosphorylation [bvu00190]', 'Inositol phosphate metabolism [bvu00562]', 'Butanoate metabolism [bvu00650]']
2025-03-06 14:00:02,567 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Inositol phosphate metabolism [bvu00562]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,568 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Inositol phosphate metabolism [bvu00562]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:02,571 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 295144
}
],
 "errors":[]
}
2025-03-06 14:00:02,572 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 295144}]
2025-03-06 14:00:02,572 [DEBUG] py4...: Returning 'get_network_suid': 295144
2025-03-06 14:00:02,572 [DEBUG] py4...: --------------------
2025-03-06 14:00:02,572 [DEBUG] py4...: Calling get_network_suid('Butanoate metabolism [bvu00650]')
2025-03-06 14:00:02,572 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,572 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,572 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:02,574 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Propanoate metabolism [bvu00640]","SUID":296022},{"name":"C5-Branched dibasic acid metabolism [bvu00660]","SUID":296690},{"name":"Oxidative phosphorylation [bvu00190]","SUID":295516},{"name":"Inositol phosphate metabolism [bvu00562]","SUID":295144},{"name":"Butanoate metabolism [bvu00650]","SUID":296362}]
2025-03-06 14:00:02,575 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Propanoate metabolism [bvu00640]', 'SUID': 296022}, {'name': 'C5-Branched dibasic acid metabolism [bvu00660]', 'SUID': 296690}, {'name': 'Oxidative phosphorylation [bvu00190]', 'SUID': 295516}, {'name': 'Inositol phosphate metabolism [bvu00562]', 'SUID': 295144}, {'name': 'Butanoate metabolism [bvu00650]', 'SUID': 296362}]
2025-03-06 14:00:02,575 [DEBUG] py4...: ǀReturning 'get_network_list': ['Propanoate metabolism [bvu00640]', 'C5-Branched dibasic acid metabolism [bvu00660]', 'Oxidative phosphorylation [bvu00190]', 'Inositol phosphate metabolism [bvu00562]', 'Butanoate metabolism [bvu00650]']
2025-03-06 14:00:02,575 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Butanoate metabolism [bvu00650]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,575 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Butanoate metabolism [bvu00650]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:02,578 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 296362
}
],
 "errors":[]
}
2025-03-06 14:00:02,578 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 296362}]
2025-03-06 14:00:02,578 [DEBUG] py4...: Returning 'get_network_suid': 296362
2025-03-06 14:00:02,578 [DEBUG] py4...: --------------------
2025-03-06 14:00:02,578 [DEBUG] py4...: Calling export_network('networks_graphml/Propanoate metabolism [bvu00640].graphml', 'graphml', network=296022, overwrite_file=True)
2025-03-06 14:00:02,578 [DEBUG] py4...: ǀCalling get_network_suid(296022, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,578 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,578 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:02,581 [DEBUG] py4...: ǀǀOK[200], content: [296022,296690,295516,295144,296362]
2025-03-06 14:00:02,581 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [296022, 296690, 295516, 295144, 296362]
2025-03-06 14:00:02,581 [DEBUG] py4...: ǀReturning 'get_network_suid': 296022
2025-03-06 14:00:02,581 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Propanoate metabolism [bvu00640].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,581 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,581 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml'}
2025-03-06 14:00:02,585 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:02,585 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:02,585 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:02,585 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:296022" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,586 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:296022', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml'}
2025-03-06 14:00:02,594 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml"},
 "errors":[]
}
2025-03-06 14:00:02,594 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml'}
2025-03-06 14:00:02,594 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml'}
2025-03-06 14:00:02,594 [DEBUG] py4...: --------------------
2025-03-06 14:00:02,594 [DEBUG] py4...: Calling export_network('networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml', 'graphml', network=296690, overwrite_file=True)
2025-03-06 14:00:02,594 [DEBUG] py4...: ǀCalling get_network_suid(296690, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,594 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,595 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:02,597 [DEBUG] py4...: ǀǀOK[200], content: [296022,296690,295516,295144,296362]
2025-03-06 14:00:02,597 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [296022, 296690, 295516, 295144, 296362]
2025-03-06 14:00:02,597 [DEBUG] py4...: ǀReturning 'get_network_suid': 296690
2025-03-06 14:00:02,598 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,598 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,598 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml'}
2025-03-06 14:00:02,600 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:02,601 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:02,601 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:02,601 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:296690" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,601 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:296690', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml'}
2025-03-06 14:00:02,608 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml"},
 "errors":[]
}
2025-03-06 14:00:02,608 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml'}
2025-03-06 14:00:02,608 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml'}
2025-03-06 14:00:02,608 [DEBUG] py4...: --------------------
2025-03-06 14:00:02,608 [DEBUG] py4...: Calling export_network('networks_graphml/Oxidative phosphorylation [bvu00190].graphml', 'graphml', network=295516, overwrite_file=True)
2025-03-06 14:00:02,608 [DEBUG] py4...: ǀCalling get_network_suid(295516, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,609 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,609 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:02,611 [DEBUG] py4...: ǀǀOK[200], content: [296022,296690,295516,295144,296362]
2025-03-06 14:00:02,611 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [296022, 296690, 295516, 295144, 296362]
2025-03-06 14:00:02,611 [DEBUG] py4...: ǀReturning 'get_network_suid': 295516
2025-03-06 14:00:02,611 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Oxidative phosphorylation [bvu00190].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,611 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,611 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml'}
2025-03-06 14:00:02,615 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:02,615 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:02,615 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:02,615 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:295516" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,615 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:295516', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml'}
2025-03-06 14:00:02,622 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml"},
 "errors":[]
}
2025-03-06 14:00:02,622 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml'}
2025-03-06 14:00:02,623 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml'}
2025-03-06 14:00:02,623 [DEBUG] py4...: --------------------
2025-03-06 14:00:02,623 [DEBUG] py4...: Calling export_network('networks_graphml/Inositol phosphate metabolism [bvu00562].graphml', 'graphml', network=295144, overwrite_file=True)
2025-03-06 14:00:02,623 [DEBUG] py4...: ǀCalling get_network_suid(295144, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,623 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,623 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:02,626 [DEBUG] py4...: ǀǀOK[200], content: [296022,296690,295516,295144,296362]
2025-03-06 14:00:02,626 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [296022, 296690, 295516, 295144, 296362]
2025-03-06 14:00:02,626 [DEBUG] py4...: ǀReturning 'get_network_suid': 295144
2025-03-06 14:00:02,626 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Inositol phosphate metabolism [bvu00562].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,626 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,627 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml'}
2025-03-06 14:00:02,630 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:02,630 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:02,630 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:02,630 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:295144" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,630 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:295144', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml'}
2025-03-06 14:00:02,639 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml"},
 "errors":[]
}
2025-03-06 14:00:02,639 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml'}
2025-03-06 14:00:02,639 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml'}
2025-03-06 14:00:02,639 [DEBUG] py4...: --------------------
2025-03-06 14:00:02,639 [DEBUG] py4...: Calling export_network('networks_graphml/Butanoate metabolism [bvu00650].graphml', 'graphml', network=296362, overwrite_file=True)
2025-03-06 14:00:02,639 [DEBUG] py4...: ǀCalling get_network_suid(296362, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,639 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,639 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:02,642 [DEBUG] py4...: ǀǀOK[200], content: [296022,296690,295516,295144,296362]
2025-03-06 14:00:02,642 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [296022, 296690, 295516, 295144, 296362]
2025-03-06 14:00:02,642 [DEBUG] py4...: ǀReturning 'get_network_suid': 296362
2025-03-06 14:00:02,642 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Butanoate metabolism [bvu00650].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,642 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,642 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml'}
2025-03-06 14:00:02,646 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:02,646 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:02,646 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:02,646 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:296362" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,646 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:296362', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml'}
2025-03-06 14:00:02,655 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml"},
 "errors":[]
}
2025-03-06 14:00:02,655 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml'}
2025-03-06 14:00:02,655 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml'}
2025-03-06 14:00:02,655 [DEBUG] py4...: --------------------
2025-03-06 14:00:02,655 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_1.cys')
2025-03-06 14:00:02,655 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:02,655 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys'}
2025-03-06 14:00:03,726 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:00:03,727 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:00:03,727 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:00:03,727 [DEBUG] py4...: --------------------
2025-03-06 14:00:03,728 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:00:03,728 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,728 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:03,734 [DEBUG] py4...: ǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":303760},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":304432},{"name":"Pentose phosphate pathway [bvu00030]","SUID":303388},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":304862},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":304074}]
2025-03-06 14:00:03,734 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 303760}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 304432}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 303388}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 304862}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 304074}]
2025-03-06 14:00:03,734 [DEBUG] py4...: Returning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:00:03,734 [DEBUG] py4...: --------------------
2025-03-06 14:00:03,734 [DEBUG] py4...: Calling get_network_suid('Citrate cycle (TCA cycle) [bvu00020]')
2025-03-06 14:00:03,734 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,734 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,734 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:03,738 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":303760},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":304432},{"name":"Pentose phosphate pathway [bvu00030]","SUID":303388},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":304862},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":304074}]
2025-03-06 14:00:03,738 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 303760}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 304432}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 303388}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 304862}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 304074}]
2025-03-06 14:00:03,738 [DEBUG] py4...: ǀReturning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:00:03,738 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Citrate cycle (TCA cycle) [bvu00020]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,738 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Citrate cycle (TCA cycle) [bvu00020]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:03,745 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 303760
}
],
 "errors":[]
}
2025-03-06 14:00:03,745 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 303760}]
2025-03-06 14:00:03,745 [DEBUG] py4...: Returning 'get_network_suid': 303760
2025-03-06 14:00:03,745 [DEBUG] py4...: --------------------
2025-03-06 14:00:03,745 [DEBUG] py4...: Calling get_network_suid('Pentose and glucuronate interconversions [bvu00040]')
2025-03-06 14:00:03,745 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,745 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,745 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:03,750 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":303760},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":304432},{"name":"Pentose phosphate pathway [bvu00030]","SUID":303388},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":304862},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":304074}]
2025-03-06 14:00:03,750 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 303760}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 304432}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 303388}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 304862}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 304074}]
2025-03-06 14:00:03,751 [DEBUG] py4...: ǀReturning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:00:03,751 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pentose and glucuronate interconversions [bvu00040]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,751 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pentose and glucuronate interconversions [bvu00040]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:03,758 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 304432
}
],
 "errors":[]
}
2025-03-06 14:00:03,758 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 304432}]
2025-03-06 14:00:03,758 [DEBUG] py4...: Returning 'get_network_suid': 304432
2025-03-06 14:00:03,758 [DEBUG] py4...: --------------------
2025-03-06 14:00:03,758 [DEBUG] py4...: Calling get_network_suid('Pentose phosphate pathway [bvu00030]')
2025-03-06 14:00:03,758 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,758 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,758 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:03,761 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":303760},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":304432},{"name":"Pentose phosphate pathway [bvu00030]","SUID":303388},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":304862},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":304074}]
2025-03-06 14:00:03,761 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 303760}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 304432}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 303388}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 304862}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 304074}]
2025-03-06 14:00:03,761 [DEBUG] py4...: ǀReturning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:00:03,761 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pentose phosphate pathway [bvu00030]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,761 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pentose phosphate pathway [bvu00030]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:03,766 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 303388
}
],
 "errors":[]
}
2025-03-06 14:00:03,766 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 303388}]
2025-03-06 14:00:03,766 [DEBUG] py4...: Returning 'get_network_suid': 303388
2025-03-06 14:00:03,766 [DEBUG] py4...: --------------------
2025-03-06 14:00:03,766 [DEBUG] py4...: Calling get_network_suid('Fructose and mannose metabolism [bvu00051]')
2025-03-06 14:00:03,766 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,766 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,766 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:03,779 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":303760},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":304432},{"name":"Pentose phosphate pathway [bvu00030]","SUID":303388},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":304862},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":304074}]
2025-03-06 14:00:03,781 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 303760}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 304432}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 303388}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 304862}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 304074}]
2025-03-06 14:00:03,781 [DEBUG] py4...: ǀReturning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:00:03,781 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Fructose and mannose metabolism [bvu00051]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,782 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Fructose and mannose metabolism [bvu00051]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:03,793 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 304862
}
],
 "errors":[]
}
2025-03-06 14:00:03,794 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 304862}]
2025-03-06 14:00:03,794 [DEBUG] py4...: Returning 'get_network_suid': 304862
2025-03-06 14:00:03,794 [DEBUG] py4...: --------------------
2025-03-06 14:00:03,794 [DEBUG] py4...: Calling get_network_suid('Glycolysis / Gluconeogenesis [bvu00010]')
2025-03-06 14:00:03,794 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,794 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,794 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:00:03,798 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":303760},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":304432},{"name":"Pentose phosphate pathway [bvu00030]","SUID":303388},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":304862},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":304074}]
2025-03-06 14:00:03,798 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 303760}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 304432}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 303388}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 304862}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 304074}]
2025-03-06 14:00:03,798 [DEBUG] py4...: ǀReturning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:00:03,798 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glycolysis / Gluconeogenesis [bvu00010]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,798 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glycolysis / Gluconeogenesis [bvu00010]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:00:03,803 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 304074
}
],
 "errors":[]
}
2025-03-06 14:00:03,804 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 304074}]
2025-03-06 14:00:03,804 [DEBUG] py4...: Returning 'get_network_suid': 304074
2025-03-06 14:00:03,804 [DEBUG] py4...: --------------------
2025-03-06 14:00:03,804 [DEBUG] py4...: Calling export_network('networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml', 'graphml', network=303760, overwrite_file=True)
2025-03-06 14:00:03,804 [DEBUG] py4...: ǀCalling get_network_suid(303760, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,804 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,804 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:03,807 [DEBUG] py4...: ǀǀOK[200], content: [303760,304432,303388,304862,304074]
2025-03-06 14:00:03,807 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [303760, 304432, 303388, 304862, 304074]
2025-03-06 14:00:03,807 [DEBUG] py4...: ǀReturning 'get_network_suid': 303760
2025-03-06 14:00:03,807 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,807 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,807 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:00:03,811 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:03,811 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:03,811 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:03,811 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:303760" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,811 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:303760', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:00:03,824 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml"},
 "errors":[]
}
2025-03-06 14:00:03,824 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:00:03,824 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:00:03,824 [DEBUG] py4...: --------------------
2025-03-06 14:00:03,824 [DEBUG] py4...: Calling export_network('networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml', 'graphml', network=304432, overwrite_file=True)
2025-03-06 14:00:03,824 [DEBUG] py4...: ǀCalling get_network_suid(304432, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,824 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,824 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:03,828 [DEBUG] py4...: ǀǀOK[200], content: [303760,304432,303388,304862,304074]
2025-03-06 14:00:03,828 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [303760, 304432, 303388, 304862, 304074]
2025-03-06 14:00:03,828 [DEBUG] py4...: ǀReturning 'get_network_suid': 304432
2025-03-06 14:00:03,828 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,828 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,828 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:00:03,832 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:03,832 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:03,832 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:03,832 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:304432" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,832 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:304432', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:00:03,842 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml"},
 "errors":[]
}
2025-03-06 14:00:03,842 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:00:03,843 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:00:03,843 [DEBUG] py4...: --------------------
2025-03-06 14:00:03,843 [DEBUG] py4...: Calling export_network('networks_graphml/Pentose phosphate pathway [bvu00030].graphml', 'graphml', network=303388, overwrite_file=True)
2025-03-06 14:00:03,843 [DEBUG] py4...: ǀCalling get_network_suid(303388, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,843 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,843 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:03,846 [DEBUG] py4...: ǀǀOK[200], content: [303760,304432,303388,304862,304074]
2025-03-06 14:00:03,846 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [303760, 304432, 303388, 304862, 304074]
2025-03-06 14:00:03,846 [DEBUG] py4...: ǀReturning 'get_network_suid': 303388
2025-03-06 14:00:03,846 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Pentose phosphate pathway [bvu00030].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,846 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,846 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:00:03,851 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:03,851 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:03,851 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:03,851 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:303388" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,852 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:303388', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:00:03,861 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml"},
 "errors":[]
}
2025-03-06 14:00:03,861 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:00:03,861 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:00:03,861 [DEBUG] py4...: --------------------
2025-03-06 14:00:03,861 [DEBUG] py4...: Calling export_network('networks_graphml/Fructose and mannose metabolism [bvu00051].graphml', 'graphml', network=304862, overwrite_file=True)
2025-03-06 14:00:03,862 [DEBUG] py4...: ǀCalling get_network_suid(304862, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,862 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,862 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:03,865 [DEBUG] py4...: ǀǀOK[200], content: [303760,304432,303388,304862,304074]
2025-03-06 14:00:03,865 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [303760, 304432, 303388, 304862, 304074]
2025-03-06 14:00:03,865 [DEBUG] py4...: ǀReturning 'get_network_suid': 304862
2025-03-06 14:00:03,865 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Fructose and mannose metabolism [bvu00051].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,865 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,865 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:00:03,869 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:03,869 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:03,869 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:03,869 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:304862" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,869 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:304862', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:00:03,881 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml"},
 "errors":[]
}
2025-03-06 14:00:03,881 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:00:03,881 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:00:03,881 [DEBUG] py4...: --------------------
2025-03-06 14:00:03,881 [DEBUG] py4...: Calling export_network('networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'graphml', network=304074, overwrite_file=True)
2025-03-06 14:00:03,881 [DEBUG] py4...: ǀCalling get_network_suid(304074, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,881 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,881 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:00:03,891 [DEBUG] py4...: ǀǀOK[200], content: [303760,304432,303388,304862,304074]
2025-03-06 14:00:03,891 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [303760, 304432, 303388, 304862, 304074]
2025-03-06 14:00:03,891 [DEBUG] py4...: ǀReturning 'get_network_suid': 304074
2025-03-06 14:00:03,891 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,891 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,891 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:00:03,896 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:00:03,897 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:03,897 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:00:03,897 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:304074" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:00:03,897 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:304074', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:00:03,904 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"},
 "errors":[]
}
2025-03-06 14:00:03,904 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:00:03,904 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:00:03,904 [DEBUG] py4...: --------------------
2025-03-06 14:32:18,800 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_12.cys')
2025-03-06 14:32:18,801 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_12.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:18,801 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 14:32:18,948 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 14:32:18,948 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_12.cys'}
2025-03-06 14:32:20,027 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:32:20,027 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:32:20,028 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:32:20,028 [DEBUG] py4...: --------------------
2025-03-06 14:32:20,028 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:32:20,028 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,028 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:20,039 [DEBUG] py4...: ǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":11954},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":12658},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":12164},{"name":"Biotin metabolism [bvu00780]","SUID":13044},{"name":"Riboflavin metabolism [bvu00740]","SUID":12424}]
2025-03-06 14:32:20,039 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 11954}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 12658}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 12164}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 13044}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 12424}]
2025-03-06 14:32:20,039 [DEBUG] py4...: Returning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:32:20,039 [DEBUG] py4...: --------------------
2025-03-06 14:32:20,039 [DEBUG] py4...: Calling get_network_suid('Vitamin B6 metabolism [bvu00750]')
2025-03-06 14:32:20,039 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,039 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,039 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:20,044 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":11954},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":12658},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":12164},{"name":"Biotin metabolism [bvu00780]","SUID":13044},{"name":"Riboflavin metabolism [bvu00740]","SUID":12424}]
2025-03-06 14:32:20,045 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 11954}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 12658}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 12164}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 13044}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 12424}]
2025-03-06 14:32:20,045 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:32:20,045 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Vitamin B6 metabolism [bvu00750]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,045 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Vitamin B6 metabolism [bvu00750]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:32:20,068 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 11954
}
],
 "errors":[]
}
2025-03-06 14:32:20,068 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 11954}]
2025-03-06 14:32:20,068 [DEBUG] py4...: Returning 'get_network_suid': 11954
2025-03-06 14:32:20,068 [DEBUG] py4...: --------------------
2025-03-06 14:32:20,068 [DEBUG] py4...: Calling get_network_suid('Nicotinate and nicotinamide metabolism [bvu00760]')
2025-03-06 14:32:20,068 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,068 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,068 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:20,078 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":11954},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":12658},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":12164},{"name":"Biotin metabolism [bvu00780]","SUID":13044},{"name":"Riboflavin metabolism [bvu00740]","SUID":12424}]
2025-03-06 14:32:20,078 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 11954}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 12658}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 12164}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 13044}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 12424}]
2025-03-06 14:32:20,079 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:32:20,079 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Nicotinate and nicotinamide metabolism [bvu00760]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,079 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:32:20,087 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 12658
}
],
 "errors":[]
}
2025-03-06 14:32:20,087 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 12658}]
2025-03-06 14:32:20,087 [DEBUG] py4...: Returning 'get_network_suid': 12658
2025-03-06 14:32:20,087 [DEBUG] py4...: --------------------
2025-03-06 14:32:20,087 [DEBUG] py4...: Calling get_network_suid('Pantothenate and CoA biosynthesis [bvu00770]')
2025-03-06 14:32:20,087 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,087 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,087 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:20,097 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":11954},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":12658},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":12164},{"name":"Biotin metabolism [bvu00780]","SUID":13044},{"name":"Riboflavin metabolism [bvu00740]","SUID":12424}]
2025-03-06 14:32:20,097 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 11954}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 12658}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 12164}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 13044}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 12424}]
2025-03-06 14:32:20,097 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:32:20,097 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pantothenate and CoA biosynthesis [bvu00770]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,097 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pantothenate and CoA biosynthesis [bvu00770]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:32:20,104 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 12164
}
],
 "errors":[]
}
2025-03-06 14:32:20,104 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 12164}]
2025-03-06 14:32:20,104 [DEBUG] py4...: Returning 'get_network_suid': 12164
2025-03-06 14:32:20,104 [DEBUG] py4...: --------------------
2025-03-06 14:32:20,104 [DEBUG] py4...: Calling get_network_suid('Biotin metabolism [bvu00780]')
2025-03-06 14:32:20,104 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,104 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,104 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:20,109 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":11954},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":12658},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":12164},{"name":"Biotin metabolism [bvu00780]","SUID":13044},{"name":"Riboflavin metabolism [bvu00740]","SUID":12424}]
2025-03-06 14:32:20,109 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 11954}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 12658}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 12164}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 13044}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 12424}]
2025-03-06 14:32:20,109 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:32:20,109 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biotin metabolism [bvu00780]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,110 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biotin metabolism [bvu00780]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:32:20,116 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 13044
}
],
 "errors":[]
}
2025-03-06 14:32:20,116 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 13044}]
2025-03-06 14:32:20,116 [DEBUG] py4...: Returning 'get_network_suid': 13044
2025-03-06 14:32:20,116 [DEBUG] py4...: --------------------
2025-03-06 14:32:20,116 [DEBUG] py4...: Calling get_network_suid('Riboflavin metabolism [bvu00740]')
2025-03-06 14:32:20,116 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,116 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,116 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:20,126 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":11954},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":12658},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":12164},{"name":"Biotin metabolism [bvu00780]","SUID":13044},{"name":"Riboflavin metabolism [bvu00740]","SUID":12424}]
2025-03-06 14:32:20,127 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 11954}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 12658}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 12164}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 13044}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 12424}]
2025-03-06 14:32:20,127 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:32:20,127 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Riboflavin metabolism [bvu00740]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,127 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Riboflavin metabolism [bvu00740]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:32:20,134 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 12424
}
],
 "errors":[]
}
2025-03-06 14:32:20,134 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 12424}]
2025-03-06 14:32:20,134 [DEBUG] py4...: Returning 'get_network_suid': 12424
2025-03-06 14:32:20,134 [DEBUG] py4...: --------------------
2025-03-06 14:32:20,134 [DEBUG] py4...: Calling export_network('networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'graphml', network=11954, overwrite_file=True)
2025-03-06 14:32:20,134 [DEBUG] py4...: ǀCalling get_network_suid(11954, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,134 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,134 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:32:20,139 [DEBUG] py4...: ǀǀOK[200], content: [11954,12658,12164,13044,12424]
2025-03-06 14:32:20,140 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [11954, 12658, 12164, 13044, 12424]
2025-03-06 14:32:20,140 [DEBUG] py4...: ǀReturning 'get_network_suid': 11954
2025-03-06 14:32:20,140 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,140 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,140 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 14:32:20,147 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml","modifiedTime":"2025-03-06 14:03:38.0596","isFile":true},
 "errors":[]
}
2025-03-06 14:32:20,148 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'modifiedTime': '2025-03-06 14:03:38.0596', 'isFile': True}
2025-03-06 14:32:20,148 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'modifiedTime': '2025-03-06 14:03:38.0596', 'isFile': True}
2025-03-06 14:32:20,148 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,148 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,148 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 14:32:20,156 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:32:20,156 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'existed': True}
2025-03-06 14:32:20,157 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'existed': True}
2025-03-06 14:32:20,157 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:11954" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,157 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:11954', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 14:32:20,210 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml"},
 "errors":[]
}
2025-03-06 14:32:20,211 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 14:32:20,211 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 14:32:20,211 [DEBUG] py4...: --------------------
2025-03-06 14:32:20,211 [DEBUG] py4...: Calling export_network('networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'graphml', network=12658, overwrite_file=True)
2025-03-06 14:32:20,211 [DEBUG] py4...: ǀCalling get_network_suid(12658, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,211 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,212 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:32:20,217 [DEBUG] py4...: ǀǀOK[200], content: [11954,12658,12164,13044,12424]
2025-03-06 14:32:20,217 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [11954, 12658, 12164, 13044, 12424]
2025-03-06 14:32:20,217 [DEBUG] py4...: ǀReturning 'get_network_suid': 12658
2025-03-06 14:32:20,218 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,218 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,218 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 14:32:20,223 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml","modifiedTime":"2025-03-06 13:59:31.0086","isFile":true},
 "errors":[]
}
2025-03-06 14:32:20,223 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'modifiedTime': '2025-03-06 13:59:31.0086', 'isFile': True}
2025-03-06 14:32:20,223 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'modifiedTime': '2025-03-06 13:59:31.0086', 'isFile': True}
2025-03-06 14:32:20,223 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,223 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,223 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 14:32:20,229 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:32:20,229 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'existed': True}
2025-03-06 14:32:20,229 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'existed': True}
2025-03-06 14:32:20,230 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:12658" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,230 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:12658', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 14:32:20,247 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml"},
 "errors":[]
}
2025-03-06 14:32:20,247 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 14:32:20,248 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 14:32:20,248 [DEBUG] py4...: --------------------
2025-03-06 14:32:20,248 [DEBUG] py4...: Calling export_network('networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'graphml', network=12164, overwrite_file=True)
2025-03-06 14:32:20,248 [DEBUG] py4...: ǀCalling get_network_suid(12164, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,248 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,248 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:32:20,253 [DEBUG] py4...: ǀǀOK[200], content: [11954,12658,12164,13044,12424]
2025-03-06 14:32:20,253 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [11954, 12658, 12164, 13044, 12424]
2025-03-06 14:32:20,253 [DEBUG] py4...: ǀReturning 'get_network_suid': 12164
2025-03-06 14:32:20,253 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,253 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,253 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 14:32:20,264 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml","modifiedTime":"2025-03-06 13:59:31.0165","isFile":true},
 "errors":[]
}
2025-03-06 14:32:20,265 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'modifiedTime': '2025-03-06 13:59:31.0165', 'isFile': True}
2025-03-06 14:32:20,265 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'modifiedTime': '2025-03-06 13:59:31.0165', 'isFile': True}
2025-03-06 14:32:20,265 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,265 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,265 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 14:32:20,273 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:32:20,274 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'existed': True}
2025-03-06 14:32:20,274 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'existed': True}
2025-03-06 14:32:20,274 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:12164" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,274 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:12164', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 14:32:20,286 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml"},
 "errors":[]
}
2025-03-06 14:32:20,287 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 14:32:20,287 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 14:32:20,287 [DEBUG] py4...: --------------------
2025-03-06 14:32:20,287 [DEBUG] py4...: Calling export_network('networks_graphml/Biotin metabolism [bvu00780].graphml', 'graphml', network=13044, overwrite_file=True)
2025-03-06 14:32:20,287 [DEBUG] py4...: ǀCalling get_network_suid(13044, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,287 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,287 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:32:20,294 [DEBUG] py4...: ǀǀOK[200], content: [11954,12658,12164,13044,12424]
2025-03-06 14:32:20,294 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [11954, 12658, 12164, 13044, 12424]
2025-03-06 14:32:20,294 [DEBUG] py4...: ǀReturning 'get_network_suid': 13044
2025-03-06 14:32:20,294 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Biotin metabolism [bvu00780].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,295 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,295 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 14:32:20,302 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml","modifiedTime":"2025-03-06 13:59:31.0242","isFile":true},
 "errors":[]
}
2025-03-06 14:32:20,302 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml', 'modifiedTime': '2025-03-06 13:59:31.0242', 'isFile': True}
2025-03-06 14:32:20,302 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml', 'modifiedTime': '2025-03-06 13:59:31.0242', 'isFile': True}
2025-03-06 14:32:20,302 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Biotin metabolism [bvu00780].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,302 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,302 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 14:32:20,319 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:32:20,319 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml', 'existed': True}
2025-03-06 14:32:20,319 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml', 'existed': True}
2025-03-06 14:32:20,319 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:13044" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,320 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:13044', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 14:32:20,332 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml"},
 "errors":[]
}
2025-03-06 14:32:20,333 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 14:32:20,333 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 14:32:20,333 [DEBUG] py4...: --------------------
2025-03-06 14:32:20,333 [DEBUG] py4...: Calling export_network('networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'graphml', network=12424, overwrite_file=True)
2025-03-06 14:32:20,333 [DEBUG] py4...: ǀCalling get_network_suid(12424, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,333 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,333 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:32:20,338 [DEBUG] py4...: ǀǀOK[200], content: [11954,12658,12164,13044,12424]
2025-03-06 14:32:20,338 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [11954, 12658, 12164, 13044, 12424]
2025-03-06 14:32:20,338 [DEBUG] py4...: ǀReturning 'get_network_suid': 12424
2025-03-06 14:32:20,338 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Riboflavin metabolism [bvu00740].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,338 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,338 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 14:32:20,344 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml","modifiedTime":"2025-03-06 13:59:31.0312","isFile":true},
 "errors":[]
}
2025-03-06 14:32:20,344 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'modifiedTime': '2025-03-06 13:59:31.0312', 'isFile': True}
2025-03-06 14:32:20,344 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'modifiedTime': '2025-03-06 13:59:31.0312', 'isFile': True}
2025-03-06 14:32:20,344 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Riboflavin metabolism [bvu00740].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,344 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,344 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 14:32:20,350 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:32:20,351 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'existed': True}
2025-03-06 14:32:20,351 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'existed': True}
2025-03-06 14:32:20,351 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:12424" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,351 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:12424', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 14:32:20,366 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml"},
 "errors":[]
}
2025-03-06 14:32:20,366 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 14:32:20,366 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 14:32:20,366 [DEBUG] py4...: --------------------
2025-03-06 14:32:20,366 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_13.cys')
2025-03-06 14:32:20,367 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_13.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:20,367 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_13.cys'}
2025-03-06 14:32:21,380 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:32:21,381 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:32:21,381 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:32:21,381 [DEBUG] py4...: --------------------
2025-03-06 14:32:21,381 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:32:21,381 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,381 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:21,385 [DEBUG] py4...: ǀOK[200], content: [{"name":"One carbon pool by folate [bvu00670]","SUID":19665},{"name":"Porphyrin metabolism [bvu00860]","SUID":18473},{"name":"Lipoic acid metabolism [bvu00785]","SUID":20073},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":20379},{"name":"Folate biosynthesis [bvu00790]","SUID":19229}]
2025-03-06 14:32:21,385 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'One carbon pool by folate [bvu00670]', 'SUID': 19665}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 18473}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 20073}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 20379}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 19229}]
2025-03-06 14:32:21,385 [DEBUG] py4...: Returning 'get_network_list': ['One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Folate biosynthesis [bvu00790]']
2025-03-06 14:32:21,385 [DEBUG] py4...: --------------------
2025-03-06 14:32:21,385 [DEBUG] py4...: Calling get_network_suid('One carbon pool by folate [bvu00670]')
2025-03-06 14:32:21,385 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,386 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,386 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:21,391 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"One carbon pool by folate [bvu00670]","SUID":19665},{"name":"Porphyrin metabolism [bvu00860]","SUID":18473},{"name":"Lipoic acid metabolism [bvu00785]","SUID":20073},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":20379},{"name":"Folate biosynthesis [bvu00790]","SUID":19229}]
2025-03-06 14:32:21,391 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'One carbon pool by folate [bvu00670]', 'SUID': 19665}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 18473}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 20073}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 20379}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 19229}]
2025-03-06 14:32:21,391 [DEBUG] py4...: ǀReturning 'get_network_list': ['One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Folate biosynthesis [bvu00790]']
2025-03-06 14:32:21,391 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="One carbon pool by folate [bvu00670]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,391 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'One carbon pool by folate [bvu00670]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:32:21,397 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 19665
}
],
 "errors":[]
}
2025-03-06 14:32:21,398 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 19665}]
2025-03-06 14:32:21,398 [DEBUG] py4...: Returning 'get_network_suid': 19665
2025-03-06 14:32:21,398 [DEBUG] py4...: --------------------
2025-03-06 14:32:21,398 [DEBUG] py4...: Calling get_network_suid('Porphyrin metabolism [bvu00860]')
2025-03-06 14:32:21,398 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,398 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,398 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:21,402 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"One carbon pool by folate [bvu00670]","SUID":19665},{"name":"Porphyrin metabolism [bvu00860]","SUID":18473},{"name":"Lipoic acid metabolism [bvu00785]","SUID":20073},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":20379},{"name":"Folate biosynthesis [bvu00790]","SUID":19229}]
2025-03-06 14:32:21,402 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'One carbon pool by folate [bvu00670]', 'SUID': 19665}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 18473}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 20073}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 20379}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 19229}]
2025-03-06 14:32:21,402 [DEBUG] py4...: ǀReturning 'get_network_list': ['One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Folate biosynthesis [bvu00790]']
2025-03-06 14:32:21,402 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Porphyrin metabolism [bvu00860]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,402 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Porphyrin metabolism [bvu00860]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:32:21,408 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 18473
}
],
 "errors":[]
}
2025-03-06 14:32:21,408 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 18473}]
2025-03-06 14:32:21,408 [DEBUG] py4...: Returning 'get_network_suid': 18473
2025-03-06 14:32:21,408 [DEBUG] py4...: --------------------
2025-03-06 14:32:21,408 [DEBUG] py4...: Calling get_network_suid('Lipoic acid metabolism [bvu00785]')
2025-03-06 14:32:21,408 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,408 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,408 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:21,415 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"One carbon pool by folate [bvu00670]","SUID":19665},{"name":"Porphyrin metabolism [bvu00860]","SUID":18473},{"name":"Lipoic acid metabolism [bvu00785]","SUID":20073},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":20379},{"name":"Folate biosynthesis [bvu00790]","SUID":19229}]
2025-03-06 14:32:21,415 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'One carbon pool by folate [bvu00670]', 'SUID': 19665}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 18473}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 20073}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 20379}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 19229}]
2025-03-06 14:32:21,415 [DEBUG] py4...: ǀReturning 'get_network_list': ['One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Folate biosynthesis [bvu00790]']
2025-03-06 14:32:21,415 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Lipoic acid metabolism [bvu00785]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,415 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Lipoic acid metabolism [bvu00785]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:32:21,421 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 20073
}
],
 "errors":[]
}
2025-03-06 14:32:21,421 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 20073}]
2025-03-06 14:32:21,421 [DEBUG] py4...: Returning 'get_network_suid': 20073
2025-03-06 14:32:21,421 [DEBUG] py4...: --------------------
2025-03-06 14:32:21,422 [DEBUG] py4...: Calling get_network_suid('Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]')
2025-03-06 14:32:21,422 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,422 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,422 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:21,426 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"One carbon pool by folate [bvu00670]","SUID":19665},{"name":"Porphyrin metabolism [bvu00860]","SUID":18473},{"name":"Lipoic acid metabolism [bvu00785]","SUID":20073},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":20379},{"name":"Folate biosynthesis [bvu00790]","SUID":19229}]
2025-03-06 14:32:21,427 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'One carbon pool by folate [bvu00670]', 'SUID': 19665}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 18473}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 20073}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 20379}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 19229}]
2025-03-06 14:32:21,427 [DEBUG] py4...: ǀReturning 'get_network_list': ['One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Folate biosynthesis [bvu00790]']
2025-03-06 14:32:21,427 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,427 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:32:21,434 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 20379
}
],
 "errors":[]
}
2025-03-06 14:32:21,434 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 20379}]
2025-03-06 14:32:21,434 [DEBUG] py4...: Returning 'get_network_suid': 20379
2025-03-06 14:32:21,434 [DEBUG] py4...: --------------------
2025-03-06 14:32:21,434 [DEBUG] py4...: Calling get_network_suid('Folate biosynthesis [bvu00790]')
2025-03-06 14:32:21,434 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,434 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,434 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:21,437 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"One carbon pool by folate [bvu00670]","SUID":19665},{"name":"Porphyrin metabolism [bvu00860]","SUID":18473},{"name":"Lipoic acid metabolism [bvu00785]","SUID":20073},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":20379},{"name":"Folate biosynthesis [bvu00790]","SUID":19229}]
2025-03-06 14:32:21,438 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'One carbon pool by folate [bvu00670]', 'SUID': 19665}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 18473}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 20073}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 20379}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 19229}]
2025-03-06 14:32:21,438 [DEBUG] py4...: ǀReturning 'get_network_list': ['One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Folate biosynthesis [bvu00790]']
2025-03-06 14:32:21,438 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Folate biosynthesis [bvu00790]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,438 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Folate biosynthesis [bvu00790]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:32:21,443 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 19229
}
],
 "errors":[]
}
2025-03-06 14:32:21,443 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 19229}]
2025-03-06 14:32:21,443 [DEBUG] py4...: Returning 'get_network_suid': 19229
2025-03-06 14:32:21,443 [DEBUG] py4...: --------------------
2025-03-06 14:32:21,443 [DEBUG] py4...: Calling export_network('networks_graphml/One carbon pool by folate [bvu00670].graphml', 'graphml', network=19665, overwrite_file=True)
2025-03-06 14:32:21,443 [DEBUG] py4...: ǀCalling get_network_suid(19665, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,443 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,443 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:32:21,447 [DEBUG] py4...: ǀǀOK[200], content: [19665,18473,20073,20379,19229]
2025-03-06 14:32:21,447 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [19665, 18473, 20073, 20379, 19229]
2025-03-06 14:32:21,447 [DEBUG] py4...: ǀReturning 'get_network_suid': 19665
2025-03-06 14:32:21,447 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/One carbon pool by folate [bvu00670].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,447 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,447 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 14:32:21,451 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml","modifiedTime":"2025-03-06 13:59:37.0418","isFile":true},
 "errors":[]
}
2025-03-06 14:32:21,452 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml', 'modifiedTime': '2025-03-06 13:59:37.0418', 'isFile': True}
2025-03-06 14:32:21,452 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml', 'modifiedTime': '2025-03-06 13:59:37.0418', 'isFile': True}
2025-03-06 14:32:21,452 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/One carbon pool by folate [bvu00670].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,452 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,452 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 14:32:21,458 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:32:21,458 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml', 'existed': True}
2025-03-06 14:32:21,458 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml', 'existed': True}
2025-03-06 14:32:21,458 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:19665" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,459 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:19665', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 14:32:21,469 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml"},
 "errors":[]
}
2025-03-06 14:32:21,469 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 14:32:21,469 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 14:32:21,469 [DEBUG] py4...: --------------------
2025-03-06 14:32:21,469 [DEBUG] py4...: Calling export_network('networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'graphml', network=18473, overwrite_file=True)
2025-03-06 14:32:21,469 [DEBUG] py4...: ǀCalling get_network_suid(18473, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,469 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,469 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:32:21,473 [DEBUG] py4...: ǀǀOK[200], content: [19665,18473,20073,20379,19229]
2025-03-06 14:32:21,473 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [19665, 18473, 20073, 20379, 19229]
2025-03-06 14:32:21,473 [DEBUG] py4...: ǀReturning 'get_network_suid': 18473
2025-03-06 14:32:21,473 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Porphyrin metabolism [bvu00860].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,473 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,473 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 14:32:21,477 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml","modifiedTime":"2025-03-06 13:59:37.0492","isFile":true},
 "errors":[]
}
2025-03-06 14:32:21,478 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'modifiedTime': '2025-03-06 13:59:37.0492', 'isFile': True}
2025-03-06 14:32:21,478 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'modifiedTime': '2025-03-06 13:59:37.0492', 'isFile': True}
2025-03-06 14:32:21,478 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Porphyrin metabolism [bvu00860].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,478 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,478 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 14:32:21,482 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:32:21,482 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'existed': True}
2025-03-06 14:32:21,482 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'existed': True}
2025-03-06 14:32:21,482 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:18473" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,482 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:18473', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 14:32:21,493 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml"},
 "errors":[]
}
2025-03-06 14:32:21,493 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 14:32:21,493 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 14:32:21,493 [DEBUG] py4...: --------------------
2025-03-06 14:32:21,493 [DEBUG] py4...: Calling export_network('networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'graphml', network=20073, overwrite_file=True)
2025-03-06 14:32:21,493 [DEBUG] py4...: ǀCalling get_network_suid(20073, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,493 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,493 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:32:21,496 [DEBUG] py4...: ǀǀOK[200], content: [19665,18473,20073,20379,19229]
2025-03-06 14:32:21,496 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [19665, 18473, 20073, 20379, 19229]
2025-03-06 14:32:21,496 [DEBUG] py4...: ǀReturning 'get_network_suid': 20073
2025-03-06 14:32:21,497 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Lipoic acid metabolism [bvu00785].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,497 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,497 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 14:32:21,501 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml","modifiedTime":"2025-03-06 13:59:37.0578","isFile":true},
 "errors":[]
}
2025-03-06 14:32:21,501 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'modifiedTime': '2025-03-06 13:59:37.0578', 'isFile': True}
2025-03-06 14:32:21,501 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'modifiedTime': '2025-03-06 13:59:37.0578', 'isFile': True}
2025-03-06 14:32:21,501 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Lipoic acid metabolism [bvu00785].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,501 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,501 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 14:32:21,507 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:32:21,507 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'existed': True}
2025-03-06 14:32:21,507 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'existed': True}
2025-03-06 14:32:21,507 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:20073" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,507 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:20073', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 14:32:21,517 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml"},
 "errors":[]
}
2025-03-06 14:32:21,517 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 14:32:21,517 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 14:32:21,517 [DEBUG] py4...: --------------------
2025-03-06 14:32:21,518 [DEBUG] py4...: Calling export_network('networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'graphml', network=20379, overwrite_file=True)
2025-03-06 14:32:21,518 [DEBUG] py4...: ǀCalling get_network_suid(20379, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,518 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,518 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:32:21,522 [DEBUG] py4...: ǀǀOK[200], content: [19665,18473,20073,20379,19229]
2025-03-06 14:32:21,522 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [19665, 18473, 20073, 20379, 19229]
2025-03-06 14:32:21,522 [DEBUG] py4...: ǀReturning 'get_network_suid': 20379
2025-03-06 14:32:21,522 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,522 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,523 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 14:32:21,527 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml","modifiedTime":"2025-03-06 13:59:37.0340","isFile":true},
 "errors":[]
}
2025-03-06 14:32:21,527 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'modifiedTime': '2025-03-06 13:59:37.0340', 'isFile': True}
2025-03-06 14:32:21,527 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'modifiedTime': '2025-03-06 13:59:37.0340', 'isFile': True}
2025-03-06 14:32:21,527 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,527 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,527 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 14:32:21,533 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:32:21,533 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'existed': True}
2025-03-06 14:32:21,533 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'existed': True}
2025-03-06 14:32:21,533 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:20379" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,533 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:20379', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 14:32:21,545 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"},
 "errors":[]
}
2025-03-06 14:32:21,545 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 14:32:21,545 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 14:32:21,545 [DEBUG] py4...: --------------------
2025-03-06 14:32:21,545 [DEBUG] py4...: Calling export_network('networks_graphml/Folate biosynthesis [bvu00790].graphml', 'graphml', network=19229, overwrite_file=True)
2025-03-06 14:32:21,545 [DEBUG] py4...: ǀCalling get_network_suid(19229, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,545 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,545 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:32:21,549 [DEBUG] py4...: ǀǀOK[200], content: [19665,18473,20073,20379,19229]
2025-03-06 14:32:21,549 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [19665, 18473, 20073, 20379, 19229]
2025-03-06 14:32:21,549 [DEBUG] py4...: ǀReturning 'get_network_suid': 19229
2025-03-06 14:32:21,549 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Folate biosynthesis [bvu00790].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,549 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,549 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 14:32:21,554 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml","modifiedTime":"2025-03-06 13:59:37.0257","isFile":true},
 "errors":[]
}
2025-03-06 14:32:21,554 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml', 'modifiedTime': '2025-03-06 13:59:37.0257', 'isFile': True}
2025-03-06 14:32:21,554 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml', 'modifiedTime': '2025-03-06 13:59:37.0257', 'isFile': True}
2025-03-06 14:32:21,554 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Folate biosynthesis [bvu00790].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,554 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,554 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 14:32:21,558 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:32:21,558 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml', 'existed': True}
2025-03-06 14:32:21,559 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml', 'existed': True}
2025-03-06 14:32:21,559 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:19229" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,559 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:19229', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 14:32:21,569 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml"},
 "errors":[]
}
2025-03-06 14:32:21,569 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 14:32:21,569 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 14:32:21,569 [DEBUG] py4...: --------------------
2025-03-06 14:32:21,569 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_11.cys')
2025-03-06 14:32:21,569 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_11.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:21,569 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_11.cys'}
2025-03-06 14:32:22,595 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:32:22,597 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:32:22,597 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:32:22,597 [DEBUG] py4...: --------------------
2025-03-06 14:32:22,597 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:32:22,597 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,597 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:22,602 [DEBUG] py4...: ǀOK[200], content: [{"name":"Thiamine metabolism [bvu00730]","SUID":29984},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":30640},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":31314},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":30250},{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":29644}]
2025-03-06 14:32:22,602 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Thiamine metabolism [bvu00730]', 'SUID': 29984}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 30640}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 31314}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 30250}, {'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 29644}]
2025-03-06 14:32:22,602 [DEBUG] py4...: Returning 'get_network_list': ['Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]', 'Peptidoglycan biosynthesis [bvu00550]']
2025-03-06 14:32:22,602 [DEBUG] py4...: --------------------
2025-03-06 14:32:22,602 [DEBUG] py4...: Calling get_network_suid('Thiamine metabolism [bvu00730]')
2025-03-06 14:32:22,602 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,602 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,602 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:22,606 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Thiamine metabolism [bvu00730]","SUID":29984},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":30640},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":31314},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":30250},{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":29644}]
2025-03-06 14:32:22,606 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Thiamine metabolism [bvu00730]', 'SUID': 29984}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 30640}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 31314}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 30250}, {'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 29644}]
2025-03-06 14:32:22,606 [DEBUG] py4...: ǀReturning 'get_network_list': ['Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]', 'Peptidoglycan biosynthesis [bvu00550]']
2025-03-06 14:32:22,607 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Thiamine metabolism [bvu00730]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,607 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Thiamine metabolism [bvu00730]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:32:22,612 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 29984
}
],
 "errors":[]
}
2025-03-06 14:32:22,612 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 29984}]
2025-03-06 14:32:22,612 [DEBUG] py4...: Returning 'get_network_suid': 29984
2025-03-06 14:32:22,612 [DEBUG] py4...: --------------------
2025-03-06 14:32:22,612 [DEBUG] py4...: Calling get_network_suid('Biosynthesis of various nucleotide sugars [bvu00541]')
2025-03-06 14:32:22,612 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,612 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,612 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:22,617 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Thiamine metabolism [bvu00730]","SUID":29984},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":30640},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":31314},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":30250},{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":29644}]
2025-03-06 14:32:22,617 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Thiamine metabolism [bvu00730]', 'SUID': 29984}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 30640}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 31314}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 30250}, {'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 29644}]
2025-03-06 14:32:22,617 [DEBUG] py4...: ǀReturning 'get_network_list': ['Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]', 'Peptidoglycan biosynthesis [bvu00550]']
2025-03-06 14:32:22,617 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biosynthesis of various nucleotide sugars [bvu00541]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,618 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:32:22,624 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 30640
}
],
 "errors":[]
}
2025-03-06 14:32:22,624 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 30640}]
2025-03-06 14:32:22,625 [DEBUG] py4...: Returning 'get_network_suid': 30640
2025-03-06 14:32:22,625 [DEBUG] py4...: --------------------
2025-03-06 14:32:22,625 [DEBUG] py4...: Calling get_network_suid('Teichoic acid biosynthesis [bvu00552]')
2025-03-06 14:32:22,625 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,625 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,625 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:22,629 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Thiamine metabolism [bvu00730]","SUID":29984},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":30640},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":31314},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":30250},{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":29644}]
2025-03-06 14:32:22,629 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Thiamine metabolism [bvu00730]', 'SUID': 29984}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 30640}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 31314}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 30250}, {'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 29644}]
2025-03-06 14:32:22,629 [DEBUG] py4...: ǀReturning 'get_network_list': ['Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]', 'Peptidoglycan biosynthesis [bvu00550]']
2025-03-06 14:32:22,629 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Teichoic acid biosynthesis [bvu00552]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,629 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Teichoic acid biosynthesis [bvu00552]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:32:22,635 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 31314
}
],
 "errors":[]
}
2025-03-06 14:32:22,635 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 31314}]
2025-03-06 14:32:22,635 [DEBUG] py4...: Returning 'get_network_suid': 31314
2025-03-06 14:32:22,635 [DEBUG] py4...: --------------------
2025-03-06 14:32:22,635 [DEBUG] py4...: Calling get_network_suid('Exopolysaccharide biosynthesis [bvu00543]')
2025-03-06 14:32:22,635 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,635 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,635 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:22,639 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Thiamine metabolism [bvu00730]","SUID":29984},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":30640},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":31314},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":30250},{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":29644}]
2025-03-06 14:32:22,639 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Thiamine metabolism [bvu00730]', 'SUID': 29984}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 30640}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 31314}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 30250}, {'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 29644}]
2025-03-06 14:32:22,639 [DEBUG] py4...: ǀReturning 'get_network_list': ['Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]', 'Peptidoglycan biosynthesis [bvu00550]']
2025-03-06 14:32:22,639 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Exopolysaccharide biosynthesis [bvu00543]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,639 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Exopolysaccharide biosynthesis [bvu00543]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:32:22,644 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 30250
}
],
 "errors":[]
}
2025-03-06 14:32:22,644 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 30250}]
2025-03-06 14:32:22,644 [DEBUG] py4...: Returning 'get_network_suid': 30250
2025-03-06 14:32:22,644 [DEBUG] py4...: --------------------
2025-03-06 14:32:22,644 [DEBUG] py4...: Calling get_network_suid('Peptidoglycan biosynthesis [bvu00550]')
2025-03-06 14:32:22,644 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,644 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,644 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:32:22,650 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Thiamine metabolism [bvu00730]","SUID":29984},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":30640},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":31314},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":30250},{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":29644}]
2025-03-06 14:32:22,650 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Thiamine metabolism [bvu00730]', 'SUID': 29984}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 30640}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 31314}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 30250}, {'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 29644}]
2025-03-06 14:32:22,650 [DEBUG] py4...: ǀReturning 'get_network_list': ['Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]', 'Peptidoglycan biosynthesis [bvu00550]']
2025-03-06 14:32:22,650 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Peptidoglycan biosynthesis [bvu00550]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,650 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Peptidoglycan biosynthesis [bvu00550]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:32:22,654 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 29644
}
],
 "errors":[]
}
2025-03-06 14:32:22,654 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 29644}]
2025-03-06 14:32:22,654 [DEBUG] py4...: Returning 'get_network_suid': 29644
2025-03-06 14:32:22,655 [DEBUG] py4...: --------------------
2025-03-06 14:32:22,655 [DEBUG] py4...: Calling export_network('networks_graphml/Thiamine metabolism [bvu00730].graphml', 'graphml', network=29984, overwrite_file=True)
2025-03-06 14:32:22,655 [DEBUG] py4...: ǀCalling get_network_suid(29984, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,655 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,655 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:32:22,658 [DEBUG] py4...: ǀǀOK[200], content: [29984,30640,31314,30250,29644]
2025-03-06 14:32:22,659 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [29984, 30640, 31314, 30250, 29644]
2025-03-06 14:32:22,659 [DEBUG] py4...: ǀReturning 'get_network_suid': 29984
2025-03-06 14:32:22,659 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Thiamine metabolism [bvu00730].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,659 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,659 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 14:32:22,663 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml","modifiedTime":"2025-03-06 13:59:41.0953","isFile":true},
 "errors":[]
}
2025-03-06 14:32:22,663 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml', 'modifiedTime': '2025-03-06 13:59:41.0953', 'isFile': True}
2025-03-06 14:32:22,663 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml', 'modifiedTime': '2025-03-06 13:59:41.0953', 'isFile': True}
2025-03-06 14:32:22,663 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Thiamine metabolism [bvu00730].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,663 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,663 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 14:32:22,670 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:32:22,670 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml', 'existed': True}
2025-03-06 14:32:22,670 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml', 'existed': True}
2025-03-06 14:32:22,670 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:29984" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,670 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:29984', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 14:32:22,682 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml"},
 "errors":[]
}
2025-03-06 14:32:22,683 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 14:32:22,683 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 14:32:22,683 [DEBUG] py4...: --------------------
2025-03-06 14:32:22,683 [DEBUG] py4...: Calling export_network('networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'graphml', network=30640, overwrite_file=True)
2025-03-06 14:32:22,684 [DEBUG] py4...: ǀCalling get_network_suid(30640, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,684 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,684 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:32:22,687 [DEBUG] py4...: ǀǀOK[200], content: [29984,30640,31314,30250,29644]
2025-03-06 14:32:22,687 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [29984, 30640, 31314, 30250, 29644]
2025-03-06 14:32:22,687 [DEBUG] py4...: ǀReturning 'get_network_suid': 30640
2025-03-06 14:32:22,687 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,688 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,688 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 14:32:22,691 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml","modifiedTime":"2025-03-06 13:59:42.0003","isFile":true},
 "errors":[]
}
2025-03-06 14:32:22,691 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'modifiedTime': '2025-03-06 13:59:42.0003', 'isFile': True}
2025-03-06 14:32:22,691 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'modifiedTime': '2025-03-06 13:59:42.0003', 'isFile': True}
2025-03-06 14:32:22,691 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,691 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,691 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 14:32:22,695 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:32:22,696 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'existed': True}
2025-03-06 14:32:22,696 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'existed': True}
2025-03-06 14:32:22,696 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:30640" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,696 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:30640', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 14:32:22,706 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml"},
 "errors":[]
}
2025-03-06 14:32:22,707 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 14:32:22,707 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 14:32:22,707 [DEBUG] py4...: --------------------
2025-03-06 14:32:22,707 [DEBUG] py4...: Calling export_network('networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'graphml', network=31314, overwrite_file=True)
2025-03-06 14:32:22,707 [DEBUG] py4...: ǀCalling get_network_suid(31314, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,707 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,708 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:32:22,713 [DEBUG] py4...: ǀǀOK[200], content: [29984,30640,31314,30250,29644]
2025-03-06 14:32:22,714 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [29984, 30640, 31314, 30250, 29644]
2025-03-06 14:32:22,714 [DEBUG] py4...: ǀReturning 'get_network_suid': 31314
2025-03-06 14:32:22,714 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,714 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,714 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 14:32:22,719 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml","modifiedTime":"2025-03-06 13:59:41.0914","isFile":true},
 "errors":[]
}
2025-03-06 14:32:22,719 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'modifiedTime': '2025-03-06 13:59:41.0914', 'isFile': True}
2025-03-06 14:32:22,719 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'modifiedTime': '2025-03-06 13:59:41.0914', 'isFile': True}
2025-03-06 14:32:22,719 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,719 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,719 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 14:32:22,724 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:32:22,725 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'existed': True}
2025-03-06 14:32:22,725 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'existed': True}
2025-03-06 14:32:22,725 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:31314" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,725 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:31314', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 14:32:22,735 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml"},
 "errors":[]
}
2025-03-06 14:32:22,735 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 14:32:22,735 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 14:32:22,735 [DEBUG] py4...: --------------------
2025-03-06 14:32:22,735 [DEBUG] py4...: Calling export_network('networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'graphml', network=30250, overwrite_file=True)
2025-03-06 14:32:22,735 [DEBUG] py4...: ǀCalling get_network_suid(30250, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,736 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,736 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:32:22,740 [DEBUG] py4...: ǀǀOK[200], content: [29984,30640,31314,30250,29644]
2025-03-06 14:32:22,740 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [29984, 30640, 31314, 30250, 29644]
2025-03-06 14:32:22,740 [DEBUG] py4...: ǀReturning 'get_network_suid': 30250
2025-03-06 14:32:22,740 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,740 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,740 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 14:32:22,752 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml","modifiedTime":"2025-03-06 13:59:42.0035","isFile":true},
 "errors":[]
}
2025-03-06 14:32:22,753 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'modifiedTime': '2025-03-06 13:59:42.0035', 'isFile': True}
2025-03-06 14:32:22,753 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'modifiedTime': '2025-03-06 13:59:42.0035', 'isFile': True}
2025-03-06 14:32:22,753 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,753 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,754 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 14:32:22,757 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:32:22,758 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'existed': True}
2025-03-06 14:32:22,758 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'existed': True}
2025-03-06 14:32:22,758 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:30250" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,758 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:30250', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 14:32:22,766 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml"},
 "errors":[]
}
2025-03-06 14:32:22,766 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 14:32:22,768 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 14:32:22,768 [DEBUG] py4...: --------------------
2025-03-06 14:32:22,769 [DEBUG] py4...: Calling export_network('networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'graphml', network=29644, overwrite_file=True)
2025-03-06 14:32:22,769 [DEBUG] py4...: ǀCalling get_network_suid(29644, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,769 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,769 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:32:22,773 [DEBUG] py4...: ǀǀOK[200], content: [29984,30640,31314,30250,29644]
2025-03-06 14:32:22,773 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [29984, 30640, 31314, 30250, 29644]
2025-03-06 14:32:22,773 [DEBUG] py4...: ǀReturning 'get_network_suid': 29644
2025-03-06 14:32:22,773 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,773 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,773 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 14:32:22,777 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml","modifiedTime":"2025-03-06 13:59:41.0880","isFile":true},
 "errors":[]
}
2025-03-06 14:32:22,777 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'modifiedTime': '2025-03-06 13:59:41.0880', 'isFile': True}
2025-03-06 14:32:22,777 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'modifiedTime': '2025-03-06 13:59:41.0880', 'isFile': True}
2025-03-06 14:32:22,777 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,777 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,777 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 14:32:22,782 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:32:22,782 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'existed': True}
2025-03-06 14:32:22,782 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'existed': True}
2025-03-06 14:32:22,782 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:29644" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,782 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:29644', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 14:32:22,789 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml"},
 "errors":[]
}
2025-03-06 14:32:22,789 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 14:32:22,789 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 14:32:22,789 [DEBUG] py4...: --------------------
2025-03-06 14:32:22,789 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_10.cys')
2025-03-06 14:32:22,789 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:32:22,789 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys'}
2025-03-06 14:32:23,424 [DEBUG] py4...: --------------------
2025-03-06 14:33:21,225 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_12.cys')
2025-03-06 14:33:21,225 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_12.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:21,225 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 14:33:21,314 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 14:33:21,314 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_12.cys'}
2025-03-06 14:33:29,730 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:33:29,731 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:33:29,731 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:33:29,731 [DEBUG] py4...: --------------------
2025-03-06 14:33:29,731 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:33:29,731 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:29,732 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:33:29,764 [DEBUG] py4...: ǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":48416},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":49120},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":48626},{"name":"Biotin metabolism [bvu00780]","SUID":49506},{"name":"Riboflavin metabolism [bvu00740]","SUID":48886}]
2025-03-06 14:33:29,764 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 48416}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 49120}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 48626}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 49506}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 48886}]
2025-03-06 14:33:29,764 [DEBUG] py4...: Returning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:33:29,764 [DEBUG] py4...: --------------------
2025-03-06 14:33:29,764 [DEBUG] py4...: Calling get_network_suid('Vitamin B6 metabolism [bvu00750]')
2025-03-06 14:33:29,765 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:29,765 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:29,765 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:33:29,792 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":48416},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":49120},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":48626},{"name":"Biotin metabolism [bvu00780]","SUID":49506},{"name":"Riboflavin metabolism [bvu00740]","SUID":48886}]
2025-03-06 14:33:29,793 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 48416}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 49120}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 48626}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 49506}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 48886}]
2025-03-06 14:33:29,793 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:33:29,793 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Vitamin B6 metabolism [bvu00750]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:29,793 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Vitamin B6 metabolism [bvu00750]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:33:29,843 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 48416
}
],
 "errors":[]
}
2025-03-06 14:33:29,843 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 48416}]
2025-03-06 14:33:29,843 [DEBUG] py4...: Returning 'get_network_suid': 48416
2025-03-06 14:33:29,843 [DEBUG] py4...: --------------------
2025-03-06 14:33:29,843 [DEBUG] py4...: Calling get_network_suid('Nicotinate and nicotinamide metabolism [bvu00760]')
2025-03-06 14:33:29,843 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:29,843 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:29,843 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:33:29,909 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":48416},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":49120},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":48626},{"name":"Biotin metabolism [bvu00780]","SUID":49506},{"name":"Riboflavin metabolism [bvu00740]","SUID":48886}]
2025-03-06 14:33:29,909 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 48416}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 49120}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 48626}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 49506}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 48886}]
2025-03-06 14:33:29,909 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:33:29,909 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Nicotinate and nicotinamide metabolism [bvu00760]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:29,909 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:33:29,938 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 49120
}
],
 "errors":[]
}
2025-03-06 14:33:29,939 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 49120}]
2025-03-06 14:33:29,939 [DEBUG] py4...: Returning 'get_network_suid': 49120
2025-03-06 14:33:29,939 [DEBUG] py4...: --------------------
2025-03-06 14:33:29,939 [DEBUG] py4...: Calling get_network_suid('Pantothenate and CoA biosynthesis [bvu00770]')
2025-03-06 14:33:29,939 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:29,939 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:29,940 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:33:30,185 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":48416},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":49120},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":48626},{"name":"Biotin metabolism [bvu00780]","SUID":49506},{"name":"Riboflavin metabolism [bvu00740]","SUID":48886}]
2025-03-06 14:33:30,186 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 48416}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 49120}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 48626}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 49506}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 48886}]
2025-03-06 14:33:30,186 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:33:30,186 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pantothenate and CoA biosynthesis [bvu00770]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:30,187 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pantothenate and CoA biosynthesis [bvu00770]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:33:30,204 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 48626
}
],
 "errors":[]
}
2025-03-06 14:33:30,204 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 48626}]
2025-03-06 14:33:30,204 [DEBUG] py4...: Returning 'get_network_suid': 48626
2025-03-06 14:33:30,204 [DEBUG] py4...: --------------------
2025-03-06 14:33:30,204 [DEBUG] py4...: Calling get_network_suid('Biotin metabolism [bvu00780]')
2025-03-06 14:33:30,205 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:30,205 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:30,205 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:33:30,224 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":48416},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":49120},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":48626},{"name":"Biotin metabolism [bvu00780]","SUID":49506},{"name":"Riboflavin metabolism [bvu00740]","SUID":48886}]
2025-03-06 14:33:30,225 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 48416}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 49120}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 48626}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 49506}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 48886}]
2025-03-06 14:33:30,225 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:33:30,225 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biotin metabolism [bvu00780]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:30,225 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biotin metabolism [bvu00780]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:33:30,258 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 49506
}
],
 "errors":[]
}
2025-03-06 14:33:30,258 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 49506}]
2025-03-06 14:33:30,259 [DEBUG] py4...: Returning 'get_network_suid': 49506
2025-03-06 14:33:30,259 [DEBUG] py4...: --------------------
2025-03-06 14:33:30,259 [DEBUG] py4...: Calling get_network_suid('Riboflavin metabolism [bvu00740]')
2025-03-06 14:33:30,259 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:30,259 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:30,259 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:33:30,276 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":48416},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":49120},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":48626},{"name":"Biotin metabolism [bvu00780]","SUID":49506},{"name":"Riboflavin metabolism [bvu00740]","SUID":48886}]
2025-03-06 14:33:30,276 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 48416}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 49120}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 48626}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 49506}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 48886}]
2025-03-06 14:33:30,276 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:33:30,276 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Riboflavin metabolism [bvu00740]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:33:30,277 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Riboflavin metabolism [bvu00740]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:33:30,305 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 48886
}
],
 "errors":[]
}
2025-03-06 14:33:30,305 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 48886}]
2025-03-06 14:33:30,305 [DEBUG] py4...: Returning 'get_network_suid': 48886
2025-03-06 14:33:30,305 [DEBUG] py4...: --------------------
2025-03-06 14:34:41,125 [DEBUG] py4...: Calling get_all_nodes(48416)
2025-03-06 14:34:41,126 [DEBUG] py4...: ǀCalling get_network_suid(48416, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:34:41,127 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:34:41,127 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:34:41,171 [DEBUG] py4...: ǀǀOK[200], content: [54855,55559,55065,55945,55325]
2025-03-06 14:34:41,172 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [54855, 55559, 55065, 55945, 55325]
2025-03-06 14:34:41,172 [DEBUG] py4...: ǀ'get_network_suid' exception CyError('In get_network_suid(): Network does not exist for SUID "48416"')
2025-03-06 14:34:41,172 [DEBUG] py4...: 'get_all_nodes' exception CyError('In get_network_suid(): Network does not exist for SUID "48416"')
2025-03-06 14:34:41,172 [DEBUG] py4...: --------------------
2025-03-06 14:34:55,866 [DEBUG] py4...: Calling get_all_nodes()
2025-03-06 14:34:55,868 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:34:55,868 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:34:55,868 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:34:55,937 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 55945
}
],
 "errors":[]
}
2025-03-06 14:34:55,937 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 55945}]
2025-03-06 14:34:55,938 [DEBUG] py4...: ǀReturning 'get_network_suid': 55945
2025-03-06 14:34:55,938 [DEBUG] py4...: ǀCalling get_node_count(55945, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:34:55,938 [DEBUG] py4...: ǀǀCalling get_network_suid(55945, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:34:55,938 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:34:55,938 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:34:55,955 [DEBUG] py4...: ǀǀǀOK[200], content: [54855,55559,55065,55945,55325]
2025-03-06 14:34:55,955 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [54855, 55559, 55065, 55945, 55325]
2025-03-06 14:34:55,955 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 55945
2025-03-06 14:34:55,955 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/55945/nodes/count', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:34:55,955 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/55945/nodes/count)
2025-03-06 14:34:56,056 [DEBUG] py4...: ǀǀOK[200], content: {"count":61}
2025-03-06 14:34:56,056 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'count': 61}
2025-03-06 14:34:56,056 [DEBUG] py4...: ǀReturning 'get_node_count': 61
2025-03-06 14:34:56,056 [DEBUG] py4...: ǀCalling cyrest_get('networks/55945/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:34:56,056 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/55945/tables/defaultnode/columns/name)
2025-03-06 14:34:56,107 [DEBUG] py4...: ǀOK[200], content: {"name":"name","values":["path:bvu00780:30","path:bvu00780:29","path:bvu00780:28","path:bvu00780:27","path:bvu00780:15","path:bvu00780:14","path:bvu00780:13","path:bvu00780:12","path:bvu00780:11","path:bvu00780:10","path:bvu00780:9","path:bvu00780:8","path:bvu00780:7","path:bvu00780:6","path:bvu00780:5","path:bvu00780:108","path:bvu00780:106","path:bvu00780:104","path:bvu00780:103","path:bvu00780:102","path:bvu00780:101","path:bvu00780:100","path:bvu00780:98","path:bvu00780:96","path:bvu00780:94","path:bvu00780:85","path:bvu00780:84","path:bvu00780:83","path:bvu00780:80","path:bvu00780:79","path:bvu00780:77","path:bvu00780:76","path:bvu00780:74","path:bvu00780:73","path:bvu00780:71","path:bvu00780:70","path:bvu00780:68","path:bvu00780:67","path:bvu00780:63","path:bvu00780:62","path:bvu00780:60","path:bvu00780:59","path:bvu00780:57","path:bvu00780:56","path:bvu00780:54","path:bvu00780:52","path:bvu00780:50","path:bvu00780:49","path:bvu00780:48","path:bvu00780:46","path:bvu00780:45","path:bvu00780:43","path:bvu00780:42","path:bvu00780:39","path:bvu00780:38","path:bvu00780:37","path:bvu00780:35","path:bvu00780:34","path:bvu00780:33","path:bvu00780:32","path:bvu00780:31"]}
2025-03-06 14:34:56,107 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'name', 'values': ['path:bvu00780:30', 'path:bvu00780:29', 'path:bvu00780:28', 'path:bvu00780:27', 'path:bvu00780:15', 'path:bvu00780:14', 'path:bvu00780:13', 'path:bvu00780:12', 'path:bvu00780:11', 'path:bvu00780:10', 'path:bvu00780:9', 'path:bvu00780:8', 'path:bvu00780:7', 'path:bvu00780:6', 'path:bvu00780:5', 'path:bvu00780:108', 'path:bvu00780:106', 'path:bvu00780:104', 'path:bvu00780:103', 'path:bvu00780:102', 'path:bvu00780:101', 'path:bvu00780:100', 'path:bvu00780:98', 'path:bvu00780:96', 'path:bvu00780:94', 'path:bvu00780:85', 'path:bvu00780:84', 'path:bvu00780:83', 'path:bvu00780:80', 'path:bvu00780:79', 'path:bvu00780:77', 'path:bvu00780:76', 'path:bvu00780:74', 'path:bvu00780:73', 'path:bvu00780:71', 'path:bvu00780:70', 'path:bvu00780:68', 'path:bvu00780:67', 'path:bvu00780:63', 'path:bvu00780:62', 'path:bvu00780:60', 'path:bvu00780:59', 'path:bvu00780:57', 'path:bvu00780:56', 'path:bvu00780:54', 'path:bvu00780:52', 'path:bvu00780:50', 'path:bvu00780:49', 'path:bvu00780:48', 'path:bvu00780:46', 'path:bvu00780:45', 'path:bvu00780:43', 'path:bvu00780:42', 'path:bvu00780:39', 'path:bvu00780:38', 'path:bvu00780:37', 'path:bvu00780:35', 'path:bvu00780:34', 'path:bvu00780:33', 'path:bvu00780:32', 'path:bvu00780:31']}
2025-03-06 14:34:56,107 [DEBUG] py4...: Returning 'get_all_nodes': ['path:bvu00780:30', 'path:bvu00780:29', 'path:bvu00780:28', 'path:bvu00780:27', 'path:bvu00780:15', 'path:bvu00780:14', 'path:bvu00780:13', 'path:bvu00780:12', 'path:bvu00780:11', 'path:bvu00780:10', 'path:bvu00780:9', 'path:bvu00780:8', 'path:bvu00780:7', 'path:bvu00780:6', 'path:bvu00780:5', 'path:bvu00780:108', 'path:bvu00780:106', 'path:bvu00780:104', 'path:bvu00780:103', 'path:bvu00780:102', 'path:bvu00780:101', 'path:bvu00780:100', 'path:bvu00780:98', 'path:bvu00780:96', 'path:bvu00780:94', 'path:bvu00780:85', 'path:bvu00780:84', 'path:bvu00780:83', 'path:bvu00780:80', 'path:bvu00780:79', 'path:bvu00780:77', 'path:bvu00780:76', 'path:bvu00780:74', 'path:bvu00780:73', 'path:bvu00780:71', 'path:bvu00780:70', 'path:bvu00780:68', 'path:bvu00780:67', 'path:bvu00780:63', 'path:bvu00780:62', 'path:bvu00780:60', 'path:bvu00780:59', 'path:bvu00780:57', 'path:bvu00780:56', 'path:bvu00780:54', 'path:bvu00780:52', 'path:bvu00780:50', 'path:bvu00780:49', 'path:bvu00780:48', 'path:bvu00780:46', 'path:bvu00780:45', 'path:bvu00780:43', 'path:bvu00780:42', 'path:bvu00780:39', 'path:bvu00780:38', 'path:bvu00780:37', 'path:bvu00780:35', 'path:bvu00780:34', 'path:bvu00780:33', 'path:bvu00780:32', 'path:bvu00780:31']
2025-03-06 14:34:56,107 [DEBUG] py4...: --------------------
2025-03-06 14:35:01,054 [DEBUG] py4...: Calling get_all_edges()
2025-03-06 14:35:01,054 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:01,055 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:01,055 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:01,102 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 55945
}
],
 "errors":[]
}
2025-03-06 14:35:01,103 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 55945}]
2025-03-06 14:35:01,103 [DEBUG] py4...: ǀReturning 'get_network_suid': 55945
2025-03-06 14:35:01,103 [DEBUG] py4...: ǀCalling get_edge_count(None, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:01,103 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:01,103 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:01,103 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:01,203 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 55945
}
],
 "errors":[]
}
2025-03-06 14:35:01,204 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 55945}]
2025-03-06 14:35:01,204 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 55945
2025-03-06 14:35:01,204 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/55945/edges/count', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:01,204 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/55945/edges/count)
2025-03-06 14:35:01,262 [DEBUG] py4...: ǀǀOK[200], content: {"count":42}
2025-03-06 14:35:01,262 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'count': 42}
2025-03-06 14:35:01,262 [DEBUG] py4...: ǀReturning 'get_edge_count': 42
2025-03-06 14:35:01,262 [DEBUG] py4...: ǀCalling cyrest_get('networks/55945/tables/defaultedge/columns/name', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:01,262 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/55945/tables/defaultedge/columns/name)
2025-03-06 14:35:01,315 [DEBUG] py4...: ǀOK[200], content: {"name":"name","values":["rn:R12934","rn:R12934","rn:R10115","rn:R10115","rn:R10119","rn:R10122","rn:R10122","rn:R10121","rn:R10121","rn:R10120","rn:R10120","rn:R10119","rn:R10119","rn:R10119","rn:R10118","rn:R10118","rn:R10117","rn:R10117","rn:R10116","rn:R10116","rn:R09543","rn:R10115","rn:R10115","rn:R10115","rn:R10115","rn:R10119","rn:R10119","rn:R09543","rn:R10124","rn:R09725","rn:R09725","rn:R10124","rn:R03210","rn:R03182","rn:R01078","rn:R01074","rn:R05145","rn:R05145","rn:R01074","rn:R03182","rn:R01078","rn:R03210"]}
2025-03-06 14:35:01,315 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'name', 'values': ['rn:R12934', 'rn:R12934', 'rn:R10115', 'rn:R10115', 'rn:R10119', 'rn:R10122', 'rn:R10122', 'rn:R10121', 'rn:R10121', 'rn:R10120', 'rn:R10120', 'rn:R10119', 'rn:R10119', 'rn:R10119', 'rn:R10118', 'rn:R10118', 'rn:R10117', 'rn:R10117', 'rn:R10116', 'rn:R10116', 'rn:R09543', 'rn:R10115', 'rn:R10115', 'rn:R10115', 'rn:R10115', 'rn:R10119', 'rn:R10119', 'rn:R09543', 'rn:R10124', 'rn:R09725', 'rn:R09725', 'rn:R10124', 'rn:R03210', 'rn:R03182', 'rn:R01078', 'rn:R01074', 'rn:R05145', 'rn:R05145', 'rn:R01074', 'rn:R03182', 'rn:R01078', 'rn:R03210']}
2025-03-06 14:35:01,315 [DEBUG] py4...: Returning 'get_all_edges': ['rn:R12934', 'rn:R12934', 'rn:R10115', 'rn:R10115', 'rn:R10119', 'rn:R10122', 'rn:R10122', 'rn:R10121', 'rn:R10121', 'rn:R10120', 'rn:R10120', 'rn:R10119', 'rn:R10119', 'rn:R10119', 'rn:R10118', 'rn:R10118', 'rn:R10117', 'rn:R10117', 'rn:R10116', 'rn:R10116', 'rn:R09543', 'rn:R10115', 'rn:R10115', 'rn:R10115', 'rn:R10115', 'rn:R10119', 'rn:R10119', 'rn:R09543', 'rn:R10124', 'rn:R09725', 'rn:R09725', 'rn:R10124', 'rn:R03210', 'rn:R03182', 'rn:R01078', 'rn:R01074', 'rn:R05145', 'rn:R05145', 'rn:R01074', 'rn:R03182', 'rn:R01078', 'rn:R03210']
2025-03-06 14:35:01,315 [DEBUG] py4...: --------------------
2025-03-06 14:35:11,161 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:35:11,162 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:11,162 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:11,175 [DEBUG] py4...: ǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":54855},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":55559},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":55065},{"name":"Biotin metabolism [bvu00780]","SUID":55945},{"name":"Riboflavin metabolism [bvu00740]","SUID":55325}]
2025-03-06 14:35:11,175 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 54855}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 55559}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 55065}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 55945}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 55325}]
2025-03-06 14:35:11,175 [DEBUG] py4...: Returning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:35:11,175 [DEBUG] py4...: --------------------
2025-03-06 14:35:12,655 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:35:12,655 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:12,655 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:12,664 [DEBUG] py4...: ǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":54855},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":55559},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":55065},{"name":"Biotin metabolism [bvu00780]","SUID":55945},{"name":"Riboflavin metabolism [bvu00740]","SUID":55325}]
2025-03-06 14:35:12,664 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 54855}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 55559}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 55065}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 55945}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 55325}]
2025-03-06 14:35:12,664 [DEBUG] py4...: Returning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:35:12,664 [DEBUG] py4...: --------------------
2025-03-06 14:35:13,630 [DEBUG] py4...: Calling get_network_suid('Vitamin B6 metabolism [bvu00750]')
2025-03-06 14:35:13,630 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:13,630 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:13,630 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:13,641 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":54855},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":55559},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":55065},{"name":"Biotin metabolism [bvu00780]","SUID":55945},{"name":"Riboflavin metabolism [bvu00740]","SUID":55325}]
2025-03-06 14:35:13,641 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 54855}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 55559}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 55065}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 55945}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 55325}]
2025-03-06 14:35:13,641 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:35:13,641 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Vitamin B6 metabolism [bvu00750]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:13,642 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Vitamin B6 metabolism [bvu00750]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:13,673 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 54855
}
],
 "errors":[]
}
2025-03-06 14:35:13,673 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 54855}]
2025-03-06 14:35:13,673 [DEBUG] py4...: Returning 'get_network_suid': 54855
2025-03-06 14:35:13,673 [DEBUG] py4...: --------------------
2025-03-06 14:35:13,673 [DEBUG] py4...: Calling get_network_suid('Nicotinate and nicotinamide metabolism [bvu00760]')
2025-03-06 14:35:13,673 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:13,674 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:13,674 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:13,699 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":54855},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":55559},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":55065},{"name":"Biotin metabolism [bvu00780]","SUID":55945},{"name":"Riboflavin metabolism [bvu00740]","SUID":55325}]
2025-03-06 14:35:13,700 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 54855}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 55559}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 55065}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 55945}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 55325}]
2025-03-06 14:35:13,700 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:35:13,700 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Nicotinate and nicotinamide metabolism [bvu00760]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:13,700 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:13,759 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 55559
}
],
 "errors":[]
}
2025-03-06 14:35:13,760 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 55559}]
2025-03-06 14:35:13,760 [DEBUG] py4...: Returning 'get_network_suid': 55559
2025-03-06 14:35:13,760 [DEBUG] py4...: --------------------
2025-03-06 14:35:13,760 [DEBUG] py4...: Calling get_network_suid('Pantothenate and CoA biosynthesis [bvu00770]')
2025-03-06 14:35:13,760 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:13,760 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:13,760 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:13,806 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":54855},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":55559},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":55065},{"name":"Biotin metabolism [bvu00780]","SUID":55945},{"name":"Riboflavin metabolism [bvu00740]","SUID":55325}]
2025-03-06 14:35:13,806 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 54855}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 55559}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 55065}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 55945}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 55325}]
2025-03-06 14:35:13,806 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:35:13,806 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pantothenate and CoA biosynthesis [bvu00770]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:13,806 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pantothenate and CoA biosynthesis [bvu00770]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:13,894 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 55065
}
],
 "errors":[]
}
2025-03-06 14:35:13,894 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 55065}]
2025-03-06 14:35:13,894 [DEBUG] py4...: Returning 'get_network_suid': 55065
2025-03-06 14:35:13,894 [DEBUG] py4...: --------------------
2025-03-06 14:35:13,894 [DEBUG] py4...: Calling get_network_suid('Biotin metabolism [bvu00780]')
2025-03-06 14:35:13,894 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:13,894 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:13,894 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:13,924 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":54855},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":55559},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":55065},{"name":"Biotin metabolism [bvu00780]","SUID":55945},{"name":"Riboflavin metabolism [bvu00740]","SUID":55325}]
2025-03-06 14:35:13,924 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 54855}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 55559}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 55065}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 55945}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 55325}]
2025-03-06 14:35:13,924 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:35:13,924 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biotin metabolism [bvu00780]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:13,925 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biotin metabolism [bvu00780]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:13,943 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 55945
}
],
 "errors":[]
}
2025-03-06 14:35:13,943 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 55945}]
2025-03-06 14:35:13,943 [DEBUG] py4...: Returning 'get_network_suid': 55945
2025-03-06 14:35:13,944 [DEBUG] py4...: --------------------
2025-03-06 14:35:13,944 [DEBUG] py4...: Calling get_network_suid('Riboflavin metabolism [bvu00740]')
2025-03-06 14:35:13,944 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:13,944 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:13,944 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:13,968 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":54855},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":55559},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":55065},{"name":"Biotin metabolism [bvu00780]","SUID":55945},{"name":"Riboflavin metabolism [bvu00740]","SUID":55325}]
2025-03-06 14:35:13,969 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 54855}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 55559}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 55065}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 55945}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 55325}]
2025-03-06 14:35:13,969 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:35:13,969 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Riboflavin metabolism [bvu00740]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:13,969 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Riboflavin metabolism [bvu00740]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:13,995 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 55325
}
],
 "errors":[]
}
2025-03-06 14:35:13,995 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 55325}]
2025-03-06 14:35:13,995 [DEBUG] py4...: Returning 'get_network_suid': 55325
2025-03-06 14:35:13,995 [DEBUG] py4...: --------------------
2025-03-06 14:35:16,495 [DEBUG] py4...: Calling get_network_suid('Vitamin B6 metabolism [bvu00750]')
2025-03-06 14:35:16,495 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:16,495 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:16,496 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:16,506 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":54855},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":55559},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":55065},{"name":"Biotin metabolism [bvu00780]","SUID":55945},{"name":"Riboflavin metabolism [bvu00740]","SUID":55325}]
2025-03-06 14:35:16,507 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 54855}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 55559}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 55065}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 55945}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 55325}]
2025-03-06 14:35:16,507 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:35:16,507 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Vitamin B6 metabolism [bvu00750]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:16,507 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Vitamin B6 metabolism [bvu00750]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:16,521 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 54855
}
],
 "errors":[]
}
2025-03-06 14:35:16,522 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 54855}]
2025-03-06 14:35:16,522 [DEBUG] py4...: Returning 'get_network_suid': 54855
2025-03-06 14:35:16,522 [DEBUG] py4...: --------------------
2025-03-06 14:35:16,522 [DEBUG] py4...: Calling get_network_suid('Nicotinate and nicotinamide metabolism [bvu00760]')
2025-03-06 14:35:16,522 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:16,522 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:16,522 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:16,540 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":54855},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":55559},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":55065},{"name":"Biotin metabolism [bvu00780]","SUID":55945},{"name":"Riboflavin metabolism [bvu00740]","SUID":55325}]
2025-03-06 14:35:16,540 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 54855}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 55559}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 55065}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 55945}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 55325}]
2025-03-06 14:35:16,541 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:35:16,541 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Nicotinate and nicotinamide metabolism [bvu00760]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:16,541 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:16,564 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 55559
}
],
 "errors":[]
}
2025-03-06 14:35:16,564 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 55559}]
2025-03-06 14:35:16,564 [DEBUG] py4...: Returning 'get_network_suid': 55559
2025-03-06 14:35:16,564 [DEBUG] py4...: --------------------
2025-03-06 14:35:16,564 [DEBUG] py4...: Calling get_network_suid('Pantothenate and CoA biosynthesis [bvu00770]')
2025-03-06 14:35:16,564 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:16,564 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:16,564 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:16,572 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":54855},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":55559},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":55065},{"name":"Biotin metabolism [bvu00780]","SUID":55945},{"name":"Riboflavin metabolism [bvu00740]","SUID":55325}]
2025-03-06 14:35:16,573 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 54855}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 55559}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 55065}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 55945}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 55325}]
2025-03-06 14:35:16,573 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:35:16,573 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pantothenate and CoA biosynthesis [bvu00770]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:16,573 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pantothenate and CoA biosynthesis [bvu00770]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:16,584 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 55065
}
],
 "errors":[]
}
2025-03-06 14:35:16,585 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 55065}]
2025-03-06 14:35:16,585 [DEBUG] py4...: Returning 'get_network_suid': 55065
2025-03-06 14:35:16,585 [DEBUG] py4...: --------------------
2025-03-06 14:35:16,585 [DEBUG] py4...: Calling get_network_suid('Biotin metabolism [bvu00780]')
2025-03-06 14:35:16,585 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:16,587 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:16,588 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:16,660 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":54855},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":55559},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":55065},{"name":"Biotin metabolism [bvu00780]","SUID":55945},{"name":"Riboflavin metabolism [bvu00740]","SUID":55325}]
2025-03-06 14:35:16,660 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 54855}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 55559}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 55065}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 55945}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 55325}]
2025-03-06 14:35:16,660 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:35:16,660 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biotin metabolism [bvu00780]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:16,661 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biotin metabolism [bvu00780]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:16,696 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 55945
}
],
 "errors":[]
}
2025-03-06 14:35:16,696 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 55945}]
2025-03-06 14:35:16,696 [DEBUG] py4...: Returning 'get_network_suid': 55945
2025-03-06 14:35:16,697 [DEBUG] py4...: --------------------
2025-03-06 14:35:16,697 [DEBUG] py4...: Calling get_network_suid('Riboflavin metabolism [bvu00740]')
2025-03-06 14:35:16,697 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:16,697 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:16,697 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:16,727 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":54855},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":55559},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":55065},{"name":"Biotin metabolism [bvu00780]","SUID":55945},{"name":"Riboflavin metabolism [bvu00740]","SUID":55325}]
2025-03-06 14:35:16,730 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 54855}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 55559}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 55065}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 55945}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 55325}]
2025-03-06 14:35:16,730 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:35:16,730 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Riboflavin metabolism [bvu00740]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:16,730 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Riboflavin metabolism [bvu00740]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:16,783 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 55325
}
],
 "errors":[]
}
2025-03-06 14:35:16,784 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 55325}]
2025-03-06 14:35:16,784 [DEBUG] py4...: Returning 'get_network_suid': 55325
2025-03-06 14:35:16,784 [DEBUG] py4...: --------------------
2025-03-06 14:35:20,128 [DEBUG] py4...: Calling get_all_nodes(54855)
2025-03-06 14:35:20,128 [DEBUG] py4...: ǀCalling get_network_suid(54855, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:20,128 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:20,128 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:35:20,139 [DEBUG] py4...: ǀǀOK[200], content: [54855,55559,55065,55945,55325]
2025-03-06 14:35:20,139 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [54855, 55559, 55065, 55945, 55325]
2025-03-06 14:35:20,139 [DEBUG] py4...: ǀReturning 'get_network_suid': 54855
2025-03-06 14:35:20,139 [DEBUG] py4...: ǀCalling get_node_count(54855, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:20,139 [DEBUG] py4...: ǀǀCalling get_network_suid(54855, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:20,139 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:20,139 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:35:20,147 [DEBUG] py4...: ǀǀǀOK[200], content: [54855,55559,55065,55945,55325]
2025-03-06 14:35:20,147 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [54855, 55559, 55065, 55945, 55325]
2025-03-06 14:35:20,147 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 54855
2025-03-06 14:35:20,147 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/54855/nodes/count', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:20,147 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/54855/nodes/count)
2025-03-06 14:35:20,158 [DEBUG] py4...: ǀǀOK[200], content: {"count":57}
2025-03-06 14:35:20,158 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'count': 57}
2025-03-06 14:35:20,158 [DEBUG] py4...: ǀReturning 'get_node_count': 57
2025-03-06 14:35:20,158 [DEBUG] py4...: ǀCalling cyrest_get('networks/54855/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:20,158 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/54855/tables/defaultnode/columns/name)
2025-03-06 14:35:20,222 [DEBUG] py4...: ǀOK[200], content: {"name":"name","values":["path:bvu00750:116","path:bvu00750:112","path:bvu00750:111","path:bvu00750:110","path:bvu00750:109","path:bvu00750:108","path:bvu00750:106","path:bvu00750:105","path:bvu00750:104","path:bvu00750:103","path:bvu00750:102","path:bvu00750:100","path:bvu00750:99","path:bvu00750:98","path:bvu00750:97","path:bvu00750:96","path:bvu00750:93","path:bvu00750:92","path:bvu00750:91","path:bvu00750:90","path:bvu00750:89","path:bvu00750:88","path:bvu00750:87","path:bvu00750:86","path:bvu00750:85","path:bvu00750:84","path:bvu00750:83","path:bvu00750:82","path:bvu00750:42","path:bvu00750:41","path:bvu00750:40","path:bvu00750:39","path:bvu00750:38","path:bvu00750:37","path:bvu00750:36","path:bvu00750:35","path:bvu00750:34","path:bvu00750:33","path:bvu00750:32","path:bvu00750:31","path:bvu00750:30","path:bvu00750:29","path:bvu00750:28","path:bvu00750:27","path:bvu00750:26","path:bvu00750:25","path:bvu00750:24","path:bvu00750:23","path:bvu00750:22","path:bvu00750:21","path:bvu00750:20","path:bvu00750:19","path:bvu00750:17","path:bvu00750:10","path:bvu00750:7","path:bvu00750:6","path:bvu00750:5"]}
2025-03-06 14:35:20,222 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'name', 'values': ['path:bvu00750:116', 'path:bvu00750:112', 'path:bvu00750:111', 'path:bvu00750:110', 'path:bvu00750:109', 'path:bvu00750:108', 'path:bvu00750:106', 'path:bvu00750:105', 'path:bvu00750:104', 'path:bvu00750:103', 'path:bvu00750:102', 'path:bvu00750:100', 'path:bvu00750:99', 'path:bvu00750:98', 'path:bvu00750:97', 'path:bvu00750:96', 'path:bvu00750:93', 'path:bvu00750:92', 'path:bvu00750:91', 'path:bvu00750:90', 'path:bvu00750:89', 'path:bvu00750:88', 'path:bvu00750:87', 'path:bvu00750:86', 'path:bvu00750:85', 'path:bvu00750:84', 'path:bvu00750:83', 'path:bvu00750:82', 'path:bvu00750:42', 'path:bvu00750:41', 'path:bvu00750:40', 'path:bvu00750:39', 'path:bvu00750:38', 'path:bvu00750:37', 'path:bvu00750:36', 'path:bvu00750:35', 'path:bvu00750:34', 'path:bvu00750:33', 'path:bvu00750:32', 'path:bvu00750:31', 'path:bvu00750:30', 'path:bvu00750:29', 'path:bvu00750:28', 'path:bvu00750:27', 'path:bvu00750:26', 'path:bvu00750:25', 'path:bvu00750:24', 'path:bvu00750:23', 'path:bvu00750:22', 'path:bvu00750:21', 'path:bvu00750:20', 'path:bvu00750:19', 'path:bvu00750:17', 'path:bvu00750:10', 'path:bvu00750:7', 'path:bvu00750:6', 'path:bvu00750:5']}
2025-03-06 14:35:20,222 [DEBUG] py4...: Returning 'get_all_nodes': ['path:bvu00750:116', 'path:bvu00750:112', 'path:bvu00750:111', 'path:bvu00750:110', 'path:bvu00750:109', 'path:bvu00750:108', 'path:bvu00750:106', 'path:bvu00750:105', 'path:bvu00750:104', 'path:bvu00750:103', 'path:bvu00750:102', 'path:bvu00750:100', 'path:bvu00750:99', 'path:bvu00750:98', 'path:bvu00750:97', 'path:bvu00750:96', 'path:bvu00750:93', 'path:bvu00750:92', 'path:bvu00750:91', 'path:bvu00750:90', 'path:bvu00750:89', 'path:bvu00750:88', 'path:bvu00750:87', 'path:bvu00750:86', 'path:bvu00750:85', 'path:bvu00750:84', 'path:bvu00750:83', 'path:bvu00750:82', 'path:bvu00750:42', 'path:bvu00750:41', 'path:bvu00750:40', 'path:bvu00750:39', 'path:bvu00750:38', 'path:bvu00750:37', 'path:bvu00750:36', 'path:bvu00750:35', 'path:bvu00750:34', 'path:bvu00750:33', 'path:bvu00750:32', 'path:bvu00750:31', 'path:bvu00750:30', 'path:bvu00750:29', 'path:bvu00750:28', 'path:bvu00750:27', 'path:bvu00750:26', 'path:bvu00750:25', 'path:bvu00750:24', 'path:bvu00750:23', 'path:bvu00750:22', 'path:bvu00750:21', 'path:bvu00750:20', 'path:bvu00750:19', 'path:bvu00750:17', 'path:bvu00750:10', 'path:bvu00750:7', 'path:bvu00750:6', 'path:bvu00750:5']
2025-03-06 14:35:20,222 [DEBUG] py4...: --------------------
2025-03-06 14:35:23,536 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_13.cys')
2025-03-06 14:35:23,536 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_13.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:23,536 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_13.cys'}
2025-03-06 14:35:25,487 [DEBUG] py4...: --------------------
2025-03-06 14:35:27,213 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_12.cys')
2025-03-06 14:35:27,213 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_12.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:27,213 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 14:35:27,243 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 14:35:27,244 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_12.cys'}
2025-03-06 14:35:33,489 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:35:33,490 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:35:33,490 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:35:33,490 [DEBUG] py4...: --------------------
2025-03-06 14:35:33,491 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:35:33,491 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:33,491 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:33,509 [DEBUG] py4...: ǀOK[200], content: [{"name":"Riboflavin metabolism [bvu00740]","SUID":71648},{"name":"Vitamin B6 metabolism [bvu00750]","SUID":71178},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":71882},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":71388},{"name":"Biotin metabolism [bvu00780]","SUID":72268}]
2025-03-06 14:35:33,510 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 71648}, {'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 71178}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 71882}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 71388}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 72268}]
2025-03-06 14:35:33,510 [DEBUG] py4...: Returning 'get_network_list': ['Riboflavin metabolism [bvu00740]', 'Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]']
2025-03-06 14:35:33,510 [DEBUG] py4...: --------------------
2025-03-06 14:35:33,510 [DEBUG] py4...: Calling get_network_suid('Riboflavin metabolism [bvu00740]')
2025-03-06 14:35:33,510 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:33,510 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:33,510 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:33,530 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Riboflavin metabolism [bvu00740]","SUID":71648},{"name":"Vitamin B6 metabolism [bvu00750]","SUID":71178},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":71882},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":71388},{"name":"Biotin metabolism [bvu00780]","SUID":72268}]
2025-03-06 14:35:33,531 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 71648}, {'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 71178}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 71882}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 71388}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 72268}]
2025-03-06 14:35:33,531 [DEBUG] py4...: ǀReturning 'get_network_list': ['Riboflavin metabolism [bvu00740]', 'Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]']
2025-03-06 14:35:33,531 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Riboflavin metabolism [bvu00740]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:33,531 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Riboflavin metabolism [bvu00740]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:33,551 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 71648
}
],
 "errors":[]
}
2025-03-06 14:35:33,551 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 71648}]
2025-03-06 14:35:33,551 [DEBUG] py4...: Returning 'get_network_suid': 71648
2025-03-06 14:35:33,551 [DEBUG] py4...: --------------------
2025-03-06 14:35:33,551 [DEBUG] py4...: Calling get_network_suid('Vitamin B6 metabolism [bvu00750]')
2025-03-06 14:35:33,551 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:33,551 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:33,551 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:33,574 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Riboflavin metabolism [bvu00740]","SUID":71648},{"name":"Vitamin B6 metabolism [bvu00750]","SUID":71178},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":71882},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":71388},{"name":"Biotin metabolism [bvu00780]","SUID":72268}]
2025-03-06 14:35:33,575 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 71648}, {'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 71178}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 71882}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 71388}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 72268}]
2025-03-06 14:35:33,575 [DEBUG] py4...: ǀReturning 'get_network_list': ['Riboflavin metabolism [bvu00740]', 'Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]']
2025-03-06 14:35:33,575 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Vitamin B6 metabolism [bvu00750]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:33,575 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Vitamin B6 metabolism [bvu00750]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:33,607 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 71178
}
],
 "errors":[]
}
2025-03-06 14:35:33,608 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 71178}]
2025-03-06 14:35:33,608 [DEBUG] py4...: Returning 'get_network_suid': 71178
2025-03-06 14:35:33,608 [DEBUG] py4...: --------------------
2025-03-06 14:35:33,608 [DEBUG] py4...: Calling get_network_suid('Nicotinate and nicotinamide metabolism [bvu00760]')
2025-03-06 14:35:33,608 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:33,608 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:33,609 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:33,619 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Riboflavin metabolism [bvu00740]","SUID":71648},{"name":"Vitamin B6 metabolism [bvu00750]","SUID":71178},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":71882},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":71388},{"name":"Biotin metabolism [bvu00780]","SUID":72268}]
2025-03-06 14:35:33,619 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 71648}, {'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 71178}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 71882}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 71388}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 72268}]
2025-03-06 14:35:33,620 [DEBUG] py4...: ǀReturning 'get_network_list': ['Riboflavin metabolism [bvu00740]', 'Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]']
2025-03-06 14:35:33,620 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Nicotinate and nicotinamide metabolism [bvu00760]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:33,620 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:33,633 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 71882
}
],
 "errors":[]
}
2025-03-06 14:35:33,634 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 71882}]
2025-03-06 14:35:33,634 [DEBUG] py4...: Returning 'get_network_suid': 71882
2025-03-06 14:35:33,634 [DEBUG] py4...: --------------------
2025-03-06 14:35:33,634 [DEBUG] py4...: Calling get_network_suid('Pantothenate and CoA biosynthesis [bvu00770]')
2025-03-06 14:35:33,634 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:33,634 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:33,634 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:33,646 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Riboflavin metabolism [bvu00740]","SUID":71648},{"name":"Vitamin B6 metabolism [bvu00750]","SUID":71178},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":71882},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":71388},{"name":"Biotin metabolism [bvu00780]","SUID":72268}]
2025-03-06 14:35:33,647 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 71648}, {'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 71178}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 71882}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 71388}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 72268}]
2025-03-06 14:35:33,647 [DEBUG] py4...: ǀReturning 'get_network_list': ['Riboflavin metabolism [bvu00740]', 'Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]']
2025-03-06 14:35:33,647 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pantothenate and CoA biosynthesis [bvu00770]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:33,647 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pantothenate and CoA biosynthesis [bvu00770]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:33,665 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 71388
}
],
 "errors":[]
}
2025-03-06 14:35:33,665 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 71388}]
2025-03-06 14:35:33,665 [DEBUG] py4...: Returning 'get_network_suid': 71388
2025-03-06 14:35:33,665 [DEBUG] py4...: --------------------
2025-03-06 14:35:33,665 [DEBUG] py4...: Calling get_network_suid('Biotin metabolism [bvu00780]')
2025-03-06 14:35:33,665 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:33,666 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:33,666 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:35:33,685 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Riboflavin metabolism [bvu00740]","SUID":71648},{"name":"Vitamin B6 metabolism [bvu00750]","SUID":71178},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":71882},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":71388},{"name":"Biotin metabolism [bvu00780]","SUID":72268}]
2025-03-06 14:35:33,686 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 71648}, {'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 71178}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 71882}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 71388}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 72268}]
2025-03-06 14:35:33,687 [DEBUG] py4...: ǀReturning 'get_network_list': ['Riboflavin metabolism [bvu00740]', 'Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]']
2025-03-06 14:35:33,687 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biotin metabolism [bvu00780]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:33,687 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biotin metabolism [bvu00780]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:35:33,711 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 72268
}
],
 "errors":[]
}
2025-03-06 14:35:33,712 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 72268}]
2025-03-06 14:35:33,712 [DEBUG] py4...: Returning 'get_network_suid': 72268
2025-03-06 14:35:33,712 [DEBUG] py4...: --------------------
2025-03-06 14:35:39,361 [DEBUG] py4...: Calling get_all_nodes(71648)
2025-03-06 14:35:39,361 [DEBUG] py4...: ǀCalling get_network_suid(71648, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:39,361 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:39,362 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:35:39,384 [DEBUG] py4...: ǀǀOK[200], content: [71648,71178,71882,71388,72268]
2025-03-06 14:35:39,385 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [71648, 71178, 71882, 71388, 72268]
2025-03-06 14:35:39,385 [DEBUG] py4...: ǀReturning 'get_network_suid': 71648
2025-03-06 14:35:39,385 [DEBUG] py4...: ǀCalling get_node_count(71648, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:39,385 [DEBUG] py4...: ǀǀCalling get_network_suid(71648, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:39,385 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:39,385 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:35:39,389 [DEBUG] py4...: ǀǀǀOK[200], content: [71648,71178,71882,71388,72268]
2025-03-06 14:35:39,390 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [71648, 71178, 71882, 71388, 72268]
2025-03-06 14:35:39,390 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 71648
2025-03-06 14:35:39,390 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/71648/nodes/count', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:39,390 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/71648/nodes/count)
2025-03-06 14:35:39,398 [DEBUG] py4...: ǀǀOK[200], content: {"count":57}
2025-03-06 14:35:39,398 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'count': 57}
2025-03-06 14:35:39,398 [DEBUG] py4...: ǀReturning 'get_node_count': 57
2025-03-06 14:35:39,398 [DEBUG] py4...: ǀCalling cyrest_get('networks/71648/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:39,398 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/71648/tables/defaultnode/columns/name)
2025-03-06 14:35:39,402 [DEBUG] py4...: ǀOK[200], content: {"name":"name","values":["path:bvu00740:95","path:bvu00740:92","path:bvu00740:90","path:bvu00740:89","path:bvu00740:88","path:bvu00740:85","path:bvu00740:84","path:bvu00740:83","path:bvu00740:82","path:bvu00740:81","path:bvu00740:80","path:bvu00740:79","path:bvu00740:78","path:bvu00740:76","path:bvu00740:74","path:bvu00740:73","path:bvu00740:72","path:bvu00740:70","path:bvu00740:69","path:bvu00740:68","path:bvu00740:67","path:bvu00740:66","path:bvu00740:64","path:bvu00740:63","path:bvu00740:62","path:bvu00740:58","path:bvu00740:56","path:bvu00740:55","path:bvu00740:52","path:bvu00740:51","path:bvu00740:49","path:bvu00740:48","path:bvu00740:47","path:bvu00740:46","path:bvu00740:45","path:bvu00740:44","path:bvu00740:43","path:bvu00740:42","path:bvu00740:41","path:bvu00740:40","path:bvu00740:39","path:bvu00740:36","path:bvu00740:19","path:bvu00740:18","path:bvu00740:17","path:bvu00740:16","path:bvu00740:15","path:bvu00740:14","path:bvu00740:13","path:bvu00740:12","path:bvu00740:11","path:bvu00740:10","path:bvu00740:5","path:bvu00740:4","path:bvu00740:99","path:bvu00740:98","path:bvu00740:97"]}
2025-03-06 14:35:39,403 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'name', 'values': ['path:bvu00740:95', 'path:bvu00740:92', 'path:bvu00740:90', 'path:bvu00740:89', 'path:bvu00740:88', 'path:bvu00740:85', 'path:bvu00740:84', 'path:bvu00740:83', 'path:bvu00740:82', 'path:bvu00740:81', 'path:bvu00740:80', 'path:bvu00740:79', 'path:bvu00740:78', 'path:bvu00740:76', 'path:bvu00740:74', 'path:bvu00740:73', 'path:bvu00740:72', 'path:bvu00740:70', 'path:bvu00740:69', 'path:bvu00740:68', 'path:bvu00740:67', 'path:bvu00740:66', 'path:bvu00740:64', 'path:bvu00740:63', 'path:bvu00740:62', 'path:bvu00740:58', 'path:bvu00740:56', 'path:bvu00740:55', 'path:bvu00740:52', 'path:bvu00740:51', 'path:bvu00740:49', 'path:bvu00740:48', 'path:bvu00740:47', 'path:bvu00740:46', 'path:bvu00740:45', 'path:bvu00740:44', 'path:bvu00740:43', 'path:bvu00740:42', 'path:bvu00740:41', 'path:bvu00740:40', 'path:bvu00740:39', 'path:bvu00740:36', 'path:bvu00740:19', 'path:bvu00740:18', 'path:bvu00740:17', 'path:bvu00740:16', 'path:bvu00740:15', 'path:bvu00740:14', 'path:bvu00740:13', 'path:bvu00740:12', 'path:bvu00740:11', 'path:bvu00740:10', 'path:bvu00740:5', 'path:bvu00740:4', 'path:bvu00740:99', 'path:bvu00740:98', 'path:bvu00740:97']}
2025-03-06 14:35:39,403 [DEBUG] py4...: Returning 'get_all_nodes': ['path:bvu00740:95', 'path:bvu00740:92', 'path:bvu00740:90', 'path:bvu00740:89', 'path:bvu00740:88', 'path:bvu00740:85', 'path:bvu00740:84', 'path:bvu00740:83', 'path:bvu00740:82', 'path:bvu00740:81', 'path:bvu00740:80', 'path:bvu00740:79', 'path:bvu00740:78', 'path:bvu00740:76', 'path:bvu00740:74', 'path:bvu00740:73', 'path:bvu00740:72', 'path:bvu00740:70', 'path:bvu00740:69', 'path:bvu00740:68', 'path:bvu00740:67', 'path:bvu00740:66', 'path:bvu00740:64', 'path:bvu00740:63', 'path:bvu00740:62', 'path:bvu00740:58', 'path:bvu00740:56', 'path:bvu00740:55', 'path:bvu00740:52', 'path:bvu00740:51', 'path:bvu00740:49', 'path:bvu00740:48', 'path:bvu00740:47', 'path:bvu00740:46', 'path:bvu00740:45', 'path:bvu00740:44', 'path:bvu00740:43', 'path:bvu00740:42', 'path:bvu00740:41', 'path:bvu00740:40', 'path:bvu00740:39', 'path:bvu00740:36', 'path:bvu00740:19', 'path:bvu00740:18', 'path:bvu00740:17', 'path:bvu00740:16', 'path:bvu00740:15', 'path:bvu00740:14', 'path:bvu00740:13', 'path:bvu00740:12', 'path:bvu00740:11', 'path:bvu00740:10', 'path:bvu00740:5', 'path:bvu00740:4', 'path:bvu00740:99', 'path:bvu00740:98', 'path:bvu00740:97']
2025-03-06 14:35:39,403 [DEBUG] py4...: --------------------
2025-03-06 14:35:41,094 [DEBUG] py4...: Calling get_all_nodes(71648)
2025-03-06 14:35:41,095 [DEBUG] py4...: ǀCalling get_network_suid(71648, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:41,095 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:41,095 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:35:41,102 [DEBUG] py4...: ǀǀOK[200], content: [71648,71178,71882,71388,72268]
2025-03-06 14:35:41,102 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [71648, 71178, 71882, 71388, 72268]
2025-03-06 14:35:41,102 [DEBUG] py4...: ǀReturning 'get_network_suid': 71648
2025-03-06 14:35:41,102 [DEBUG] py4...: ǀCalling get_node_count(71648, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:41,102 [DEBUG] py4...: ǀǀCalling get_network_suid(71648, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:41,102 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:41,102 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:35:41,112 [DEBUG] py4...: ǀǀǀOK[200], content: [71648,71178,71882,71388,72268]
2025-03-06 14:35:41,112 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [71648, 71178, 71882, 71388, 72268]
2025-03-06 14:35:41,112 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 71648
2025-03-06 14:35:41,112 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/71648/nodes/count', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:41,112 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/71648/nodes/count)
2025-03-06 14:35:41,124 [DEBUG] py4...: ǀǀOK[200], content: {"count":57}
2025-03-06 14:35:41,124 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'count': 57}
2025-03-06 14:35:41,124 [DEBUG] py4...: ǀReturning 'get_node_count': 57
2025-03-06 14:35:41,124 [DEBUG] py4...: ǀCalling cyrest_get('networks/71648/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:35:41,124 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/71648/tables/defaultnode/columns/name)
2025-03-06 14:35:41,128 [DEBUG] py4...: ǀOK[200], content: {"name":"name","values":["path:bvu00740:95","path:bvu00740:92","path:bvu00740:90","path:bvu00740:89","path:bvu00740:88","path:bvu00740:85","path:bvu00740:84","path:bvu00740:83","path:bvu00740:82","path:bvu00740:81","path:bvu00740:80","path:bvu00740:79","path:bvu00740:78","path:bvu00740:76","path:bvu00740:74","path:bvu00740:73","path:bvu00740:72","path:bvu00740:70","path:bvu00740:69","path:bvu00740:68","path:bvu00740:67","path:bvu00740:66","path:bvu00740:64","path:bvu00740:63","path:bvu00740:62","path:bvu00740:58","path:bvu00740:56","path:bvu00740:55","path:bvu00740:52","path:bvu00740:51","path:bvu00740:49","path:bvu00740:48","path:bvu00740:47","path:bvu00740:46","path:bvu00740:45","path:bvu00740:44","path:bvu00740:43","path:bvu00740:42","path:bvu00740:41","path:bvu00740:40","path:bvu00740:39","path:bvu00740:36","path:bvu00740:19","path:bvu00740:18","path:bvu00740:17","path:bvu00740:16","path:bvu00740:15","path:bvu00740:14","path:bvu00740:13","path:bvu00740:12","path:bvu00740:11","path:bvu00740:10","path:bvu00740:5","path:bvu00740:4","path:bvu00740:99","path:bvu00740:98","path:bvu00740:97"]}
2025-03-06 14:35:41,129 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'name', 'values': ['path:bvu00740:95', 'path:bvu00740:92', 'path:bvu00740:90', 'path:bvu00740:89', 'path:bvu00740:88', 'path:bvu00740:85', 'path:bvu00740:84', 'path:bvu00740:83', 'path:bvu00740:82', 'path:bvu00740:81', 'path:bvu00740:80', 'path:bvu00740:79', 'path:bvu00740:78', 'path:bvu00740:76', 'path:bvu00740:74', 'path:bvu00740:73', 'path:bvu00740:72', 'path:bvu00740:70', 'path:bvu00740:69', 'path:bvu00740:68', 'path:bvu00740:67', 'path:bvu00740:66', 'path:bvu00740:64', 'path:bvu00740:63', 'path:bvu00740:62', 'path:bvu00740:58', 'path:bvu00740:56', 'path:bvu00740:55', 'path:bvu00740:52', 'path:bvu00740:51', 'path:bvu00740:49', 'path:bvu00740:48', 'path:bvu00740:47', 'path:bvu00740:46', 'path:bvu00740:45', 'path:bvu00740:44', 'path:bvu00740:43', 'path:bvu00740:42', 'path:bvu00740:41', 'path:bvu00740:40', 'path:bvu00740:39', 'path:bvu00740:36', 'path:bvu00740:19', 'path:bvu00740:18', 'path:bvu00740:17', 'path:bvu00740:16', 'path:bvu00740:15', 'path:bvu00740:14', 'path:bvu00740:13', 'path:bvu00740:12', 'path:bvu00740:11', 'path:bvu00740:10', 'path:bvu00740:5', 'path:bvu00740:4', 'path:bvu00740:99', 'path:bvu00740:98', 'path:bvu00740:97']}
2025-03-06 14:35:41,129 [DEBUG] py4...: Returning 'get_all_nodes': ['path:bvu00740:95', 'path:bvu00740:92', 'path:bvu00740:90', 'path:bvu00740:89', 'path:bvu00740:88', 'path:bvu00740:85', 'path:bvu00740:84', 'path:bvu00740:83', 'path:bvu00740:82', 'path:bvu00740:81', 'path:bvu00740:80', 'path:bvu00740:79', 'path:bvu00740:78', 'path:bvu00740:76', 'path:bvu00740:74', 'path:bvu00740:73', 'path:bvu00740:72', 'path:bvu00740:70', 'path:bvu00740:69', 'path:bvu00740:68', 'path:bvu00740:67', 'path:bvu00740:66', 'path:bvu00740:64', 'path:bvu00740:63', 'path:bvu00740:62', 'path:bvu00740:58', 'path:bvu00740:56', 'path:bvu00740:55', 'path:bvu00740:52', 'path:bvu00740:51', 'path:bvu00740:49', 'path:bvu00740:48', 'path:bvu00740:47', 'path:bvu00740:46', 'path:bvu00740:45', 'path:bvu00740:44', 'path:bvu00740:43', 'path:bvu00740:42', 'path:bvu00740:41', 'path:bvu00740:40', 'path:bvu00740:39', 'path:bvu00740:36', 'path:bvu00740:19', 'path:bvu00740:18', 'path:bvu00740:17', 'path:bvu00740:16', 'path:bvu00740:15', 'path:bvu00740:14', 'path:bvu00740:13', 'path:bvu00740:12', 'path:bvu00740:11', 'path:bvu00740:10', 'path:bvu00740:5', 'path:bvu00740:4', 'path:bvu00740:99', 'path:bvu00740:98', 'path:bvu00740:97']
2025-03-06 14:35:41,129 [DEBUG] py4...: --------------------
2025-03-06 14:36:21,589 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_13.cys')
2025-03-06 14:36:21,591 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_13.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:21,591 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_13.cys'}
2025-03-06 14:36:22,675 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:36:22,675 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:36:22,676 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:36:22,676 [DEBUG] py4...: --------------------
2025-03-06 14:36:22,676 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:36:22,676 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:22,676 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:22,680 [DEBUG] py4...: ǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":78449},{"name":"One carbon pool by folate [bvu00670]","SUID":78885},{"name":"Porphyrin metabolism [bvu00860]","SUID":77693},{"name":"Lipoic acid metabolism [bvu00785]","SUID":79293},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":79599}]
2025-03-06 14:36:22,681 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 78449}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 78885}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 77693}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 79293}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 79599}]
2025-03-06 14:36:22,681 [DEBUG] py4...: Returning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]']
2025-03-06 14:36:22,681 [DEBUG] py4...: --------------------
2025-03-06 14:36:22,681 [DEBUG] py4...: Calling get_network_suid('Folate biosynthesis [bvu00790]')
2025-03-06 14:36:22,681 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:22,681 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:22,681 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:22,687 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":78449},{"name":"One carbon pool by folate [bvu00670]","SUID":78885},{"name":"Porphyrin metabolism [bvu00860]","SUID":77693},{"name":"Lipoic acid metabolism [bvu00785]","SUID":79293},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":79599}]
2025-03-06 14:36:22,687 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 78449}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 78885}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 77693}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 79293}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 79599}]
2025-03-06 14:36:22,687 [DEBUG] py4...: ǀReturning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]']
2025-03-06 14:36:22,687 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Folate biosynthesis [bvu00790]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:22,687 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Folate biosynthesis [bvu00790]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:22,692 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 78449
}
],
 "errors":[]
}
2025-03-06 14:36:22,692 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 78449}]
2025-03-06 14:36:22,693 [DEBUG] py4...: Returning 'get_network_suid': 78449
2025-03-06 14:36:22,693 [DEBUG] py4...: --------------------
2025-03-06 14:36:22,693 [DEBUG] py4...: Calling get_network_suid('One carbon pool by folate [bvu00670]')
2025-03-06 14:36:22,693 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:22,693 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:22,693 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:22,698 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":78449},{"name":"One carbon pool by folate [bvu00670]","SUID":78885},{"name":"Porphyrin metabolism [bvu00860]","SUID":77693},{"name":"Lipoic acid metabolism [bvu00785]","SUID":79293},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":79599}]
2025-03-06 14:36:22,698 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 78449}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 78885}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 77693}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 79293}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 79599}]
2025-03-06 14:36:22,698 [DEBUG] py4...: ǀReturning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]']
2025-03-06 14:36:22,698 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="One carbon pool by folate [bvu00670]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:22,698 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'One carbon pool by folate [bvu00670]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:22,703 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 78885
}
],
 "errors":[]
}
2025-03-06 14:36:22,704 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 78885}]
2025-03-06 14:36:22,704 [DEBUG] py4...: Returning 'get_network_suid': 78885
2025-03-06 14:36:22,704 [DEBUG] py4...: --------------------
2025-03-06 14:36:22,704 [DEBUG] py4...: Calling get_network_suid('Porphyrin metabolism [bvu00860]')
2025-03-06 14:36:22,704 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:22,704 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:22,704 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:22,707 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":78449},{"name":"One carbon pool by folate [bvu00670]","SUID":78885},{"name":"Porphyrin metabolism [bvu00860]","SUID":77693},{"name":"Lipoic acid metabolism [bvu00785]","SUID":79293},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":79599}]
2025-03-06 14:36:22,708 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 78449}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 78885}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 77693}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 79293}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 79599}]
2025-03-06 14:36:22,708 [DEBUG] py4...: ǀReturning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]']
2025-03-06 14:36:22,708 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Porphyrin metabolism [bvu00860]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:22,708 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Porphyrin metabolism [bvu00860]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:22,712 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 77693
}
],
 "errors":[]
}
2025-03-06 14:36:22,712 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 77693}]
2025-03-06 14:36:22,713 [DEBUG] py4...: Returning 'get_network_suid': 77693
2025-03-06 14:36:22,713 [DEBUG] py4...: --------------------
2025-03-06 14:36:22,713 [DEBUG] py4...: Calling get_network_suid('Lipoic acid metabolism [bvu00785]')
2025-03-06 14:36:22,713 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:22,713 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:22,713 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:22,716 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":78449},{"name":"One carbon pool by folate [bvu00670]","SUID":78885},{"name":"Porphyrin metabolism [bvu00860]","SUID":77693},{"name":"Lipoic acid metabolism [bvu00785]","SUID":79293},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":79599}]
2025-03-06 14:36:22,716 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 78449}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 78885}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 77693}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 79293}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 79599}]
2025-03-06 14:36:22,716 [DEBUG] py4...: ǀReturning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]']
2025-03-06 14:36:22,716 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Lipoic acid metabolism [bvu00785]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:22,716 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Lipoic acid metabolism [bvu00785]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:22,720 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 79293
}
],
 "errors":[]
}
2025-03-06 14:36:22,721 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 79293}]
2025-03-06 14:36:22,721 [DEBUG] py4...: Returning 'get_network_suid': 79293
2025-03-06 14:36:22,721 [DEBUG] py4...: --------------------
2025-03-06 14:36:22,721 [DEBUG] py4...: Calling get_network_suid('Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]')
2025-03-06 14:36:22,721 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:22,721 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:22,721 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:22,724 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Folate biosynthesis [bvu00790]","SUID":78449},{"name":"One carbon pool by folate [bvu00670]","SUID":78885},{"name":"Porphyrin metabolism [bvu00860]","SUID":77693},{"name":"Lipoic acid metabolism [bvu00785]","SUID":79293},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":79599}]
2025-03-06 14:36:22,724 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Folate biosynthesis [bvu00790]', 'SUID': 78449}, {'name': 'One carbon pool by folate [bvu00670]', 'SUID': 78885}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 77693}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 79293}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 79599}]
2025-03-06 14:36:22,724 [DEBUG] py4...: ǀReturning 'get_network_list': ['Folate biosynthesis [bvu00790]', 'One carbon pool by folate [bvu00670]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]']
2025-03-06 14:36:22,724 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:22,724 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:22,728 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 79599
}
],
 "errors":[]
}
2025-03-06 14:36:22,728 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 79599}]
2025-03-06 14:36:22,728 [DEBUG] py4...: Returning 'get_network_suid': 79599
2025-03-06 14:36:22,728 [DEBUG] py4...: --------------------
2025-03-06 14:36:25,831 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_11.cys')
2025-03-06 14:36:25,832 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_11.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:25,832 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_11.cys'}
2025-03-06 14:36:26,679 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:36:26,681 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:36:26,681 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:36:26,681 [DEBUG] py4...: --------------------
2025-03-06 14:36:26,681 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:36:26,681 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,682 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:26,688 [DEBUG] py4...: ǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":88864},{"name":"Thiamine metabolism [bvu00730]","SUID":89204},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":89860},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":90534},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":89470}]
2025-03-06 14:36:26,688 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 88864}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 89204}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 89860}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 90534}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 89470}]
2025-03-06 14:36:26,688 [DEBUG] py4...: Returning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 14:36:26,688 [DEBUG] py4...: --------------------
2025-03-06 14:36:26,689 [DEBUG] py4...: Calling get_network_suid('Peptidoglycan biosynthesis [bvu00550]')
2025-03-06 14:36:26,689 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,689 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,689 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:26,696 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":88864},{"name":"Thiamine metabolism [bvu00730]","SUID":89204},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":89860},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":90534},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":89470}]
2025-03-06 14:36:26,697 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 88864}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 89204}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 89860}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 90534}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 89470}]
2025-03-06 14:36:26,697 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 14:36:26,697 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Peptidoglycan biosynthesis [bvu00550]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,698 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Peptidoglycan biosynthesis [bvu00550]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:26,724 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 88864
}
],
 "errors":[]
}
2025-03-06 14:36:26,724 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 88864}]
2025-03-06 14:36:26,724 [DEBUG] py4...: Returning 'get_network_suid': 88864
2025-03-06 14:36:26,724 [DEBUG] py4...: --------------------
2025-03-06 14:36:26,724 [DEBUG] py4...: Calling get_network_suid('Thiamine metabolism [bvu00730]')
2025-03-06 14:36:26,724 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,724 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,724 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:26,728 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":88864},{"name":"Thiamine metabolism [bvu00730]","SUID":89204},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":89860},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":90534},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":89470}]
2025-03-06 14:36:26,728 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 88864}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 89204}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 89860}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 90534}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 89470}]
2025-03-06 14:36:26,728 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 14:36:26,728 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Thiamine metabolism [bvu00730]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,728 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Thiamine metabolism [bvu00730]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:26,732 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 89204
}
],
 "errors":[]
}
2025-03-06 14:36:26,732 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 89204}]
2025-03-06 14:36:26,732 [DEBUG] py4...: Returning 'get_network_suid': 89204
2025-03-06 14:36:26,732 [DEBUG] py4...: --------------------
2025-03-06 14:36:26,732 [DEBUG] py4...: Calling get_network_suid('Biosynthesis of various nucleotide sugars [bvu00541]')
2025-03-06 14:36:26,732 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,732 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,732 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:26,741 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":88864},{"name":"Thiamine metabolism [bvu00730]","SUID":89204},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":89860},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":90534},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":89470}]
2025-03-06 14:36:26,741 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 88864}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 89204}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 89860}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 90534}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 89470}]
2025-03-06 14:36:26,741 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 14:36:26,742 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biosynthesis of various nucleotide sugars [bvu00541]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,742 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:26,746 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 89860
}
],
 "errors":[]
}
2025-03-06 14:36:26,747 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 89860}]
2025-03-06 14:36:26,747 [DEBUG] py4...: Returning 'get_network_suid': 89860
2025-03-06 14:36:26,747 [DEBUG] py4...: --------------------
2025-03-06 14:36:26,747 [DEBUG] py4...: Calling get_network_suid('Teichoic acid biosynthesis [bvu00552]')
2025-03-06 14:36:26,747 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,747 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,747 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:26,752 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":88864},{"name":"Thiamine metabolism [bvu00730]","SUID":89204},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":89860},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":90534},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":89470}]
2025-03-06 14:36:26,752 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 88864}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 89204}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 89860}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 90534}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 89470}]
2025-03-06 14:36:26,752 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 14:36:26,752 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Teichoic acid biosynthesis [bvu00552]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,752 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Teichoic acid biosynthesis [bvu00552]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:26,757 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 90534
}
],
 "errors":[]
}
2025-03-06 14:36:26,757 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 90534}]
2025-03-06 14:36:26,757 [DEBUG] py4...: Returning 'get_network_suid': 90534
2025-03-06 14:36:26,757 [DEBUG] py4...: --------------------
2025-03-06 14:36:26,757 [DEBUG] py4...: Calling get_network_suid('Exopolysaccharide biosynthesis [bvu00543]')
2025-03-06 14:36:26,757 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,757 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,757 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:26,762 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":88864},{"name":"Thiamine metabolism [bvu00730]","SUID":89204},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":89860},{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":90534},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":89470}]
2025-03-06 14:36:26,762 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 88864}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 89204}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 89860}, {'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 90534}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 89470}]
2025-03-06 14:36:26,762 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peptidoglycan biosynthesis [bvu00550]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Teichoic acid biosynthesis [bvu00552]', 'Exopolysaccharide biosynthesis [bvu00543]']
2025-03-06 14:36:26,762 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Exopolysaccharide biosynthesis [bvu00543]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,762 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Exopolysaccharide biosynthesis [bvu00543]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:26,767 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 89470
}
],
 "errors":[]
}
2025-03-06 14:36:26,767 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 89470}]
2025-03-06 14:36:26,767 [DEBUG] py4...: Returning 'get_network_suid': 89470
2025-03-06 14:36:26,767 [DEBUG] py4...: --------------------
2025-03-06 14:36:26,767 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_10.cys')
2025-03-06 14:36:26,768 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:26,768 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys'}
2025-03-06 14:36:27,779 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:36:27,779 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:36:27,779 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:36:27,779 [DEBUG] py4...: --------------------
2025-03-06 14:36:27,779 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:36:27,780 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:27,780 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:27,783 [DEBUG] py4...: ǀOK[200], content: [{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":99186},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":99746},{"name":"D-Amino acid metabolism [bvu00470]","SUID":100434},{"name":"Other glycan degradation [bvu00511]","SUID":100790},{"name":"Glutathione metabolism [bvu00480]","SUID":100124}]
2025-03-06 14:36:27,783 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 99186}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 99746}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 100434}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 100790}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 100124}]
2025-03-06 14:36:27,783 [DEBUG] py4...: Returning 'get_network_list': ['Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]']
2025-03-06 14:36:27,783 [DEBUG] py4...: --------------------
2025-03-06 14:36:27,783 [DEBUG] py4...: Calling get_network_suid('Amino sugar and nucleotide sugar metabolism [bvu00520]')
2025-03-06 14:36:27,783 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:27,783 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:27,783 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:27,786 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":99186},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":99746},{"name":"D-Amino acid metabolism [bvu00470]","SUID":100434},{"name":"Other glycan degradation [bvu00511]","SUID":100790},{"name":"Glutathione metabolism [bvu00480]","SUID":100124}]
2025-03-06 14:36:27,787 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 99186}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 99746}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 100434}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 100790}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 100124}]
2025-03-06 14:36:27,787 [DEBUG] py4...: ǀReturning 'get_network_list': ['Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]']
2025-03-06 14:36:27,787 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Amino sugar and nucleotide sugar metabolism [bvu00520]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:27,787 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:27,790 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 99186
}
],
 "errors":[]
}
2025-03-06 14:36:27,791 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 99186}]
2025-03-06 14:36:27,791 [DEBUG] py4...: Returning 'get_network_suid': 99186
2025-03-06 14:36:27,791 [DEBUG] py4...: --------------------
2025-03-06 14:36:27,791 [DEBUG] py4...: Calling get_network_suid('Lipopolysaccharide biosynthesis [bvu00540]')
2025-03-06 14:36:27,791 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:27,791 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:27,791 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:27,794 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":99186},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":99746},{"name":"D-Amino acid metabolism [bvu00470]","SUID":100434},{"name":"Other glycan degradation [bvu00511]","SUID":100790},{"name":"Glutathione metabolism [bvu00480]","SUID":100124}]
2025-03-06 14:36:27,795 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 99186}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 99746}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 100434}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 100790}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 100124}]
2025-03-06 14:36:27,795 [DEBUG] py4...: ǀReturning 'get_network_list': ['Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]']
2025-03-06 14:36:27,795 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Lipopolysaccharide biosynthesis [bvu00540]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:27,795 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Lipopolysaccharide biosynthesis [bvu00540]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:27,799 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 99746
}
],
 "errors":[]
}
2025-03-06 14:36:27,799 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 99746}]
2025-03-06 14:36:27,799 [DEBUG] py4...: Returning 'get_network_suid': 99746
2025-03-06 14:36:27,799 [DEBUG] py4...: --------------------
2025-03-06 14:36:27,800 [DEBUG] py4...: Calling get_network_suid('D-Amino acid metabolism [bvu00470]')
2025-03-06 14:36:27,800 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:27,800 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:27,800 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:27,803 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":99186},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":99746},{"name":"D-Amino acid metabolism [bvu00470]","SUID":100434},{"name":"Other glycan degradation [bvu00511]","SUID":100790},{"name":"Glutathione metabolism [bvu00480]","SUID":100124}]
2025-03-06 14:36:27,803 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 99186}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 99746}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 100434}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 100790}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 100124}]
2025-03-06 14:36:27,803 [DEBUG] py4...: ǀReturning 'get_network_list': ['Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]']
2025-03-06 14:36:27,803 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="D-Amino acid metabolism [bvu00470]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:27,803 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'D-Amino acid metabolism [bvu00470]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:27,807 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 100434
}
],
 "errors":[]
}
2025-03-06 14:36:27,807 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 100434}]
2025-03-06 14:36:27,807 [DEBUG] py4...: Returning 'get_network_suid': 100434
2025-03-06 14:36:27,807 [DEBUG] py4...: --------------------
2025-03-06 14:36:27,807 [DEBUG] py4...: Calling get_network_suid('Other glycan degradation [bvu00511]')
2025-03-06 14:36:27,808 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:27,808 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:27,808 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:27,811 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":99186},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":99746},{"name":"D-Amino acid metabolism [bvu00470]","SUID":100434},{"name":"Other glycan degradation [bvu00511]","SUID":100790},{"name":"Glutathione metabolism [bvu00480]","SUID":100124}]
2025-03-06 14:36:27,811 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 99186}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 99746}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 100434}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 100790}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 100124}]
2025-03-06 14:36:27,811 [DEBUG] py4...: ǀReturning 'get_network_list': ['Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]']
2025-03-06 14:36:27,811 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Other glycan degradation [bvu00511]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:27,811 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Other glycan degradation [bvu00511]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:27,815 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 100790
}
],
 "errors":[]
}
2025-03-06 14:36:27,815 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 100790}]
2025-03-06 14:36:27,815 [DEBUG] py4...: Returning 'get_network_suid': 100790
2025-03-06 14:36:27,815 [DEBUG] py4...: --------------------
2025-03-06 14:36:27,815 [DEBUG] py4...: Calling get_network_suid('Glutathione metabolism [bvu00480]')
2025-03-06 14:36:27,815 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:27,815 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:27,815 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:27,818 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":99186},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":99746},{"name":"D-Amino acid metabolism [bvu00470]","SUID":100434},{"name":"Other glycan degradation [bvu00511]","SUID":100790},{"name":"Glutathione metabolism [bvu00480]","SUID":100124}]
2025-03-06 14:36:27,818 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 99186}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 99746}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 100434}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 100790}, {'name': 'Glutathione metabolism [bvu00480]', 'SUID': 100124}]
2025-03-06 14:36:27,818 [DEBUG] py4...: ǀReturning 'get_network_list': ['Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]', 'Glutathione metabolism [bvu00480]']
2025-03-06 14:36:27,819 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glutathione metabolism [bvu00480]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:27,819 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glutathione metabolism [bvu00480]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:27,822 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 100124
}
],
 "errors":[]
}
2025-03-06 14:36:27,823 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 100124}]
2025-03-06 14:36:27,823 [DEBUG] py4...: Returning 'get_network_suid': 100124
2025-03-06 14:36:27,823 [DEBUG] py4...: --------------------
2025-03-06 14:36:34,234 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_14.cys')
2025-03-06 14:36:34,235 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_14.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,235 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_14.cys'}
2025-03-06 14:36:34,918 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:36:34,918 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:36:34,918 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:36:34,918 [DEBUG] py4...: --------------------
2025-03-06 14:36:34,918 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:36:34,919 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,919 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:34,923 [DEBUG] py4...: ǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":108596},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":107942},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":108278},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":107546},{"name":"Monobactam biosynthesis [bvu00261]","SUID":107726}]
2025-03-06 14:36:34,923 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 108596}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 107942}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 108278}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 107546}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 107726}]
2025-03-06 14:36:34,923 [DEBUG] py4...: Returning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 14:36:34,923 [DEBUG] py4...: --------------------
2025-03-06 14:36:34,924 [DEBUG] py4...: Calling get_network_suid('Degradation of flavonoids [bvu00946]')
2025-03-06 14:36:34,924 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,924 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,924 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:34,928 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":108596},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":107942},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":108278},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":107546},{"name":"Monobactam biosynthesis [bvu00261]","SUID":107726}]
2025-03-06 14:36:34,929 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 108596}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 107942}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 108278}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 107546}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 107726}]
2025-03-06 14:36:34,929 [DEBUG] py4...: ǀReturning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 14:36:34,929 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Degradation of flavonoids [bvu00946]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,929 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Degradation of flavonoids [bvu00946]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:34,934 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 108596
}
],
 "errors":[]
}
2025-03-06 14:36:34,934 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 108596}]
2025-03-06 14:36:34,935 [DEBUG] py4...: Returning 'get_network_suid': 108596
2025-03-06 14:36:34,935 [DEBUG] py4...: --------------------
2025-03-06 14:36:34,935 [DEBUG] py4...: Calling get_network_suid('Terpenoid backbone biosynthesis [bvu00900]')
2025-03-06 14:36:34,935 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,935 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,935 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:34,941 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":108596},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":107942},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":108278},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":107546},{"name":"Monobactam biosynthesis [bvu00261]","SUID":107726}]
2025-03-06 14:36:34,942 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 108596}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 107942}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 108278}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 107546}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 107726}]
2025-03-06 14:36:34,942 [DEBUG] py4...: ǀReturning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 14:36:34,942 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Terpenoid backbone biosynthesis [bvu00900]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,942 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Terpenoid backbone biosynthesis [bvu00900]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:34,947 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 107942
}
],
 "errors":[]
}
2025-03-06 14:36:34,948 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 107942}]
2025-03-06 14:36:34,948 [DEBUG] py4...: Returning 'get_network_suid': 107942
2025-03-06 14:36:34,948 [DEBUG] py4...: --------------------
2025-03-06 14:36:34,948 [DEBUG] py4...: Calling get_network_suid('Polyketide sugar unit biosynthesis [bvu00523]')
2025-03-06 14:36:34,948 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,948 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,948 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:34,953 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":108596},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":107942},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":108278},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":107546},{"name":"Monobactam biosynthesis [bvu00261]","SUID":107726}]
2025-03-06 14:36:34,954 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 108596}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 107942}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 108278}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 107546}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 107726}]
2025-03-06 14:36:34,954 [DEBUG] py4...: ǀReturning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 14:36:34,954 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Polyketide sugar unit biosynthesis [bvu00523]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,954 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Polyketide sugar unit biosynthesis [bvu00523]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:34,958 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 108278
}
],
 "errors":[]
}
2025-03-06 14:36:34,958 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 108278}]
2025-03-06 14:36:34,958 [DEBUG] py4...: Returning 'get_network_suid': 108278
2025-03-06 14:36:34,958 [DEBUG] py4...: --------------------
2025-03-06 14:36:34,958 [DEBUG] py4...: Calling get_network_suid('Carbapenem biosynthesis [bvu00332]')
2025-03-06 14:36:34,958 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,958 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,958 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:34,961 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":108596},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":107942},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":108278},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":107546},{"name":"Monobactam biosynthesis [bvu00261]","SUID":107726}]
2025-03-06 14:36:34,961 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 108596}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 107942}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 108278}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 107546}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 107726}]
2025-03-06 14:36:34,961 [DEBUG] py4...: ǀReturning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 14:36:34,961 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Carbapenem biosynthesis [bvu00332]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,961 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Carbapenem biosynthesis [bvu00332]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:34,965 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 107546
}
],
 "errors":[]
}
2025-03-06 14:36:34,965 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 107546}]
2025-03-06 14:36:34,965 [DEBUG] py4...: Returning 'get_network_suid': 107546
2025-03-06 14:36:34,965 [DEBUG] py4...: --------------------
2025-03-06 14:36:34,965 [DEBUG] py4...: Calling get_network_suid('Monobactam biosynthesis [bvu00261]')
2025-03-06 14:36:34,965 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,965 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,965 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:34,968 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Degradation of flavonoids [bvu00946]","SUID":108596},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":107942},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":108278},{"name":"Carbapenem biosynthesis [bvu00332]","SUID":107546},{"name":"Monobactam biosynthesis [bvu00261]","SUID":107726}]
2025-03-06 14:36:34,968 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 108596}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 107942}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 108278}, {'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 107546}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 107726}]
2025-03-06 14:36:34,968 [DEBUG] py4...: ǀReturning 'get_network_list': ['Degradation of flavonoids [bvu00946]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]']
2025-03-06 14:36:34,968 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Monobactam biosynthesis [bvu00261]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:34,968 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Monobactam biosynthesis [bvu00261]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:34,972 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 107726
}
],
 "errors":[]
}
2025-03-06 14:36:34,972 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 107726}]
2025-03-06 14:36:34,972 [DEBUG] py4...: Returning 'get_network_suid': 107726
2025-03-06 14:36:34,972 [DEBUG] py4...: --------------------
2025-03-06 14:36:36,082 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_15.cys')
2025-03-06 14:36:36,083 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_15.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,083 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_15.cys'}
2025-03-06 14:36:36,826 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:36:36,826 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:36:36,826 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:36:36,827 [DEBUG] py4...: --------------------
2025-03-06 14:36:36,827 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:36:36,827 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,827 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:36,832 [DEBUG] py4...: ǀOK[200], content: [{"name":"Streptomycin biosynthesis [bvu00521]","SUID":114369},{"name":"Novobiocin biosynthesis [bvu00401]","SUID":114549},{"name":"Benzoate degradation [bvu00362]","SUID":113963},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":114763},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":113757}]
2025-03-06 14:36:36,832 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 114369}, {'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 114549}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 113963}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 114763}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 113757}]
2025-03-06 14:36:36,832 [DEBUG] py4...: Returning 'get_network_list': ['Streptomycin biosynthesis [bvu00521]', 'Novobiocin biosynthesis [bvu00401]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Acarbose and validamycin biosynthesis [bvu00525]']
2025-03-06 14:36:36,832 [DEBUG] py4...: --------------------
2025-03-06 14:36:36,832 [DEBUG] py4...: Calling get_network_suid('Streptomycin biosynthesis [bvu00521]')
2025-03-06 14:36:36,832 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,832 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,832 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:36,838 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Streptomycin biosynthesis [bvu00521]","SUID":114369},{"name":"Novobiocin biosynthesis [bvu00401]","SUID":114549},{"name":"Benzoate degradation [bvu00362]","SUID":113963},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":114763},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":113757}]
2025-03-06 14:36:36,838 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 114369}, {'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 114549}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 113963}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 114763}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 113757}]
2025-03-06 14:36:36,838 [DEBUG] py4...: ǀReturning 'get_network_list': ['Streptomycin biosynthesis [bvu00521]', 'Novobiocin biosynthesis [bvu00401]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Acarbose and validamycin biosynthesis [bvu00525]']
2025-03-06 14:36:36,838 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Streptomycin biosynthesis [bvu00521]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,838 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Streptomycin biosynthesis [bvu00521]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:36,842 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 114369
}
],
 "errors":[]
}
2025-03-06 14:36:36,843 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 114369}]
2025-03-06 14:36:36,843 [DEBUG] py4...: Returning 'get_network_suid': 114369
2025-03-06 14:36:36,843 [DEBUG] py4...: --------------------
2025-03-06 14:36:36,843 [DEBUG] py4...: Calling get_network_suid('Novobiocin biosynthesis [bvu00401]')
2025-03-06 14:36:36,843 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,843 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,843 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:36,847 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Streptomycin biosynthesis [bvu00521]","SUID":114369},{"name":"Novobiocin biosynthesis [bvu00401]","SUID":114549},{"name":"Benzoate degradation [bvu00362]","SUID":113963},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":114763},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":113757}]
2025-03-06 14:36:36,847 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 114369}, {'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 114549}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 113963}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 114763}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 113757}]
2025-03-06 14:36:36,847 [DEBUG] py4...: ǀReturning 'get_network_list': ['Streptomycin biosynthesis [bvu00521]', 'Novobiocin biosynthesis [bvu00401]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Acarbose and validamycin biosynthesis [bvu00525]']
2025-03-06 14:36:36,847 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Novobiocin biosynthesis [bvu00401]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,847 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Novobiocin biosynthesis [bvu00401]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:36,851 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 114549
}
],
 "errors":[]
}
2025-03-06 14:36:36,851 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 114549}]
2025-03-06 14:36:36,851 [DEBUG] py4...: Returning 'get_network_suid': 114549
2025-03-06 14:36:36,851 [DEBUG] py4...: --------------------
2025-03-06 14:36:36,851 [DEBUG] py4...: Calling get_network_suid('Benzoate degradation [bvu00362]')
2025-03-06 14:36:36,851 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,851 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,851 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:36,854 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Streptomycin biosynthesis [bvu00521]","SUID":114369},{"name":"Novobiocin biosynthesis [bvu00401]","SUID":114549},{"name":"Benzoate degradation [bvu00362]","SUID":113963},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":114763},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":113757}]
2025-03-06 14:36:36,855 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 114369}, {'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 114549}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 113963}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 114763}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 113757}]
2025-03-06 14:36:36,855 [DEBUG] py4...: ǀReturning 'get_network_list': ['Streptomycin biosynthesis [bvu00521]', 'Novobiocin biosynthesis [bvu00401]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Acarbose and validamycin biosynthesis [bvu00525]']
2025-03-06 14:36:36,855 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Benzoate degradation [bvu00362]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,855 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Benzoate degradation [bvu00362]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:36,859 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 113963
}
],
 "errors":[]
}
2025-03-06 14:36:36,859 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 113963}]
2025-03-06 14:36:36,859 [DEBUG] py4...: Returning 'get_network_suid': 113963
2025-03-06 14:36:36,859 [DEBUG] py4...: --------------------
2025-03-06 14:36:36,859 [DEBUG] py4...: Calling get_network_suid('Biosynthesis of various plant secondary metabolites [bvu00999]')
2025-03-06 14:36:36,859 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,859 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,859 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:36,862 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Streptomycin biosynthesis [bvu00521]","SUID":114369},{"name":"Novobiocin biosynthesis [bvu00401]","SUID":114549},{"name":"Benzoate degradation [bvu00362]","SUID":113963},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":114763},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":113757}]
2025-03-06 14:36:36,862 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 114369}, {'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 114549}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 113963}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 114763}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 113757}]
2025-03-06 14:36:36,862 [DEBUG] py4...: ǀReturning 'get_network_list': ['Streptomycin biosynthesis [bvu00521]', 'Novobiocin biosynthesis [bvu00401]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Acarbose and validamycin biosynthesis [bvu00525]']
2025-03-06 14:36:36,862 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biosynthesis of various plant secondary metabolites [bvu00999]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,863 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:36,866 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 114763
}
],
 "errors":[]
}
2025-03-06 14:36:36,866 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 114763}]
2025-03-06 14:36:36,866 [DEBUG] py4...: Returning 'get_network_suid': 114763
2025-03-06 14:36:36,866 [DEBUG] py4...: --------------------
2025-03-06 14:36:36,866 [DEBUG] py4...: Calling get_network_suid('Acarbose and validamycin biosynthesis [bvu00525]')
2025-03-06 14:36:36,867 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,867 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,867 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:36,871 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Streptomycin biosynthesis [bvu00521]","SUID":114369},{"name":"Novobiocin biosynthesis [bvu00401]","SUID":114549},{"name":"Benzoate degradation [bvu00362]","SUID":113963},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":114763},{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":113757}]
2025-03-06 14:36:36,871 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 114369}, {'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 114549}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 113963}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 114763}, {'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 113757}]
2025-03-06 14:36:36,871 [DEBUG] py4...: ǀReturning 'get_network_list': ['Streptomycin biosynthesis [bvu00521]', 'Novobiocin biosynthesis [bvu00401]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Acarbose and validamycin biosynthesis [bvu00525]']
2025-03-06 14:36:36,871 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Acarbose and validamycin biosynthesis [bvu00525]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:36,871 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Acarbose and validamycin biosynthesis [bvu00525]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:36,877 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 113757
}
],
 "errors":[]
}
2025-03-06 14:36:36,877 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 113757}]
2025-03-06 14:36:36,877 [DEBUG] py4...: Returning 'get_network_suid': 113757
2025-03-06 14:36:36,877 [DEBUG] py4...: --------------------
2025-03-06 14:36:42,846 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_8.cys')
2025-03-06 14:36:42,847 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_8.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:42,848 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_8.cys'}
2025-03-06 14:36:43,607 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:36:43,607 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:36:43,607 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:36:43,607 [DEBUG] py4...: --------------------
2025-03-06 14:36:43,607 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:36:43,607 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:43,607 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:43,611 [DEBUG] py4...: ǀOK[200], content: [{"name":"Arginine and proline metabolism [bvu00330]","SUID":121841},{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":121443},{"name":"Phenylalanine metabolism [bvu00360]","SUID":122323},{"name":"Histidine metabolism [bvu00340]","SUID":122631},{"name":"Tyrosine metabolism [bvu00350]","SUID":122921}]
2025-03-06 14:36:43,611 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 121841}, {'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 121443}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 122323}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 122631}, {'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 122921}]
2025-03-06 14:36:43,611 [DEBUG] py4...: Returning 'get_network_list': ['Arginine and proline metabolism [bvu00330]', 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]', 'Histidine metabolism [bvu00340]', 'Tyrosine metabolism [bvu00350]']
2025-03-06 14:36:43,611 [DEBUG] py4...: --------------------
2025-03-06 14:36:43,611 [DEBUG] py4...: Calling get_network_suid('Arginine and proline metabolism [bvu00330]')
2025-03-06 14:36:43,611 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:43,611 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:43,611 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:43,614 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Arginine and proline metabolism [bvu00330]","SUID":121841},{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":121443},{"name":"Phenylalanine metabolism [bvu00360]","SUID":122323},{"name":"Histidine metabolism [bvu00340]","SUID":122631},{"name":"Tyrosine metabolism [bvu00350]","SUID":122921}]
2025-03-06 14:36:43,615 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 121841}, {'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 121443}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 122323}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 122631}, {'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 122921}]
2025-03-06 14:36:43,615 [DEBUG] py4...: ǀReturning 'get_network_list': ['Arginine and proline metabolism [bvu00330]', 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]', 'Histidine metabolism [bvu00340]', 'Tyrosine metabolism [bvu00350]']
2025-03-06 14:36:43,615 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Arginine and proline metabolism [bvu00330]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:43,615 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Arginine and proline metabolism [bvu00330]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:43,619 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 121841
}
],
 "errors":[]
}
2025-03-06 14:36:43,619 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 121841}]
2025-03-06 14:36:43,619 [DEBUG] py4...: Returning 'get_network_suid': 121841
2025-03-06 14:36:43,619 [DEBUG] py4...: --------------------
2025-03-06 14:36:43,619 [DEBUG] py4...: Calling get_network_suid('Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]')
2025-03-06 14:36:43,619 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:43,619 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:43,619 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:43,625 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Arginine and proline metabolism [bvu00330]","SUID":121841},{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":121443},{"name":"Phenylalanine metabolism [bvu00360]","SUID":122323},{"name":"Histidine metabolism [bvu00340]","SUID":122631},{"name":"Tyrosine metabolism [bvu00350]","SUID":122921}]
2025-03-06 14:36:43,625 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 121841}, {'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 121443}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 122323}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 122631}, {'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 122921}]
2025-03-06 14:36:43,625 [DEBUG] py4...: ǀReturning 'get_network_list': ['Arginine and proline metabolism [bvu00330]', 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]', 'Histidine metabolism [bvu00340]', 'Tyrosine metabolism [bvu00350]']
2025-03-06 14:36:43,625 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:43,625 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:43,631 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 121443
}
],
 "errors":[]
}
2025-03-06 14:36:43,631 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 121443}]
2025-03-06 14:36:43,631 [DEBUG] py4...: Returning 'get_network_suid': 121443
2025-03-06 14:36:43,631 [DEBUG] py4...: --------------------
2025-03-06 14:36:43,631 [DEBUG] py4...: Calling get_network_suid('Phenylalanine metabolism [bvu00360]')
2025-03-06 14:36:43,631 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:43,631 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:43,631 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:43,637 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Arginine and proline metabolism [bvu00330]","SUID":121841},{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":121443},{"name":"Phenylalanine metabolism [bvu00360]","SUID":122323},{"name":"Histidine metabolism [bvu00340]","SUID":122631},{"name":"Tyrosine metabolism [bvu00350]","SUID":122921}]
2025-03-06 14:36:43,638 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 121841}, {'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 121443}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 122323}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 122631}, {'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 122921}]
2025-03-06 14:36:43,638 [DEBUG] py4...: ǀReturning 'get_network_list': ['Arginine and proline metabolism [bvu00330]', 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]', 'Histidine metabolism [bvu00340]', 'Tyrosine metabolism [bvu00350]']
2025-03-06 14:36:43,638 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Phenylalanine metabolism [bvu00360]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:43,638 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Phenylalanine metabolism [bvu00360]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:43,642 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 122323
}
],
 "errors":[]
}
2025-03-06 14:36:43,642 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 122323}]
2025-03-06 14:36:43,642 [DEBUG] py4...: Returning 'get_network_suid': 122323
2025-03-06 14:36:43,642 [DEBUG] py4...: --------------------
2025-03-06 14:36:43,642 [DEBUG] py4...: Calling get_network_suid('Histidine metabolism [bvu00340]')
2025-03-06 14:36:43,642 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:43,642 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:43,642 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:43,646 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Arginine and proline metabolism [bvu00330]","SUID":121841},{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":121443},{"name":"Phenylalanine metabolism [bvu00360]","SUID":122323},{"name":"Histidine metabolism [bvu00340]","SUID":122631},{"name":"Tyrosine metabolism [bvu00350]","SUID":122921}]
2025-03-06 14:36:43,646 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 121841}, {'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 121443}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 122323}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 122631}, {'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 122921}]
2025-03-06 14:36:43,646 [DEBUG] py4...: ǀReturning 'get_network_list': ['Arginine and proline metabolism [bvu00330]', 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]', 'Histidine metabolism [bvu00340]', 'Tyrosine metabolism [bvu00350]']
2025-03-06 14:36:43,646 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Histidine metabolism [bvu00340]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:43,646 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Histidine metabolism [bvu00340]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:43,650 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 122631
}
],
 "errors":[]
}
2025-03-06 14:36:43,650 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 122631}]
2025-03-06 14:36:43,650 [DEBUG] py4...: Returning 'get_network_suid': 122631
2025-03-06 14:36:43,650 [DEBUG] py4...: --------------------
2025-03-06 14:36:43,650 [DEBUG] py4...: Calling get_network_suid('Tyrosine metabolism [bvu00350]')
2025-03-06 14:36:43,650 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:43,650 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:43,650 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:43,653 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Arginine and proline metabolism [bvu00330]","SUID":121841},{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":121443},{"name":"Phenylalanine metabolism [bvu00360]","SUID":122323},{"name":"Histidine metabolism [bvu00340]","SUID":122631},{"name":"Tyrosine metabolism [bvu00350]","SUID":122921}]
2025-03-06 14:36:43,653 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 121841}, {'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 121443}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 122323}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 122631}, {'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 122921}]
2025-03-06 14:36:43,654 [DEBUG] py4...: ǀReturning 'get_network_list': ['Arginine and proline metabolism [bvu00330]', 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]', 'Histidine metabolism [bvu00340]', 'Tyrosine metabolism [bvu00350]']
2025-03-06 14:36:43,654 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Tyrosine metabolism [bvu00350]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:43,654 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Tyrosine metabolism [bvu00350]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:43,657 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 122921
}
],
 "errors":[]
}
2025-03-06 14:36:43,657 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 122921}]
2025-03-06 14:36:43,658 [DEBUG] py4...: Returning 'get_network_suid': 122921
2025-03-06 14:36:43,658 [DEBUG] py4...: --------------------
2025-03-06 14:36:44,029 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_17.cys')
2025-03-06 14:36:44,029 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_17.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,029 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_17.cys'}
2025-03-06 14:36:44,736 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:36:44,736 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:36:44,736 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:36:44,736 [DEBUG] py4...: --------------------
2025-03-06 14:36:44,736 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:36:44,736 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,737 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:44,743 [DEBUG] py4...: ǀOK[200], content: [{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":130899},{"name":"RNA degradation [bvu03018]","SUID":130069},{"name":"Protein export [bvu03060]","SUID":130359},{"name":"Sulfur relay system [bvu04122]","SUID":130523},{"name":"DNA replication [bvu03030]","SUID":130703}]
2025-03-06 14:36:44,743 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 130899}, {'name': 'RNA degradation [bvu03018]', 'SUID': 130069}, {'name': 'Protein export [bvu03060]', 'SUID': 130359}, {'name': 'Sulfur relay system [bvu04122]', 'SUID': 130523}, {'name': 'DNA replication [bvu03030]', 'SUID': 130703}]
2025-03-06 14:36:44,743 [DEBUG] py4...: Returning 'get_network_list': ['Protein processing in endoplasmic reticulum [bvu04141]', 'RNA degradation [bvu03018]', 'Protein export [bvu03060]', 'Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]']
2025-03-06 14:36:44,743 [DEBUG] py4...: --------------------
2025-03-06 14:36:44,744 [DEBUG] py4...: Calling get_network_suid('Protein processing in endoplasmic reticulum [bvu04141]')
2025-03-06 14:36:44,744 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,744 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,744 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:44,748 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":130899},{"name":"RNA degradation [bvu03018]","SUID":130069},{"name":"Protein export [bvu03060]","SUID":130359},{"name":"Sulfur relay system [bvu04122]","SUID":130523},{"name":"DNA replication [bvu03030]","SUID":130703}]
2025-03-06 14:36:44,748 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 130899}, {'name': 'RNA degradation [bvu03018]', 'SUID': 130069}, {'name': 'Protein export [bvu03060]', 'SUID': 130359}, {'name': 'Sulfur relay system [bvu04122]', 'SUID': 130523}, {'name': 'DNA replication [bvu03030]', 'SUID': 130703}]
2025-03-06 14:36:44,749 [DEBUG] py4...: ǀReturning 'get_network_list': ['Protein processing in endoplasmic reticulum [bvu04141]', 'RNA degradation [bvu03018]', 'Protein export [bvu03060]', 'Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]']
2025-03-06 14:36:44,751 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Protein processing in endoplasmic reticulum [bvu04141]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,752 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Protein processing in endoplasmic reticulum [bvu04141]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:44,756 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 130899
}
],
 "errors":[]
}
2025-03-06 14:36:44,756 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 130899}]
2025-03-06 14:36:44,756 [DEBUG] py4...: Returning 'get_network_suid': 130899
2025-03-06 14:36:44,756 [DEBUG] py4...: --------------------
2025-03-06 14:36:44,756 [DEBUG] py4...: Calling get_network_suid('RNA degradation [bvu03018]')
2025-03-06 14:36:44,756 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,756 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,756 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:44,759 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":130899},{"name":"RNA degradation [bvu03018]","SUID":130069},{"name":"Protein export [bvu03060]","SUID":130359},{"name":"Sulfur relay system [bvu04122]","SUID":130523},{"name":"DNA replication [bvu03030]","SUID":130703}]
2025-03-06 14:36:44,759 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 130899}, {'name': 'RNA degradation [bvu03018]', 'SUID': 130069}, {'name': 'Protein export [bvu03060]', 'SUID': 130359}, {'name': 'Sulfur relay system [bvu04122]', 'SUID': 130523}, {'name': 'DNA replication [bvu03030]', 'SUID': 130703}]
2025-03-06 14:36:44,759 [DEBUG] py4...: ǀReturning 'get_network_list': ['Protein processing in endoplasmic reticulum [bvu04141]', 'RNA degradation [bvu03018]', 'Protein export [bvu03060]', 'Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]']
2025-03-06 14:36:44,759 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="RNA degradation [bvu03018]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,759 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'RNA degradation [bvu03018]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:44,762 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 130069
}
],
 "errors":[]
}
2025-03-06 14:36:44,763 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 130069}]
2025-03-06 14:36:44,763 [DEBUG] py4...: Returning 'get_network_suid': 130069
2025-03-06 14:36:44,763 [DEBUG] py4...: --------------------
2025-03-06 14:36:44,763 [DEBUG] py4...: Calling get_network_suid('Protein export [bvu03060]')
2025-03-06 14:36:44,763 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,763 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,763 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:44,766 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":130899},{"name":"RNA degradation [bvu03018]","SUID":130069},{"name":"Protein export [bvu03060]","SUID":130359},{"name":"Sulfur relay system [bvu04122]","SUID":130523},{"name":"DNA replication [bvu03030]","SUID":130703}]
2025-03-06 14:36:44,766 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 130899}, {'name': 'RNA degradation [bvu03018]', 'SUID': 130069}, {'name': 'Protein export [bvu03060]', 'SUID': 130359}, {'name': 'Sulfur relay system [bvu04122]', 'SUID': 130523}, {'name': 'DNA replication [bvu03030]', 'SUID': 130703}]
2025-03-06 14:36:44,767 [DEBUG] py4...: ǀReturning 'get_network_list': ['Protein processing in endoplasmic reticulum [bvu04141]', 'RNA degradation [bvu03018]', 'Protein export [bvu03060]', 'Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]']
2025-03-06 14:36:44,767 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Protein export [bvu03060]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,767 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Protein export [bvu03060]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:44,770 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 130359
}
],
 "errors":[]
}
2025-03-06 14:36:44,770 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 130359}]
2025-03-06 14:36:44,770 [DEBUG] py4...: Returning 'get_network_suid': 130359
2025-03-06 14:36:44,770 [DEBUG] py4...: --------------------
2025-03-06 14:36:44,770 [DEBUG] py4...: Calling get_network_suid('Sulfur relay system [bvu04122]')
2025-03-06 14:36:44,770 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,770 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,770 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:44,773 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":130899},{"name":"RNA degradation [bvu03018]","SUID":130069},{"name":"Protein export [bvu03060]","SUID":130359},{"name":"Sulfur relay system [bvu04122]","SUID":130523},{"name":"DNA replication [bvu03030]","SUID":130703}]
2025-03-06 14:36:44,773 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 130899}, {'name': 'RNA degradation [bvu03018]', 'SUID': 130069}, {'name': 'Protein export [bvu03060]', 'SUID': 130359}, {'name': 'Sulfur relay system [bvu04122]', 'SUID': 130523}, {'name': 'DNA replication [bvu03030]', 'SUID': 130703}]
2025-03-06 14:36:44,773 [DEBUG] py4...: ǀReturning 'get_network_list': ['Protein processing in endoplasmic reticulum [bvu04141]', 'RNA degradation [bvu03018]', 'Protein export [bvu03060]', 'Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]']
2025-03-06 14:36:44,773 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Sulfur relay system [bvu04122]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,773 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Sulfur relay system [bvu04122]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:44,777 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 130523
}
],
 "errors":[]
}
2025-03-06 14:36:44,777 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 130523}]
2025-03-06 14:36:44,777 [DEBUG] py4...: Returning 'get_network_suid': 130523
2025-03-06 14:36:44,778 [DEBUG] py4...: --------------------
2025-03-06 14:36:44,778 [DEBUG] py4...: Calling get_network_suid('DNA replication [bvu03030]')
2025-03-06 14:36:44,778 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,778 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,778 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:44,780 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":130899},{"name":"RNA degradation [bvu03018]","SUID":130069},{"name":"Protein export [bvu03060]","SUID":130359},{"name":"Sulfur relay system [bvu04122]","SUID":130523},{"name":"DNA replication [bvu03030]","SUID":130703}]
2025-03-06 14:36:44,781 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 130899}, {'name': 'RNA degradation [bvu03018]', 'SUID': 130069}, {'name': 'Protein export [bvu03060]', 'SUID': 130359}, {'name': 'Sulfur relay system [bvu04122]', 'SUID': 130523}, {'name': 'DNA replication [bvu03030]', 'SUID': 130703}]
2025-03-06 14:36:44,781 [DEBUG] py4...: ǀReturning 'get_network_list': ['Protein processing in endoplasmic reticulum [bvu04141]', 'RNA degradation [bvu03018]', 'Protein export [bvu03060]', 'Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]']
2025-03-06 14:36:44,781 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="DNA replication [bvu03030]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:44,781 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'DNA replication [bvu03030]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:44,784 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 130703
}
],
 "errors":[]
}
2025-03-06 14:36:44,785 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 130703}]
2025-03-06 14:36:44,785 [DEBUG] py4...: Returning 'get_network_suid': 130703
2025-03-06 14:36:44,785 [DEBUG] py4...: --------------------
2025-03-06 14:36:47,371 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_16.cys')
2025-03-06 14:36:47,371 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_16.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:47,371 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_16.cys'}
2025-03-06 14:36:47,929 [DEBUG] py4...: --------------------
2025-03-06 14:36:52,914 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_12.cys')
2025-03-06 14:36:52,914 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_12.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:52,914 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 14:36:52,933 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 14:36:52,933 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_12.cys'}
2025-03-06 14:36:58,501 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:36:58,502 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:36:58,502 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:36:58,502 [DEBUG] py4...: --------------------
2025-03-06 14:36:58,503 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:36:58,503 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,503 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:58,522 [DEBUG] py4...: ǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":142178},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":142882},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":142388},{"name":"Biotin metabolism [bvu00780]","SUID":143268},{"name":"Riboflavin metabolism [bvu00740]","SUID":142648}]
2025-03-06 14:36:58,524 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 142178}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 142882}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 142388}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 143268}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 142648}]
2025-03-06 14:36:58,524 [DEBUG] py4...: Returning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:36:58,524 [DEBUG] py4...: --------------------
2025-03-06 14:36:58,524 [DEBUG] py4...: Calling get_network_suid('Vitamin B6 metabolism [bvu00750]')
2025-03-06 14:36:58,524 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,524 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,524 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:58,533 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":142178},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":142882},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":142388},{"name":"Biotin metabolism [bvu00780]","SUID":143268},{"name":"Riboflavin metabolism [bvu00740]","SUID":142648}]
2025-03-06 14:36:58,533 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 142178}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 142882}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 142388}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 143268}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 142648}]
2025-03-06 14:36:58,533 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:36:58,533 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Vitamin B6 metabolism [bvu00750]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,534 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Vitamin B6 metabolism [bvu00750]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:58,557 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 142178
}
],
 "errors":[]
}
2025-03-06 14:36:58,557 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 142178}]
2025-03-06 14:36:58,557 [DEBUG] py4...: Returning 'get_network_suid': 142178
2025-03-06 14:36:58,557 [DEBUG] py4...: --------------------
2025-03-06 14:36:58,557 [DEBUG] py4...: Calling get_network_suid('Nicotinate and nicotinamide metabolism [bvu00760]')
2025-03-06 14:36:58,557 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,557 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,557 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:58,568 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":142178},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":142882},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":142388},{"name":"Biotin metabolism [bvu00780]","SUID":143268},{"name":"Riboflavin metabolism [bvu00740]","SUID":142648}]
2025-03-06 14:36:58,568 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 142178}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 142882}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 142388}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 143268}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 142648}]
2025-03-06 14:36:58,568 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:36:58,568 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Nicotinate and nicotinamide metabolism [bvu00760]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,568 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:58,585 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 142882
}
],
 "errors":[]
}
2025-03-06 14:36:58,585 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 142882}]
2025-03-06 14:36:58,585 [DEBUG] py4...: Returning 'get_network_suid': 142882
2025-03-06 14:36:58,585 [DEBUG] py4...: --------------------
2025-03-06 14:36:58,585 [DEBUG] py4...: Calling get_network_suid('Pantothenate and CoA biosynthesis [bvu00770]')
2025-03-06 14:36:58,585 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,585 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,585 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:58,591 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":142178},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":142882},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":142388},{"name":"Biotin metabolism [bvu00780]","SUID":143268},{"name":"Riboflavin metabolism [bvu00740]","SUID":142648}]
2025-03-06 14:36:58,591 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 142178}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 142882}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 142388}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 143268}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 142648}]
2025-03-06 14:36:58,591 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:36:58,591 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pantothenate and CoA biosynthesis [bvu00770]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,591 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pantothenate and CoA biosynthesis [bvu00770]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:58,603 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 142388
}
],
 "errors":[]
}
2025-03-06 14:36:58,603 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 142388}]
2025-03-06 14:36:58,603 [DEBUG] py4...: Returning 'get_network_suid': 142388
2025-03-06 14:36:58,603 [DEBUG] py4...: --------------------
2025-03-06 14:36:58,603 [DEBUG] py4...: Calling get_network_suid('Biotin metabolism [bvu00780]')
2025-03-06 14:36:58,603 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,603 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,603 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:58,611 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":142178},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":142882},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":142388},{"name":"Biotin metabolism [bvu00780]","SUID":143268},{"name":"Riboflavin metabolism [bvu00740]","SUID":142648}]
2025-03-06 14:36:58,611 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 142178}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 142882}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 142388}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 143268}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 142648}]
2025-03-06 14:36:58,611 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:36:58,611 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biotin metabolism [bvu00780]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,611 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biotin metabolism [bvu00780]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:58,623 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 143268
}
],
 "errors":[]
}
2025-03-06 14:36:58,624 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 143268}]
2025-03-06 14:36:58,624 [DEBUG] py4...: Returning 'get_network_suid': 143268
2025-03-06 14:36:58,624 [DEBUG] py4...: --------------------
2025-03-06 14:36:58,624 [DEBUG] py4...: Calling get_network_suid('Riboflavin metabolism [bvu00740]')
2025-03-06 14:36:58,624 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,624 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,624 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:36:58,631 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Vitamin B6 metabolism [bvu00750]","SUID":142178},{"name":"Nicotinate and nicotinamide metabolism [bvu00760]","SUID":142882},{"name":"Pantothenate and CoA biosynthesis [bvu00770]","SUID":142388},{"name":"Biotin metabolism [bvu00780]","SUID":143268},{"name":"Riboflavin metabolism [bvu00740]","SUID":142648}]
2025-03-06 14:36:58,631 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Vitamin B6 metabolism [bvu00750]', 'SUID': 142178}, {'name': 'Nicotinate and nicotinamide metabolism [bvu00760]', 'SUID': 142882}, {'name': 'Pantothenate and CoA biosynthesis [bvu00770]', 'SUID': 142388}, {'name': 'Biotin metabolism [bvu00780]', 'SUID': 143268}, {'name': 'Riboflavin metabolism [bvu00740]', 'SUID': 142648}]
2025-03-06 14:36:58,631 [DEBUG] py4...: ǀReturning 'get_network_list': ['Vitamin B6 metabolism [bvu00750]', 'Nicotinate and nicotinamide metabolism [bvu00760]', 'Pantothenate and CoA biosynthesis [bvu00770]', 'Biotin metabolism [bvu00780]', 'Riboflavin metabolism [bvu00740]']
2025-03-06 14:36:58,631 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Riboflavin metabolism [bvu00740]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,631 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Riboflavin metabolism [bvu00740]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:36:58,641 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 142648
}
],
 "errors":[]
}
2025-03-06 14:36:58,641 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 142648}]
2025-03-06 14:36:58,641 [DEBUG] py4...: Returning 'get_network_suid': 142648
2025-03-06 14:36:58,641 [DEBUG] py4...: --------------------
2025-03-06 14:36:58,641 [DEBUG] py4...: Calling export_network('networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'graphml', network=142178, overwrite_file=True)
2025-03-06 14:36:58,641 [DEBUG] py4...: ǀCalling get_network_suid(142178, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,641 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,641 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:36:58,646 [DEBUG] py4...: ǀǀOK[200], content: [142178,142882,142388,143268,142648]
2025-03-06 14:36:58,646 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [142178, 142882, 142388, 143268, 142648]
2025-03-06 14:36:58,646 [DEBUG] py4...: ǀReturning 'get_network_suid': 142178
2025-03-06 14:36:58,646 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,646 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,646 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 14:36:58,652 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml","modifiedTime":"2025-03-06 14:32:20.0201","isFile":true},
 "errors":[]
}
2025-03-06 14:36:58,653 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'modifiedTime': '2025-03-06 14:32:20.0201', 'isFile': True}
2025-03-06 14:36:58,653 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'modifiedTime': '2025-03-06 14:32:20.0201', 'isFile': True}
2025-03-06 14:36:58,653 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,653 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,653 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 14:36:58,661 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:36:58,661 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'existed': True}
2025-03-06 14:36:58,661 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml', 'existed': True}
2025-03-06 14:36:58,661 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:142178" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,662 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:142178', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 14:36:58,685 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml"},
 "errors":[]
}
2025-03-06 14:36:58,685 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 14:36:58,685 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Vitamin B6 metabolism [bvu00750].graphml'}
2025-03-06 14:36:58,685 [DEBUG] py4...: --------------------
2025-03-06 14:36:58,686 [DEBUG] py4...: Calling export_network('networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'graphml', network=142882, overwrite_file=True)
2025-03-06 14:36:58,686 [DEBUG] py4...: ǀCalling get_network_suid(142882, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,686 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,686 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:36:58,694 [DEBUG] py4...: ǀǀOK[200], content: [142178,142882,142388,143268,142648]
2025-03-06 14:36:58,694 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [142178, 142882, 142388, 143268, 142648]
2025-03-06 14:36:58,694 [DEBUG] py4...: ǀReturning 'get_network_suid': 142882
2025-03-06 14:36:58,694 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,694 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,694 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 14:36:58,705 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml","modifiedTime":"2025-03-06 14:32:20.0241","isFile":true},
 "errors":[]
}
2025-03-06 14:36:58,705 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'modifiedTime': '2025-03-06 14:32:20.0241', 'isFile': True}
2025-03-06 14:36:58,705 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'modifiedTime': '2025-03-06 14:32:20.0241', 'isFile': True}
2025-03-06 14:36:58,705 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,705 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,705 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 14:36:58,715 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:36:58,715 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'existed': True}
2025-03-06 14:36:58,715 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml', 'existed': True}
2025-03-06 14:36:58,716 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:142882" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,716 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:142882', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 14:36:58,741 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml"},
 "errors":[]
}
2025-03-06 14:36:58,741 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 14:36:58,741 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Nicotinate and nicotinamide metabolism [bvu00760].graphml'}
2025-03-06 14:36:58,742 [DEBUG] py4...: --------------------
2025-03-06 14:36:58,742 [DEBUG] py4...: Calling export_network('networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'graphml', network=142388, overwrite_file=True)
2025-03-06 14:36:58,742 [DEBUG] py4...: ǀCalling get_network_suid(142388, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,742 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,742 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:36:58,756 [DEBUG] py4...: ǀǀOK[200], content: [142178,142882,142388,143268,142648]
2025-03-06 14:36:58,756 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [142178, 142882, 142388, 143268, 142648]
2025-03-06 14:36:58,756 [DEBUG] py4...: ǀReturning 'get_network_suid': 142388
2025-03-06 14:36:58,756 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,756 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,756 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 14:36:58,767 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml","modifiedTime":"2025-03-06 14:32:20.0285","isFile":true},
 "errors":[]
}
2025-03-06 14:36:58,767 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'modifiedTime': '2025-03-06 14:32:20.0285', 'isFile': True}
2025-03-06 14:36:58,767 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'modifiedTime': '2025-03-06 14:32:20.0285', 'isFile': True}
2025-03-06 14:36:58,767 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,767 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,767 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 14:36:58,780 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:36:58,780 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'existed': True}
2025-03-06 14:36:58,780 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml', 'existed': True}
2025-03-06 14:36:58,780 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:142388" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,780 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:142388', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 14:36:58,805 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml"},
 "errors":[]
}
2025-03-06 14:36:58,806 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 14:36:58,806 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pantothenate and CoA biosynthesis [bvu00770].graphml'}
2025-03-06 14:36:58,806 [DEBUG] py4...: --------------------
2025-03-06 14:36:58,806 [DEBUG] py4...: Calling export_network('networks_graphml/Biotin metabolism [bvu00780].graphml', 'graphml', network=143268, overwrite_file=True)
2025-03-06 14:36:58,806 [DEBUG] py4...: ǀCalling get_network_suid(143268, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,806 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,806 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:36:58,824 [DEBUG] py4...: ǀǀOK[200], content: [142178,142882,142388,143268,142648]
2025-03-06 14:36:58,824 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [142178, 142882, 142388, 143268, 142648]
2025-03-06 14:36:58,824 [DEBUG] py4...: ǀReturning 'get_network_suid': 143268
2025-03-06 14:36:58,826 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Biotin metabolism [bvu00780].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,826 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,826 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 14:36:58,841 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml","modifiedTime":"2025-03-06 14:32:20.0331","isFile":true},
 "errors":[]
}
2025-03-06 14:36:58,841 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml', 'modifiedTime': '2025-03-06 14:32:20.0331', 'isFile': True}
2025-03-06 14:36:58,841 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml', 'modifiedTime': '2025-03-06 14:32:20.0331', 'isFile': True}
2025-03-06 14:36:58,841 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Biotin metabolism [bvu00780].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,842 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,842 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 14:36:58,887 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:36:58,888 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml', 'existed': True}
2025-03-06 14:36:58,888 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml', 'existed': True}
2025-03-06 14:36:58,888 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:143268" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,888 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:143268', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 14:36:58,912 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml"},
 "errors":[]
}
2025-03-06 14:36:58,913 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 14:36:58,913 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biotin metabolism [bvu00780].graphml'}
2025-03-06 14:36:58,913 [DEBUG] py4...: --------------------
2025-03-06 14:36:58,913 [DEBUG] py4...: Calling export_network('networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'graphml', network=142648, overwrite_file=True)
2025-03-06 14:36:58,913 [DEBUG] py4...: ǀCalling get_network_suid(142648, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,913 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,913 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:36:58,928 [DEBUG] py4...: ǀǀOK[200], content: [142178,142882,142388,143268,142648]
2025-03-06 14:36:58,928 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [142178, 142882, 142388, 143268, 142648]
2025-03-06 14:36:58,928 [DEBUG] py4...: ǀReturning 'get_network_suid': 142648
2025-03-06 14:36:58,929 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Riboflavin metabolism [bvu00740].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,929 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,929 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 14:36:58,948 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml","modifiedTime":"2025-03-06 14:32:20.0365","isFile":true},
 "errors":[]
}
2025-03-06 14:36:58,949 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'modifiedTime': '2025-03-06 14:32:20.0365', 'isFile': True}
2025-03-06 14:36:58,949 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'modifiedTime': '2025-03-06 14:32:20.0365', 'isFile': True}
2025-03-06 14:36:58,949 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Riboflavin metabolism [bvu00740].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,949 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,949 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 14:36:58,964 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:36:58,964 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'existed': True}
2025-03-06 14:36:58,964 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml', 'existed': True}
2025-03-06 14:36:58,964 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:142648" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,964 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:142648', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 14:36:58,993 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml"},
 "errors":[]
}
2025-03-06 14:36:58,993 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 14:36:58,993 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Riboflavin metabolism [bvu00740].graphml'}
2025-03-06 14:36:58,993 [DEBUG] py4...: --------------------
2025-03-06 14:36:58,993 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_13.cys')
2025-03-06 14:36:58,993 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_13.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:36:58,993 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_13.cys'}
2025-03-06 14:37:04,055 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:04,056 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:04,056 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:04,056 [DEBUG] py4...: --------------------
2025-03-06 14:37:04,056 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:04,057 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,057 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:04,065 [DEBUG] py4...: ǀOK[200], content: [{"name":"One carbon pool by folate [bvu00670]","SUID":149889},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":150603},{"name":"Porphyrin metabolism [bvu00860]","SUID":148697},{"name":"Lipoic acid metabolism [bvu00785]","SUID":150297},{"name":"Folate biosynthesis [bvu00790]","SUID":149453}]
2025-03-06 14:37:04,065 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'One carbon pool by folate [bvu00670]', 'SUID': 149889}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 150603}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 148697}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 150297}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 149453}]
2025-03-06 14:37:04,065 [DEBUG] py4...: Returning 'get_network_list': ['One carbon pool by folate [bvu00670]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Folate biosynthesis [bvu00790]']
2025-03-06 14:37:04,065 [DEBUG] py4...: --------------------
2025-03-06 14:37:04,065 [DEBUG] py4...: Calling get_network_suid('One carbon pool by folate [bvu00670]')
2025-03-06 14:37:04,065 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,065 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,065 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:04,069 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"One carbon pool by folate [bvu00670]","SUID":149889},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":150603},{"name":"Porphyrin metabolism [bvu00860]","SUID":148697},{"name":"Lipoic acid metabolism [bvu00785]","SUID":150297},{"name":"Folate biosynthesis [bvu00790]","SUID":149453}]
2025-03-06 14:37:04,069 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'One carbon pool by folate [bvu00670]', 'SUID': 149889}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 150603}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 148697}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 150297}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 149453}]
2025-03-06 14:37:04,069 [DEBUG] py4...: ǀReturning 'get_network_list': ['One carbon pool by folate [bvu00670]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Folate biosynthesis [bvu00790]']
2025-03-06 14:37:04,069 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="One carbon pool by folate [bvu00670]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,069 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'One carbon pool by folate [bvu00670]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:04,074 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 149889
}
],
 "errors":[]
}
2025-03-06 14:37:04,074 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 149889}]
2025-03-06 14:37:04,074 [DEBUG] py4...: Returning 'get_network_suid': 149889
2025-03-06 14:37:04,074 [DEBUG] py4...: --------------------
2025-03-06 14:37:04,074 [DEBUG] py4...: Calling get_network_suid('Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]')
2025-03-06 14:37:04,074 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,074 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,075 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:04,078 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"One carbon pool by folate [bvu00670]","SUID":149889},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":150603},{"name":"Porphyrin metabolism [bvu00860]","SUID":148697},{"name":"Lipoic acid metabolism [bvu00785]","SUID":150297},{"name":"Folate biosynthesis [bvu00790]","SUID":149453}]
2025-03-06 14:37:04,078 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'One carbon pool by folate [bvu00670]', 'SUID': 149889}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 150603}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 148697}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 150297}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 149453}]
2025-03-06 14:37:04,078 [DEBUG] py4...: ǀReturning 'get_network_list': ['One carbon pool by folate [bvu00670]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Folate biosynthesis [bvu00790]']
2025-03-06 14:37:04,078 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,078 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:04,082 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 150603
}
],
 "errors":[]
}
2025-03-06 14:37:04,082 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 150603}]
2025-03-06 14:37:04,082 [DEBUG] py4...: Returning 'get_network_suid': 150603
2025-03-06 14:37:04,082 [DEBUG] py4...: --------------------
2025-03-06 14:37:04,082 [DEBUG] py4...: Calling get_network_suid('Porphyrin metabolism [bvu00860]')
2025-03-06 14:37:04,082 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,082 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,082 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:04,089 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"One carbon pool by folate [bvu00670]","SUID":149889},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":150603},{"name":"Porphyrin metabolism [bvu00860]","SUID":148697},{"name":"Lipoic acid metabolism [bvu00785]","SUID":150297},{"name":"Folate biosynthesis [bvu00790]","SUID":149453}]
2025-03-06 14:37:04,090 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'One carbon pool by folate [bvu00670]', 'SUID': 149889}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 150603}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 148697}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 150297}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 149453}]
2025-03-06 14:37:04,090 [DEBUG] py4...: ǀReturning 'get_network_list': ['One carbon pool by folate [bvu00670]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Folate biosynthesis [bvu00790]']
2025-03-06 14:37:04,090 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Porphyrin metabolism [bvu00860]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,090 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Porphyrin metabolism [bvu00860]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:04,095 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 148697
}
],
 "errors":[]
}
2025-03-06 14:37:04,095 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 148697}]
2025-03-06 14:37:04,095 [DEBUG] py4...: Returning 'get_network_suid': 148697
2025-03-06 14:37:04,095 [DEBUG] py4...: --------------------
2025-03-06 14:37:04,095 [DEBUG] py4...: Calling get_network_suid('Lipoic acid metabolism [bvu00785]')
2025-03-06 14:37:04,095 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,095 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,095 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:04,099 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"One carbon pool by folate [bvu00670]","SUID":149889},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":150603},{"name":"Porphyrin metabolism [bvu00860]","SUID":148697},{"name":"Lipoic acid metabolism [bvu00785]","SUID":150297},{"name":"Folate biosynthesis [bvu00790]","SUID":149453}]
2025-03-06 14:37:04,100 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'One carbon pool by folate [bvu00670]', 'SUID': 149889}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 150603}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 148697}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 150297}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 149453}]
2025-03-06 14:37:04,100 [DEBUG] py4...: ǀReturning 'get_network_list': ['One carbon pool by folate [bvu00670]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Folate biosynthesis [bvu00790]']
2025-03-06 14:37:04,100 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Lipoic acid metabolism [bvu00785]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,100 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Lipoic acid metabolism [bvu00785]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:04,109 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 150297
}
],
 "errors":[]
}
2025-03-06 14:37:04,110 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 150297}]
2025-03-06 14:37:04,110 [DEBUG] py4...: Returning 'get_network_suid': 150297
2025-03-06 14:37:04,110 [DEBUG] py4...: --------------------
2025-03-06 14:37:04,110 [DEBUG] py4...: Calling get_network_suid('Folate biosynthesis [bvu00790]')
2025-03-06 14:37:04,110 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,110 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,110 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:04,118 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"One carbon pool by folate [bvu00670]","SUID":149889},{"name":"Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]","SUID":150603},{"name":"Porphyrin metabolism [bvu00860]","SUID":148697},{"name":"Lipoic acid metabolism [bvu00785]","SUID":150297},{"name":"Folate biosynthesis [bvu00790]","SUID":149453}]
2025-03-06 14:37:04,119 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'One carbon pool by folate [bvu00670]', 'SUID': 149889}, {'name': 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'SUID': 150603}, {'name': 'Porphyrin metabolism [bvu00860]', 'SUID': 148697}, {'name': 'Lipoic acid metabolism [bvu00785]', 'SUID': 150297}, {'name': 'Folate biosynthesis [bvu00790]', 'SUID': 149453}]
2025-03-06 14:37:04,119 [DEBUG] py4...: ǀReturning 'get_network_list': ['One carbon pool by folate [bvu00670]', 'Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130]', 'Porphyrin metabolism [bvu00860]', 'Lipoic acid metabolism [bvu00785]', 'Folate biosynthesis [bvu00790]']
2025-03-06 14:37:04,119 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Folate biosynthesis [bvu00790]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,119 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Folate biosynthesis [bvu00790]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:04,125 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 149453
}
],
 "errors":[]
}
2025-03-06 14:37:04,125 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 149453}]
2025-03-06 14:37:04,125 [DEBUG] py4...: Returning 'get_network_suid': 149453
2025-03-06 14:37:04,125 [DEBUG] py4...: --------------------
2025-03-06 14:37:04,125 [DEBUG] py4...: Calling export_network('networks_graphml/One carbon pool by folate [bvu00670].graphml', 'graphml', network=149889, overwrite_file=True)
2025-03-06 14:37:04,125 [DEBUG] py4...: ǀCalling get_network_suid(149889, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,125 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,125 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:04,128 [DEBUG] py4...: ǀǀOK[200], content: [149889,150603,148697,150297,149453]
2025-03-06 14:37:04,128 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [149889, 150603, 148697, 150297, 149453]
2025-03-06 14:37:04,128 [DEBUG] py4...: ǀReturning 'get_network_suid': 149889
2025-03-06 14:37:04,128 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/One carbon pool by folate [bvu00670].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,129 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,129 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 14:37:04,134 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml","modifiedTime":"2025-03-06 14:32:21.0468","isFile":true},
 "errors":[]
}
2025-03-06 14:37:04,134 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml', 'modifiedTime': '2025-03-06 14:32:21.0468', 'isFile': True}
2025-03-06 14:37:04,134 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml', 'modifiedTime': '2025-03-06 14:32:21.0468', 'isFile': True}
2025-03-06 14:37:04,134 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/One carbon pool by folate [bvu00670].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,135 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,135 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 14:37:04,145 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:04,145 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml', 'existed': True}
2025-03-06 14:37:04,145 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml', 'existed': True}
2025-03-06 14:37:04,145 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:149889" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,145 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:149889', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 14:37:04,159 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml"},
 "errors":[]
}
2025-03-06 14:37:04,160 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 14:37:04,160 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/One carbon pool by folate [bvu00670].graphml'}
2025-03-06 14:37:04,160 [DEBUG] py4...: --------------------
2025-03-06 14:37:04,160 [DEBUG] py4...: Calling export_network('networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'graphml', network=150603, overwrite_file=True)
2025-03-06 14:37:04,160 [DEBUG] py4...: ǀCalling get_network_suid(150603, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,160 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,161 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:04,166 [DEBUG] py4...: ǀǀOK[200], content: [149889,150603,148697,150297,149453]
2025-03-06 14:37:04,166 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [149889, 150603, 148697, 150297, 149453]
2025-03-06 14:37:04,166 [DEBUG] py4...: ǀReturning 'get_network_suid': 150603
2025-03-06 14:37:04,166 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,167 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,167 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 14:37:04,172 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml","modifiedTime":"2025-03-06 14:32:21.0543","isFile":true},
 "errors":[]
}
2025-03-06 14:37:04,172 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'modifiedTime': '2025-03-06 14:32:21.0543', 'isFile': True}
2025-03-06 14:37:04,172 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'modifiedTime': '2025-03-06 14:32:21.0543', 'isFile': True}
2025-03-06 14:37:04,172 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,172 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,173 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 14:37:04,176 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:04,176 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'existed': True}
2025-03-06 14:37:04,176 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml', 'existed': True}
2025-03-06 14:37:04,177 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:150603" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,177 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:150603', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 14:37:04,185 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml"},
 "errors":[]
}
2025-03-06 14:37:04,187 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 14:37:04,187 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Ubiquinone and other terpenoid-quinone biosynthesis [bvu00130].graphml'}
2025-03-06 14:37:04,187 [DEBUG] py4...: --------------------
2025-03-06 14:37:04,187 [DEBUG] py4...: Calling export_network('networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'graphml', network=148697, overwrite_file=True)
2025-03-06 14:37:04,187 [DEBUG] py4...: ǀCalling get_network_suid(148697, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,187 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,187 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:04,191 [DEBUG] py4...: ǀǀOK[200], content: [149889,150603,148697,150297,149453]
2025-03-06 14:37:04,191 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [149889, 150603, 148697, 150297, 149453]
2025-03-06 14:37:04,191 [DEBUG] py4...: ǀReturning 'get_network_suid': 148697
2025-03-06 14:37:04,191 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Porphyrin metabolism [bvu00860].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,191 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,191 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 14:37:04,195 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml","modifiedTime":"2025-03-06 14:32:21.0492","isFile":true},
 "errors":[]
}
2025-03-06 14:37:04,195 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'modifiedTime': '2025-03-06 14:32:21.0492', 'isFile': True}
2025-03-06 14:37:04,195 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'modifiedTime': '2025-03-06 14:32:21.0492', 'isFile': True}
2025-03-06 14:37:04,195 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Porphyrin metabolism [bvu00860].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,195 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,195 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 14:37:04,199 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:04,199 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'existed': True}
2025-03-06 14:37:04,199 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml', 'existed': True}
2025-03-06 14:37:04,199 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:148697" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,199 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:148697', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 14:37:04,207 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml"},
 "errors":[]
}
2025-03-06 14:37:04,207 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 14:37:04,207 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Porphyrin metabolism [bvu00860].graphml'}
2025-03-06 14:37:04,207 [DEBUG] py4...: --------------------
2025-03-06 14:37:04,208 [DEBUG] py4...: Calling export_network('networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'graphml', network=150297, overwrite_file=True)
2025-03-06 14:37:04,208 [DEBUG] py4...: ǀCalling get_network_suid(150297, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,208 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,208 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:04,214 [DEBUG] py4...: ǀǀOK[200], content: [149889,150603,148697,150297,149453]
2025-03-06 14:37:04,215 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [149889, 150603, 148697, 150297, 149453]
2025-03-06 14:37:04,215 [DEBUG] py4...: ǀReturning 'get_network_suid': 150297
2025-03-06 14:37:04,215 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Lipoic acid metabolism [bvu00785].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,216 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,216 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 14:37:04,222 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml","modifiedTime":"2025-03-06 14:32:21.0516","isFile":true},
 "errors":[]
}
2025-03-06 14:37:04,222 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'modifiedTime': '2025-03-06 14:32:21.0516', 'isFile': True}
2025-03-06 14:37:04,223 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'modifiedTime': '2025-03-06 14:32:21.0516', 'isFile': True}
2025-03-06 14:37:04,223 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Lipoic acid metabolism [bvu00785].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,223 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,223 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 14:37:04,232 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:04,233 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'existed': True}
2025-03-06 14:37:04,233 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml', 'existed': True}
2025-03-06 14:37:04,233 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:150297" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,233 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:150297', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 14:37:04,243 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml"},
 "errors":[]
}
2025-03-06 14:37:04,244 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 14:37:04,244 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipoic acid metabolism [bvu00785].graphml'}
2025-03-06 14:37:04,244 [DEBUG] py4...: --------------------
2025-03-06 14:37:04,244 [DEBUG] py4...: Calling export_network('networks_graphml/Folate biosynthesis [bvu00790].graphml', 'graphml', network=149453, overwrite_file=True)
2025-03-06 14:37:04,244 [DEBUG] py4...: ǀCalling get_network_suid(149453, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,244 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,244 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:04,250 [DEBUG] py4...: ǀǀOK[200], content: [149889,150603,148697,150297,149453]
2025-03-06 14:37:04,250 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [149889, 150603, 148697, 150297, 149453]
2025-03-06 14:37:04,250 [DEBUG] py4...: ǀReturning 'get_network_suid': 149453
2025-03-06 14:37:04,250 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Folate biosynthesis [bvu00790].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,250 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,250 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 14:37:04,258 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml","modifiedTime":"2025-03-06 14:32:21.0568","isFile":true},
 "errors":[]
}
2025-03-06 14:37:04,258 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml', 'modifiedTime': '2025-03-06 14:32:21.0568', 'isFile': True}
2025-03-06 14:37:04,258 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml', 'modifiedTime': '2025-03-06 14:32:21.0568', 'isFile': True}
2025-03-06 14:37:04,258 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Folate biosynthesis [bvu00790].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,258 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,258 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 14:37:04,266 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:04,266 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml', 'existed': True}
2025-03-06 14:37:04,267 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml', 'existed': True}
2025-03-06 14:37:04,267 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:149453" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,268 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:149453', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 14:37:04,278 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml"},
 "errors":[]
}
2025-03-06 14:37:04,278 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 14:37:04,278 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate biosynthesis [bvu00790].graphml'}
2025-03-06 14:37:04,278 [DEBUG] py4...: --------------------
2025-03-06 14:37:04,278 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_11.cys')
2025-03-06 14:37:04,279 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_11.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:04,279 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_11.cys'}
2025-03-06 14:37:05,409 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:05,410 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:05,410 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:05,410 [DEBUG] py4...: --------------------
2025-03-06 14:37:05,410 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:05,410 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,410 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:05,415 [DEBUG] py4...: ǀOK[200], content: [{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":161538},{"name":"Thiamine metabolism [bvu00730]","SUID":160208},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":160864},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":160474},{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":159868}]
2025-03-06 14:37:05,417 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 161538}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 160208}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 160864}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 160474}, {'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 159868}]
2025-03-06 14:37:05,417 [DEBUG] py4...: Returning 'get_network_list': ['Teichoic acid biosynthesis [bvu00552]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Exopolysaccharide biosynthesis [bvu00543]', 'Peptidoglycan biosynthesis [bvu00550]']
2025-03-06 14:37:05,417 [DEBUG] py4...: --------------------
2025-03-06 14:37:05,417 [DEBUG] py4...: Calling get_network_suid('Teichoic acid biosynthesis [bvu00552]')
2025-03-06 14:37:05,417 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,417 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,417 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:05,424 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":161538},{"name":"Thiamine metabolism [bvu00730]","SUID":160208},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":160864},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":160474},{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":159868}]
2025-03-06 14:37:05,424 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 161538}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 160208}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 160864}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 160474}, {'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 159868}]
2025-03-06 14:37:05,424 [DEBUG] py4...: ǀReturning 'get_network_list': ['Teichoic acid biosynthesis [bvu00552]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Exopolysaccharide biosynthesis [bvu00543]', 'Peptidoglycan biosynthesis [bvu00550]']
2025-03-06 14:37:05,424 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Teichoic acid biosynthesis [bvu00552]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,425 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Teichoic acid biosynthesis [bvu00552]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:05,438 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 161538
}
],
 "errors":[]
}
2025-03-06 14:37:05,438 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 161538}]
2025-03-06 14:37:05,439 [DEBUG] py4...: Returning 'get_network_suid': 161538
2025-03-06 14:37:05,439 [DEBUG] py4...: --------------------
2025-03-06 14:37:05,439 [DEBUG] py4...: Calling get_network_suid('Thiamine metabolism [bvu00730]')
2025-03-06 14:37:05,439 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,439 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,439 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:05,451 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":161538},{"name":"Thiamine metabolism [bvu00730]","SUID":160208},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":160864},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":160474},{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":159868}]
2025-03-06 14:37:05,452 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 161538}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 160208}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 160864}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 160474}, {'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 159868}]
2025-03-06 14:37:05,452 [DEBUG] py4...: ǀReturning 'get_network_list': ['Teichoic acid biosynthesis [bvu00552]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Exopolysaccharide biosynthesis [bvu00543]', 'Peptidoglycan biosynthesis [bvu00550]']
2025-03-06 14:37:05,452 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Thiamine metabolism [bvu00730]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,452 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Thiamine metabolism [bvu00730]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:05,457 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 160208
}
],
 "errors":[]
}
2025-03-06 14:37:05,457 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 160208}]
2025-03-06 14:37:05,457 [DEBUG] py4...: Returning 'get_network_suid': 160208
2025-03-06 14:37:05,457 [DEBUG] py4...: --------------------
2025-03-06 14:37:05,457 [DEBUG] py4...: Calling get_network_suid('Biosynthesis of various nucleotide sugars [bvu00541]')
2025-03-06 14:37:05,458 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,458 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,458 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:05,463 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":161538},{"name":"Thiamine metabolism [bvu00730]","SUID":160208},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":160864},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":160474},{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":159868}]
2025-03-06 14:37:05,464 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 161538}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 160208}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 160864}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 160474}, {'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 159868}]
2025-03-06 14:37:05,464 [DEBUG] py4...: ǀReturning 'get_network_list': ['Teichoic acid biosynthesis [bvu00552]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Exopolysaccharide biosynthesis [bvu00543]', 'Peptidoglycan biosynthesis [bvu00550]']
2025-03-06 14:37:05,464 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biosynthesis of various nucleotide sugars [bvu00541]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,464 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:05,468 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 160864
}
],
 "errors":[]
}
2025-03-06 14:37:05,468 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 160864}]
2025-03-06 14:37:05,468 [DEBUG] py4...: Returning 'get_network_suid': 160864
2025-03-06 14:37:05,468 [DEBUG] py4...: --------------------
2025-03-06 14:37:05,468 [DEBUG] py4...: Calling get_network_suid('Exopolysaccharide biosynthesis [bvu00543]')
2025-03-06 14:37:05,468 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,468 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,468 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:05,471 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":161538},{"name":"Thiamine metabolism [bvu00730]","SUID":160208},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":160864},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":160474},{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":159868}]
2025-03-06 14:37:05,471 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 161538}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 160208}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 160864}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 160474}, {'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 159868}]
2025-03-06 14:37:05,471 [DEBUG] py4...: ǀReturning 'get_network_list': ['Teichoic acid biosynthesis [bvu00552]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Exopolysaccharide biosynthesis [bvu00543]', 'Peptidoglycan biosynthesis [bvu00550]']
2025-03-06 14:37:05,472 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Exopolysaccharide biosynthesis [bvu00543]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,472 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Exopolysaccharide biosynthesis [bvu00543]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:05,476 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 160474
}
],
 "errors":[]
}
2025-03-06 14:37:05,476 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 160474}]
2025-03-06 14:37:05,476 [DEBUG] py4...: Returning 'get_network_suid': 160474
2025-03-06 14:37:05,476 [DEBUG] py4...: --------------------
2025-03-06 14:37:05,476 [DEBUG] py4...: Calling get_network_suid('Peptidoglycan biosynthesis [bvu00550]')
2025-03-06 14:37:05,476 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,476 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,476 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:05,480 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Teichoic acid biosynthesis [bvu00552]","SUID":161538},{"name":"Thiamine metabolism [bvu00730]","SUID":160208},{"name":"Biosynthesis of various nucleotide sugars [bvu00541]","SUID":160864},{"name":"Exopolysaccharide biosynthesis [bvu00543]","SUID":160474},{"name":"Peptidoglycan biosynthesis [bvu00550]","SUID":159868}]
2025-03-06 14:37:05,481 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Teichoic acid biosynthesis [bvu00552]', 'SUID': 161538}, {'name': 'Thiamine metabolism [bvu00730]', 'SUID': 160208}, {'name': 'Biosynthesis of various nucleotide sugars [bvu00541]', 'SUID': 160864}, {'name': 'Exopolysaccharide biosynthesis [bvu00543]', 'SUID': 160474}, {'name': 'Peptidoglycan biosynthesis [bvu00550]', 'SUID': 159868}]
2025-03-06 14:37:05,481 [DEBUG] py4...: ǀReturning 'get_network_list': ['Teichoic acid biosynthesis [bvu00552]', 'Thiamine metabolism [bvu00730]', 'Biosynthesis of various nucleotide sugars [bvu00541]', 'Exopolysaccharide biosynthesis [bvu00543]', 'Peptidoglycan biosynthesis [bvu00550]']
2025-03-06 14:37:05,481 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Peptidoglycan biosynthesis [bvu00550]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,481 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Peptidoglycan biosynthesis [bvu00550]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:05,487 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 159868
}
],
 "errors":[]
}
2025-03-06 14:37:05,487 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 159868}]
2025-03-06 14:37:05,487 [DEBUG] py4...: Returning 'get_network_suid': 159868
2025-03-06 14:37:05,487 [DEBUG] py4...: --------------------
2025-03-06 14:37:05,488 [DEBUG] py4...: Calling export_network('networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'graphml', network=161538, overwrite_file=True)
2025-03-06 14:37:05,488 [DEBUG] py4...: ǀCalling get_network_suid(161538, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,488 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,488 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:05,492 [DEBUG] py4...: ǀǀOK[200], content: [161538,160208,160864,160474,159868]
2025-03-06 14:37:05,493 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [161538, 160208, 160864, 160474, 159868]
2025-03-06 14:37:05,493 [DEBUG] py4...: ǀReturning 'get_network_suid': 161538
2025-03-06 14:37:05,493 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,493 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,493 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 14:37:05,499 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml","modifiedTime":"2025-03-06 14:32:22.0732","isFile":true},
 "errors":[]
}
2025-03-06 14:37:05,499 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'modifiedTime': '2025-03-06 14:32:22.0732', 'isFile': True}
2025-03-06 14:37:05,499 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'modifiedTime': '2025-03-06 14:32:22.0732', 'isFile': True}
2025-03-06 14:37:05,499 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,499 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,499 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 14:37:05,504 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:05,505 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'existed': True}
2025-03-06 14:37:05,505 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml', 'existed': True}
2025-03-06 14:37:05,505 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:161538" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,505 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:161538', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 14:37:05,513 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml"},
 "errors":[]
}
2025-03-06 14:37:05,513 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 14:37:05,513 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Teichoic acid biosynthesis [bvu00552].graphml'}
2025-03-06 14:37:05,514 [DEBUG] py4...: --------------------
2025-03-06 14:37:05,514 [DEBUG] py4...: Calling export_network('networks_graphml/Thiamine metabolism [bvu00730].graphml', 'graphml', network=160208, overwrite_file=True)
2025-03-06 14:37:05,514 [DEBUG] py4...: ǀCalling get_network_suid(160208, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,514 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,514 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:05,519 [DEBUG] py4...: ǀǀOK[200], content: [161538,160208,160864,160474,159868]
2025-03-06 14:37:05,519 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [161538, 160208, 160864, 160474, 159868]
2025-03-06 14:37:05,519 [DEBUG] py4...: ǀReturning 'get_network_suid': 160208
2025-03-06 14:37:05,519 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Thiamine metabolism [bvu00730].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,520 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,520 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 14:37:05,528 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml","modifiedTime":"2025-03-06 14:32:22.0676","isFile":true},
 "errors":[]
}
2025-03-06 14:37:05,528 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml', 'modifiedTime': '2025-03-06 14:32:22.0676', 'isFile': True}
2025-03-06 14:37:05,528 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml', 'modifiedTime': '2025-03-06 14:32:22.0676', 'isFile': True}
2025-03-06 14:37:05,528 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Thiamine metabolism [bvu00730].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,529 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,529 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 14:37:05,537 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:05,537 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml', 'existed': True}
2025-03-06 14:37:05,537 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml', 'existed': True}
2025-03-06 14:37:05,537 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:160208" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,538 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:160208', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 14:37:05,546 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml"},
 "errors":[]
}
2025-03-06 14:37:05,546 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 14:37:05,546 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Thiamine metabolism [bvu00730].graphml'}
2025-03-06 14:37:05,547 [DEBUG] py4...: --------------------
2025-03-06 14:37:05,547 [DEBUG] py4...: Calling export_network('networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'graphml', network=160864, overwrite_file=True)
2025-03-06 14:37:05,547 [DEBUG] py4...: ǀCalling get_network_suid(160864, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,547 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,547 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:05,553 [DEBUG] py4...: ǀǀOK[200], content: [161538,160208,160864,160474,159868]
2025-03-06 14:37:05,553 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [161538, 160208, 160864, 160474, 159868]
2025-03-06 14:37:05,553 [DEBUG] py4...: ǀReturning 'get_network_suid': 160864
2025-03-06 14:37:05,554 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,554 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,554 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 14:37:05,559 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml","modifiedTime":"2025-03-06 14:32:22.0704","isFile":true},
 "errors":[]
}
2025-03-06 14:37:05,559 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'modifiedTime': '2025-03-06 14:32:22.0704', 'isFile': True}
2025-03-06 14:37:05,560 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'modifiedTime': '2025-03-06 14:32:22.0704', 'isFile': True}
2025-03-06 14:37:05,560 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,560 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,560 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 14:37:05,565 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:05,565 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'existed': True}
2025-03-06 14:37:05,565 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml', 'existed': True}
2025-03-06 14:37:05,565 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:160864" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,566 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:160864', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 14:37:05,573 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml"},
 "errors":[]
}
2025-03-06 14:37:05,573 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 14:37:05,574 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various nucleotide sugars [bvu00541].graphml'}
2025-03-06 14:37:05,574 [DEBUG] py4...: --------------------
2025-03-06 14:37:05,574 [DEBUG] py4...: Calling export_network('networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'graphml', network=160474, overwrite_file=True)
2025-03-06 14:37:05,574 [DEBUG] py4...: ǀCalling get_network_suid(160474, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,574 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,574 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:05,582 [DEBUG] py4...: ǀǀOK[200], content: [161538,160208,160864,160474,159868]
2025-03-06 14:37:05,583 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [161538, 160208, 160864, 160474, 159868]
2025-03-06 14:37:05,583 [DEBUG] py4...: ǀReturning 'get_network_suid': 160474
2025-03-06 14:37:05,583 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,583 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,583 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 14:37:05,589 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml","modifiedTime":"2025-03-06 14:32:22.0763","isFile":true},
 "errors":[]
}
2025-03-06 14:37:05,589 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'modifiedTime': '2025-03-06 14:32:22.0763', 'isFile': True}
2025-03-06 14:37:05,589 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'modifiedTime': '2025-03-06 14:32:22.0763', 'isFile': True}
2025-03-06 14:37:05,589 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,590 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,590 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 14:37:05,596 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:05,596 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'existed': True}
2025-03-06 14:37:05,596 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml', 'existed': True}
2025-03-06 14:37:05,597 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:160474" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,597 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:160474', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 14:37:05,607 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml"},
 "errors":[]
}
2025-03-06 14:37:05,607 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 14:37:05,607 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Exopolysaccharide biosynthesis [bvu00543].graphml'}
2025-03-06 14:37:05,607 [DEBUG] py4...: --------------------
2025-03-06 14:37:05,607 [DEBUG] py4...: Calling export_network('networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'graphml', network=159868, overwrite_file=True)
2025-03-06 14:37:05,607 [DEBUG] py4...: ǀCalling get_network_suid(159868, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,608 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,608 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:05,610 [DEBUG] py4...: ǀǀOK[200], content: [161538,160208,160864,160474,159868]
2025-03-06 14:37:05,610 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [161538, 160208, 160864, 160474, 159868]
2025-03-06 14:37:05,610 [DEBUG] py4...: ǀReturning 'get_network_suid': 159868
2025-03-06 14:37:05,610 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,610 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,610 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 14:37:05,613 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml","modifiedTime":"2025-03-06 14:32:22.0788","isFile":true},
 "errors":[]
}
2025-03-06 14:37:05,614 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'modifiedTime': '2025-03-06 14:32:22.0788', 'isFile': True}
2025-03-06 14:37:05,614 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'modifiedTime': '2025-03-06 14:32:22.0788', 'isFile': True}
2025-03-06 14:37:05,614 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,614 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,614 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 14:37:05,617 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:05,617 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'existed': True}
2025-03-06 14:37:05,617 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml', 'existed': True}
2025-03-06 14:37:05,617 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:159868" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,617 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:159868', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 14:37:05,623 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml"},
 "errors":[]
}
2025-03-06 14:37:05,623 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 14:37:05,623 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Peptidoglycan biosynthesis [bvu00550].graphml'}
2025-03-06 14:37:05,623 [DEBUG] py4...: --------------------
2025-03-06 14:37:05,623 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_10.cys')
2025-03-06 14:37:05,623 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:05,623 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_10.cys'}
2025-03-06 14:37:06,490 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:06,491 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:06,491 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:06,491 [DEBUG] py4...: --------------------
2025-03-06 14:37:06,491 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:06,491 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,491 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:06,497 [DEBUG] py4...: ǀOK[200], content: [{"name":"Glutathione metabolism [bvu00480]","SUID":171218},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":170280},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":170840},{"name":"D-Amino acid metabolism [bvu00470]","SUID":171528},{"name":"Other glycan degradation [bvu00511]","SUID":171884}]
2025-03-06 14:37:06,497 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Glutathione metabolism [bvu00480]', 'SUID': 171218}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 170280}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 170840}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 171528}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 171884}]
2025-03-06 14:37:06,497 [DEBUG] py4...: Returning 'get_network_list': ['Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]']
2025-03-06 14:37:06,498 [DEBUG] py4...: --------------------
2025-03-06 14:37:06,498 [DEBUG] py4...: Calling get_network_suid('Glutathione metabolism [bvu00480]')
2025-03-06 14:37:06,498 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,498 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,498 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:06,503 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glutathione metabolism [bvu00480]","SUID":171218},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":170280},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":170840},{"name":"D-Amino acid metabolism [bvu00470]","SUID":171528},{"name":"Other glycan degradation [bvu00511]","SUID":171884}]
2025-03-06 14:37:06,503 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glutathione metabolism [bvu00480]', 'SUID': 171218}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 170280}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 170840}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 171528}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 171884}]
2025-03-06 14:37:06,503 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]']
2025-03-06 14:37:06,503 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glutathione metabolism [bvu00480]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,503 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glutathione metabolism [bvu00480]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:06,508 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 171218
}
],
 "errors":[]
}
2025-03-06 14:37:06,509 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 171218}]
2025-03-06 14:37:06,510 [DEBUG] py4...: Returning 'get_network_suid': 171218
2025-03-06 14:37:06,510 [DEBUG] py4...: --------------------
2025-03-06 14:37:06,510 [DEBUG] py4...: Calling get_network_suid('Amino sugar and nucleotide sugar metabolism [bvu00520]')
2025-03-06 14:37:06,510 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,510 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,510 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:06,514 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glutathione metabolism [bvu00480]","SUID":171218},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":170280},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":170840},{"name":"D-Amino acid metabolism [bvu00470]","SUID":171528},{"name":"Other glycan degradation [bvu00511]","SUID":171884}]
2025-03-06 14:37:06,515 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glutathione metabolism [bvu00480]', 'SUID': 171218}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 170280}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 170840}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 171528}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 171884}]
2025-03-06 14:37:06,515 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]']
2025-03-06 14:37:06,515 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Amino sugar and nucleotide sugar metabolism [bvu00520]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,515 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:06,521 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 170280
}
],
 "errors":[]
}
2025-03-06 14:37:06,522 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 170280}]
2025-03-06 14:37:06,522 [DEBUG] py4...: Returning 'get_network_suid': 170280
2025-03-06 14:37:06,522 [DEBUG] py4...: --------------------
2025-03-06 14:37:06,522 [DEBUG] py4...: Calling get_network_suid('Lipopolysaccharide biosynthesis [bvu00540]')
2025-03-06 14:37:06,523 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,523 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,523 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:06,528 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glutathione metabolism [bvu00480]","SUID":171218},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":170280},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":170840},{"name":"D-Amino acid metabolism [bvu00470]","SUID":171528},{"name":"Other glycan degradation [bvu00511]","SUID":171884}]
2025-03-06 14:37:06,528 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glutathione metabolism [bvu00480]', 'SUID': 171218}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 170280}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 170840}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 171528}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 171884}]
2025-03-06 14:37:06,528 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]']
2025-03-06 14:37:06,528 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Lipopolysaccharide biosynthesis [bvu00540]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,529 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Lipopolysaccharide biosynthesis [bvu00540]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:06,540 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 170840
}
],
 "errors":[]
}
2025-03-06 14:37:06,541 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 170840}]
2025-03-06 14:37:06,541 [DEBUG] py4...: Returning 'get_network_suid': 170840
2025-03-06 14:37:06,541 [DEBUG] py4...: --------------------
2025-03-06 14:37:06,541 [DEBUG] py4...: Calling get_network_suid('D-Amino acid metabolism [bvu00470]')
2025-03-06 14:37:06,541 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,541 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,541 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:06,552 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glutathione metabolism [bvu00480]","SUID":171218},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":170280},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":170840},{"name":"D-Amino acid metabolism [bvu00470]","SUID":171528},{"name":"Other glycan degradation [bvu00511]","SUID":171884}]
2025-03-06 14:37:06,553 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glutathione metabolism [bvu00480]', 'SUID': 171218}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 170280}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 170840}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 171528}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 171884}]
2025-03-06 14:37:06,553 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]']
2025-03-06 14:37:06,553 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="D-Amino acid metabolism [bvu00470]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,553 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'D-Amino acid metabolism [bvu00470]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:06,563 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 171528
}
],
 "errors":[]
}
2025-03-06 14:37:06,564 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 171528}]
2025-03-06 14:37:06,564 [DEBUG] py4...: Returning 'get_network_suid': 171528
2025-03-06 14:37:06,564 [DEBUG] py4...: --------------------
2025-03-06 14:37:06,564 [DEBUG] py4...: Calling get_network_suid('Other glycan degradation [bvu00511]')
2025-03-06 14:37:06,564 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,564 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,565 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:06,570 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glutathione metabolism [bvu00480]","SUID":171218},{"name":"Amino sugar and nucleotide sugar metabolism [bvu00520]","SUID":170280},{"name":"Lipopolysaccharide biosynthesis [bvu00540]","SUID":170840},{"name":"D-Amino acid metabolism [bvu00470]","SUID":171528},{"name":"Other glycan degradation [bvu00511]","SUID":171884}]
2025-03-06 14:37:06,570 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glutathione metabolism [bvu00480]', 'SUID': 171218}, {'name': 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'SUID': 170280}, {'name': 'Lipopolysaccharide biosynthesis [bvu00540]', 'SUID': 170840}, {'name': 'D-Amino acid metabolism [bvu00470]', 'SUID': 171528}, {'name': 'Other glycan degradation [bvu00511]', 'SUID': 171884}]
2025-03-06 14:37:06,570 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glutathione metabolism [bvu00480]', 'Amino sugar and nucleotide sugar metabolism [bvu00520]', 'Lipopolysaccharide biosynthesis [bvu00540]', 'D-Amino acid metabolism [bvu00470]', 'Other glycan degradation [bvu00511]']
2025-03-06 14:37:06,571 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Other glycan degradation [bvu00511]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,571 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Other glycan degradation [bvu00511]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:06,576 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 171884
}
],
 "errors":[]
}
2025-03-06 14:37:06,577 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 171884}]
2025-03-06 14:37:06,577 [DEBUG] py4...: Returning 'get_network_suid': 171884
2025-03-06 14:37:06,577 [DEBUG] py4...: --------------------
2025-03-06 14:37:06,577 [DEBUG] py4...: Calling export_network('networks_graphml/Glutathione metabolism [bvu00480].graphml', 'graphml', network=171218, overwrite_file=True)
2025-03-06 14:37:06,577 [DEBUG] py4...: ǀCalling get_network_suid(171218, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,577 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,577 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:06,582 [DEBUG] py4...: ǀǀOK[200], content: [171218,170280,170840,171528,171884]
2025-03-06 14:37:06,583 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [171218, 170280, 170840, 171528, 171884]
2025-03-06 14:37:06,583 [DEBUG] py4...: ǀReturning 'get_network_suid': 171218
2025-03-06 14:37:06,583 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Glutathione metabolism [bvu00480].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,583 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,583 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 14:37:06,587 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml","modifiedTime":"2025-03-06 13:59:43.0540","isFile":true},
 "errors":[]
}
2025-03-06 14:37:06,587 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml', 'modifiedTime': '2025-03-06 13:59:43.0540', 'isFile': True}
2025-03-06 14:37:06,587 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml', 'modifiedTime': '2025-03-06 13:59:43.0540', 'isFile': True}
2025-03-06 14:37:06,587 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Glutathione metabolism [bvu00480].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,587 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,587 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 14:37:06,591 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:06,591 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml', 'existed': True}
2025-03-06 14:37:06,592 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml', 'existed': True}
2025-03-06 14:37:06,592 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:171218" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,592 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:171218', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 14:37:06,601 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml"},
 "errors":[]
}
2025-03-06 14:37:06,604 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 14:37:06,604 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glutathione metabolism [bvu00480].graphml'}
2025-03-06 14:37:06,604 [DEBUG] py4...: --------------------
2025-03-06 14:37:06,604 [DEBUG] py4...: Calling export_network('networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', 'graphml', network=170280, overwrite_file=True)
2025-03-06 14:37:06,605 [DEBUG] py4...: ǀCalling get_network_suid(170280, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,605 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,605 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:06,610 [DEBUG] py4...: ǀǀOK[200], content: [171218,170280,170840,171528,171884]
2025-03-06 14:37:06,610 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [171218, 170280, 170840, 171528, 171884]
2025-03-06 14:37:06,610 [DEBUG] py4...: ǀReturning 'get_network_suid': 170280
2025-03-06 14:37:06,610 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,610 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,610 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 14:37:06,616 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml","modifiedTime":"2025-03-06 13:59:43.0579","isFile":true},
 "errors":[]
}
2025-03-06 14:37:06,616 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', 'modifiedTime': '2025-03-06 13:59:43.0579', 'isFile': True}
2025-03-06 14:37:06,616 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', 'modifiedTime': '2025-03-06 13:59:43.0579', 'isFile': True}
2025-03-06 14:37:06,617 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,617 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,618 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 14:37:06,623 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:06,624 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', 'existed': True}
2025-03-06 14:37:06,624 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml', 'existed': True}
2025-03-06 14:37:06,624 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:170280" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,624 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:170280', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 14:37:06,635 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml"},
 "errors":[]
}
2025-03-06 14:37:06,635 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 14:37:06,635 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Amino sugar and nucleotide sugar metabolism [bvu00520].graphml'}
2025-03-06 14:37:06,636 [DEBUG] py4...: --------------------
2025-03-06 14:37:06,636 [DEBUG] py4...: Calling export_network('networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', 'graphml', network=170840, overwrite_file=True)
2025-03-06 14:37:06,636 [DEBUG] py4...: ǀCalling get_network_suid(170840, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,636 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,636 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:06,640 [DEBUG] py4...: ǀǀOK[200], content: [171218,170280,170840,171528,171884]
2025-03-06 14:37:06,640 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [171218, 170280, 170840, 171528, 171884]
2025-03-06 14:37:06,640 [DEBUG] py4...: ǀReturning 'get_network_suid': 170840
2025-03-06 14:37:06,640 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,641 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,641 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 14:37:06,645 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml","modifiedTime":"2025-03-06 13:59:43.0618","isFile":true},
 "errors":[]
}
2025-03-06 14:37:06,646 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', 'modifiedTime': '2025-03-06 13:59:43.0618', 'isFile': True}
2025-03-06 14:37:06,646 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', 'modifiedTime': '2025-03-06 13:59:43.0618', 'isFile': True}
2025-03-06 14:37:06,646 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,646 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,646 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 14:37:06,651 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:06,652 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', 'existed': True}
2025-03-06 14:37:06,652 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml', 'existed': True}
2025-03-06 14:37:06,652 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:170840" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,652 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:170840', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 14:37:06,661 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml"},
 "errors":[]
}
2025-03-06 14:37:06,662 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 14:37:06,662 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lipopolysaccharide biosynthesis [bvu00540].graphml'}
2025-03-06 14:37:06,664 [DEBUG] py4...: --------------------
2025-03-06 14:37:06,664 [DEBUG] py4...: Calling export_network('networks_graphml/D-Amino acid metabolism [bvu00470].graphml', 'graphml', network=171528, overwrite_file=True)
2025-03-06 14:37:06,664 [DEBUG] py4...: ǀCalling get_network_suid(171528, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,664 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,664 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:06,671 [DEBUG] py4...: ǀǀOK[200], content: [171218,170280,170840,171528,171884]
2025-03-06 14:37:06,671 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [171218, 170280, 170840, 171528, 171884]
2025-03-06 14:37:06,671 [DEBUG] py4...: ǀReturning 'get_network_suid': 171528
2025-03-06 14:37:06,671 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/D-Amino acid metabolism [bvu00470].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,671 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,671 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 14:37:06,675 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml","modifiedTime":"2025-03-06 13:59:43.0651","isFile":true},
 "errors":[]
}
2025-03-06 14:37:06,675 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml', 'modifiedTime': '2025-03-06 13:59:43.0651', 'isFile': True}
2025-03-06 14:37:06,675 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml', 'modifiedTime': '2025-03-06 13:59:43.0651', 'isFile': True}
2025-03-06 14:37:06,675 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/D-Amino acid metabolism [bvu00470].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,675 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,675 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 14:37:06,680 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:06,681 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml', 'existed': True}
2025-03-06 14:37:06,681 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml', 'existed': True}
2025-03-06 14:37:06,681 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:171528" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,681 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:171528', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 14:37:06,690 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml"},
 "errors":[]
}
2025-03-06 14:37:06,691 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 14:37:06,691 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/D-Amino acid metabolism [bvu00470].graphml'}
2025-03-06 14:37:06,691 [DEBUG] py4...: --------------------
2025-03-06 14:37:06,691 [DEBUG] py4...: Calling export_network('networks_graphml/Other glycan degradation [bvu00511].graphml', 'graphml', network=171884, overwrite_file=True)
2025-03-06 14:37:06,691 [DEBUG] py4...: ǀCalling get_network_suid(171884, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,691 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,691 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:06,702 [DEBUG] py4...: ǀǀOK[200], content: [171218,170280,170840,171528,171884]
2025-03-06 14:37:06,702 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [171218, 170280, 170840, 171528, 171884]
2025-03-06 14:37:06,702 [DEBUG] py4...: ǀReturning 'get_network_suid': 171884
2025-03-06 14:37:06,702 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Other glycan degradation [bvu00511].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,703 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,703 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 14:37:06,707 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml","modifiedTime":"2025-03-06 13:59:43.0507","isFile":true},
 "errors":[]
}
2025-03-06 14:37:06,707 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml', 'modifiedTime': '2025-03-06 13:59:43.0507', 'isFile': True}
2025-03-06 14:37:06,707 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml', 'modifiedTime': '2025-03-06 13:59:43.0507', 'isFile': True}
2025-03-06 14:37:06,707 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Other glycan degradation [bvu00511].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,707 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,708 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 14:37:06,711 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:06,711 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml', 'existed': True}
2025-03-06 14:37:06,711 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml', 'existed': True}
2025-03-06 14:37:06,711 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:171884" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,711 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:171884', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 14:37:06,718 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml"},
 "errors":[]
}
2025-03-06 14:37:06,719 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 14:37:06,719 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Other glycan degradation [bvu00511].graphml'}
2025-03-06 14:37:06,719 [DEBUG] py4...: --------------------
2025-03-06 14:37:06,719 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_14.cys')
2025-03-06 14:37:06,719 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_14.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:06,720 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_14.cys'}
2025-03-06 14:37:07,618 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:07,618 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:07,618 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:07,618 [DEBUG] py4...: --------------------
2025-03-06 14:37:07,618 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:07,619 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,619 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:07,623 [DEBUG] py4...: ǀOK[200], content: [{"name":"Carbapenem biosynthesis [bvu00332]","SUID":178787},{"name":"Monobactam biosynthesis [bvu00261]","SUID":178967},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":179183},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":179519},{"name":"Degradation of flavonoids [bvu00946]","SUID":179837}]
2025-03-06 14:37:07,624 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 178787}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 178967}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 179183}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 179519}, {'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 179837}]
2025-03-06 14:37:07,624 [DEBUG] py4...: Returning 'get_network_list': ['Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Degradation of flavonoids [bvu00946]']
2025-03-06 14:37:07,624 [DEBUG] py4...: --------------------
2025-03-06 14:37:07,624 [DEBUG] py4...: Calling get_network_suid('Carbapenem biosynthesis [bvu00332]')
2025-03-06 14:37:07,624 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,624 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,624 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:07,635 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Carbapenem biosynthesis [bvu00332]","SUID":178787},{"name":"Monobactam biosynthesis [bvu00261]","SUID":178967},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":179183},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":179519},{"name":"Degradation of flavonoids [bvu00946]","SUID":179837}]
2025-03-06 14:37:07,636 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 178787}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 178967}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 179183}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 179519}, {'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 179837}]
2025-03-06 14:37:07,636 [DEBUG] py4...: ǀReturning 'get_network_list': ['Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Degradation of flavonoids [bvu00946]']
2025-03-06 14:37:07,636 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Carbapenem biosynthesis [bvu00332]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,636 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Carbapenem biosynthesis [bvu00332]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:07,641 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 178787
}
],
 "errors":[]
}
2025-03-06 14:37:07,642 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 178787}]
2025-03-06 14:37:07,642 [DEBUG] py4...: Returning 'get_network_suid': 178787
2025-03-06 14:37:07,642 [DEBUG] py4...: --------------------
2025-03-06 14:37:07,642 [DEBUG] py4...: Calling get_network_suid('Monobactam biosynthesis [bvu00261]')
2025-03-06 14:37:07,642 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,642 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,642 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:07,647 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Carbapenem biosynthesis [bvu00332]","SUID":178787},{"name":"Monobactam biosynthesis [bvu00261]","SUID":178967},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":179183},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":179519},{"name":"Degradation of flavonoids [bvu00946]","SUID":179837}]
2025-03-06 14:37:07,647 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 178787}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 178967}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 179183}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 179519}, {'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 179837}]
2025-03-06 14:37:07,647 [DEBUG] py4...: ǀReturning 'get_network_list': ['Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Degradation of flavonoids [bvu00946]']
2025-03-06 14:37:07,647 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Monobactam biosynthesis [bvu00261]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,647 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Monobactam biosynthesis [bvu00261]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:07,653 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 178967
}
],
 "errors":[]
}
2025-03-06 14:37:07,654 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 178967}]
2025-03-06 14:37:07,654 [DEBUG] py4...: Returning 'get_network_suid': 178967
2025-03-06 14:37:07,654 [DEBUG] py4...: --------------------
2025-03-06 14:37:07,654 [DEBUG] py4...: Calling get_network_suid('Terpenoid backbone biosynthesis [bvu00900]')
2025-03-06 14:37:07,654 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,654 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,654 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:07,658 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Carbapenem biosynthesis [bvu00332]","SUID":178787},{"name":"Monobactam biosynthesis [bvu00261]","SUID":178967},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":179183},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":179519},{"name":"Degradation of flavonoids [bvu00946]","SUID":179837}]
2025-03-06 14:37:07,659 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 178787}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 178967}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 179183}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 179519}, {'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 179837}]
2025-03-06 14:37:07,659 [DEBUG] py4...: ǀReturning 'get_network_list': ['Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Degradation of flavonoids [bvu00946]']
2025-03-06 14:37:07,659 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Terpenoid backbone biosynthesis [bvu00900]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,659 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Terpenoid backbone biosynthesis [bvu00900]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:07,665 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 179183
}
],
 "errors":[]
}
2025-03-06 14:37:07,666 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 179183}]
2025-03-06 14:37:07,666 [DEBUG] py4...: Returning 'get_network_suid': 179183
2025-03-06 14:37:07,666 [DEBUG] py4...: --------------------
2025-03-06 14:37:07,666 [DEBUG] py4...: Calling get_network_suid('Polyketide sugar unit biosynthesis [bvu00523]')
2025-03-06 14:37:07,666 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,666 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,666 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:07,671 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Carbapenem biosynthesis [bvu00332]","SUID":178787},{"name":"Monobactam biosynthesis [bvu00261]","SUID":178967},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":179183},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":179519},{"name":"Degradation of flavonoids [bvu00946]","SUID":179837}]
2025-03-06 14:37:07,671 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 178787}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 178967}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 179183}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 179519}, {'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 179837}]
2025-03-06 14:37:07,671 [DEBUG] py4...: ǀReturning 'get_network_list': ['Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Degradation of flavonoids [bvu00946]']
2025-03-06 14:37:07,671 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Polyketide sugar unit biosynthesis [bvu00523]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,672 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Polyketide sugar unit biosynthesis [bvu00523]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:07,677 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 179519
}
],
 "errors":[]
}
2025-03-06 14:37:07,678 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 179519}]
2025-03-06 14:37:07,678 [DEBUG] py4...: Returning 'get_network_suid': 179519
2025-03-06 14:37:07,678 [DEBUG] py4...: --------------------
2025-03-06 14:37:07,678 [DEBUG] py4...: Calling get_network_suid('Degradation of flavonoids [bvu00946]')
2025-03-06 14:37:07,678 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,678 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,678 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:07,684 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Carbapenem biosynthesis [bvu00332]","SUID":178787},{"name":"Monobactam biosynthesis [bvu00261]","SUID":178967},{"name":"Terpenoid backbone biosynthesis [bvu00900]","SUID":179183},{"name":"Polyketide sugar unit biosynthesis [bvu00523]","SUID":179519},{"name":"Degradation of flavonoids [bvu00946]","SUID":179837}]
2025-03-06 14:37:07,686 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Carbapenem biosynthesis [bvu00332]', 'SUID': 178787}, {'name': 'Monobactam biosynthesis [bvu00261]', 'SUID': 178967}, {'name': 'Terpenoid backbone biosynthesis [bvu00900]', 'SUID': 179183}, {'name': 'Polyketide sugar unit biosynthesis [bvu00523]', 'SUID': 179519}, {'name': 'Degradation of flavonoids [bvu00946]', 'SUID': 179837}]
2025-03-06 14:37:07,686 [DEBUG] py4...: ǀReturning 'get_network_list': ['Carbapenem biosynthesis [bvu00332]', 'Monobactam biosynthesis [bvu00261]', 'Terpenoid backbone biosynthesis [bvu00900]', 'Polyketide sugar unit biosynthesis [bvu00523]', 'Degradation of flavonoids [bvu00946]']
2025-03-06 14:37:07,687 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Degradation of flavonoids [bvu00946]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,687 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Degradation of flavonoids [bvu00946]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:07,692 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 179837
}
],
 "errors":[]
}
2025-03-06 14:37:07,693 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 179837}]
2025-03-06 14:37:07,693 [DEBUG] py4...: Returning 'get_network_suid': 179837
2025-03-06 14:37:07,693 [DEBUG] py4...: --------------------
2025-03-06 14:37:07,693 [DEBUG] py4...: Calling export_network('networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', 'graphml', network=178787, overwrite_file=True)
2025-03-06 14:37:07,694 [DEBUG] py4...: ǀCalling get_network_suid(178787, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,694 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,694 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:07,698 [DEBUG] py4...: ǀǀOK[200], content: [178787,178967,179183,179519,179837]
2025-03-06 14:37:07,698 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [178787, 178967, 179183, 179519, 179837]
2025-03-06 14:37:07,698 [DEBUG] py4...: ǀReturning 'get_network_suid': 178787
2025-03-06 14:37:07,698 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,698 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,698 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml'}
2025-03-06 14:37:07,702 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml","modifiedTime":"2025-03-06 13:59:44.0652","isFile":true},
 "errors":[]
}
2025-03-06 14:37:07,702 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', 'modifiedTime': '2025-03-06 13:59:44.0652', 'isFile': True}
2025-03-06 14:37:07,702 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', 'modifiedTime': '2025-03-06 13:59:44.0652', 'isFile': True}
2025-03-06 14:37:07,702 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,702 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,702 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml'}
2025-03-06 14:37:07,705 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:07,705 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', 'existed': True}
2025-03-06 14:37:07,705 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml', 'existed': True}
2025-03-06 14:37:07,706 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:178787" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,706 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:178787', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml'}
2025-03-06 14:37:07,711 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml"},
 "errors":[]
}
2025-03-06 14:37:07,711 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml'}
2025-03-06 14:37:07,711 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbapenem biosynthesis [bvu00332].graphml'}
2025-03-06 14:37:07,711 [DEBUG] py4...: --------------------
2025-03-06 14:37:07,711 [DEBUG] py4...: Calling export_network('networks_graphml/Monobactam biosynthesis [bvu00261].graphml', 'graphml', network=178967, overwrite_file=True)
2025-03-06 14:37:07,711 [DEBUG] py4...: ǀCalling get_network_suid(178967, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,711 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,711 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:07,717 [DEBUG] py4...: ǀǀOK[200], content: [178787,178967,179183,179519,179837]
2025-03-06 14:37:07,718 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [178787, 178967, 179183, 179519, 179837]
2025-03-06 14:37:07,718 [DEBUG] py4...: ǀReturning 'get_network_suid': 178967
2025-03-06 14:37:07,718 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Monobactam biosynthesis [bvu00261].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,718 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,718 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml'}
2025-03-06 14:37:07,726 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml","modifiedTime":"2025-03-06 13:59:44.0679","isFile":true},
 "errors":[]
}
2025-03-06 14:37:07,726 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml', 'modifiedTime': '2025-03-06 13:59:44.0679', 'isFile': True}
2025-03-06 14:37:07,726 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml', 'modifiedTime': '2025-03-06 13:59:44.0679', 'isFile': True}
2025-03-06 14:37:07,726 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Monobactam biosynthesis [bvu00261].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,726 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,726 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml'}
2025-03-06 14:37:07,729 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:07,729 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml', 'existed': True}
2025-03-06 14:37:07,729 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml', 'existed': True}
2025-03-06 14:37:07,729 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:178967" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,729 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:178967', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml'}
2025-03-06 14:37:07,735 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml"},
 "errors":[]
}
2025-03-06 14:37:07,735 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml'}
2025-03-06 14:37:07,735 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Monobactam biosynthesis [bvu00261].graphml'}
2025-03-06 14:37:07,735 [DEBUG] py4...: --------------------
2025-03-06 14:37:07,735 [DEBUG] py4...: Calling export_network('networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', 'graphml', network=179183, overwrite_file=True)
2025-03-06 14:37:07,735 [DEBUG] py4...: ǀCalling get_network_suid(179183, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,735 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,736 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:07,740 [DEBUG] py4...: ǀǀOK[200], content: [178787,178967,179183,179519,179837]
2025-03-06 14:37:07,740 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [178787, 178967, 179183, 179519, 179837]
2025-03-06 14:37:07,740 [DEBUG] py4...: ǀReturning 'get_network_suid': 179183
2025-03-06 14:37:07,740 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,740 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,740 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml'}
2025-03-06 14:37:07,744 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml","modifiedTime":"2025-03-06 13:59:44.0597","isFile":true},
 "errors":[]
}
2025-03-06 14:37:07,744 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', 'modifiedTime': '2025-03-06 13:59:44.0597', 'isFile': True}
2025-03-06 14:37:07,744 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', 'modifiedTime': '2025-03-06 13:59:44.0597', 'isFile': True}
2025-03-06 14:37:07,744 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,744 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,744 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml'}
2025-03-06 14:37:07,747 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:07,748 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', 'existed': True}
2025-03-06 14:37:07,748 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml', 'existed': True}
2025-03-06 14:37:07,748 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:179183" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,748 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:179183', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml'}
2025-03-06 14:37:07,753 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml"},
 "errors":[]
}
2025-03-06 14:37:07,754 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml'}
2025-03-06 14:37:07,754 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Terpenoid backbone biosynthesis [bvu00900].graphml'}
2025-03-06 14:37:07,754 [DEBUG] py4...: --------------------
2025-03-06 14:37:07,754 [DEBUG] py4...: Calling export_network('networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', 'graphml', network=179519, overwrite_file=True)
2025-03-06 14:37:07,754 [DEBUG] py4...: ǀCalling get_network_suid(179519, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,754 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,754 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:07,758 [DEBUG] py4...: ǀǀOK[200], content: [178787,178967,179183,179519,179837]
2025-03-06 14:37:07,758 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [178787, 178967, 179183, 179519, 179837]
2025-03-06 14:37:07,758 [DEBUG] py4...: ǀReturning 'get_network_suid': 179519
2025-03-06 14:37:07,758 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,759 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,759 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml'}
2025-03-06 14:37:07,764 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml","modifiedTime":"2025-03-06 13:59:44.0617","isFile":true},
 "errors":[]
}
2025-03-06 14:37:07,764 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', 'modifiedTime': '2025-03-06 13:59:44.0617', 'isFile': True}
2025-03-06 14:37:07,764 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', 'modifiedTime': '2025-03-06 13:59:44.0617', 'isFile': True}
2025-03-06 14:37:07,764 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,765 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,765 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml'}
2025-03-06 14:37:07,772 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:07,773 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', 'existed': True}
2025-03-06 14:37:07,773 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml', 'existed': True}
2025-03-06 14:37:07,773 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:179519" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,773 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:179519', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml'}
2025-03-06 14:37:07,781 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml"},
 "errors":[]
}
2025-03-06 14:37:07,782 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml'}
2025-03-06 14:37:07,782 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Polyketide sugar unit biosynthesis [bvu00523].graphml'}
2025-03-06 14:37:07,782 [DEBUG] py4...: --------------------
2025-03-06 14:37:07,782 [DEBUG] py4...: Calling export_network('networks_graphml/Degradation of flavonoids [bvu00946].graphml', 'graphml', network=179837, overwrite_file=True)
2025-03-06 14:37:07,782 [DEBUG] py4...: ǀCalling get_network_suid(179837, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,782 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,782 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:07,788 [DEBUG] py4...: ǀǀOK[200], content: [178787,178967,179183,179519,179837]
2025-03-06 14:37:07,788 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [178787, 178967, 179183, 179519, 179837]
2025-03-06 14:37:07,788 [DEBUG] py4...: ǀReturning 'get_network_suid': 179837
2025-03-06 14:37:07,788 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Degradation of flavonoids [bvu00946].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,788 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,789 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml'}
2025-03-06 14:37:07,798 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml","modifiedTime":"2025-03-06 13:59:44.0569","isFile":true},
 "errors":[]
}
2025-03-06 14:37:07,799 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml', 'modifiedTime': '2025-03-06 13:59:44.0569', 'isFile': True}
2025-03-06 14:37:07,799 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml', 'modifiedTime': '2025-03-06 13:59:44.0569', 'isFile': True}
2025-03-06 14:37:07,799 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Degradation of flavonoids [bvu00946].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,799 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,799 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml'}
2025-03-06 14:37:07,805 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:07,806 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml', 'existed': True}
2025-03-06 14:37:07,806 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml', 'existed': True}
2025-03-06 14:37:07,806 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:179837" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,806 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:179837', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml'}
2025-03-06 14:37:07,814 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml"},
 "errors":[]
}
2025-03-06 14:37:07,814 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml'}
2025-03-06 14:37:07,814 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Degradation of flavonoids [bvu00946].graphml'}
2025-03-06 14:37:07,814 [DEBUG] py4...: --------------------
2025-03-06 14:37:07,814 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_15.cys')
2025-03-06 14:37:07,814 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_15.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:07,814 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_15.cys'}
2025-03-06 14:37:08,648 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:08,648 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:08,648 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:08,648 [DEBUG] py4...: --------------------
2025-03-06 14:37:08,648 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:08,648 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,649 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:08,654 [DEBUG] py4...: ǀOK[200], content: [{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":184998},{"name":"Benzoate degradation [bvu00362]","SUID":185204},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":186004},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":185610},{"name":"Novobiocin biosynthesis [bvu00401]","SUID":185790}]
2025-03-06 14:37:08,654 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 184998}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 185204}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 186004}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 185610}, {'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 185790}]
2025-03-06 14:37:08,654 [DEBUG] py4...: Returning 'get_network_list': ['Acarbose and validamycin biosynthesis [bvu00525]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Streptomycin biosynthesis [bvu00521]', 'Novobiocin biosynthesis [bvu00401]']
2025-03-06 14:37:08,655 [DEBUG] py4...: --------------------
2025-03-06 14:37:08,655 [DEBUG] py4...: Calling get_network_suid('Acarbose and validamycin biosynthesis [bvu00525]')
2025-03-06 14:37:08,655 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,655 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,655 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:08,659 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":184998},{"name":"Benzoate degradation [bvu00362]","SUID":185204},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":186004},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":185610},{"name":"Novobiocin biosynthesis [bvu00401]","SUID":185790}]
2025-03-06 14:37:08,659 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 184998}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 185204}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 186004}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 185610}, {'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 185790}]
2025-03-06 14:37:08,660 [DEBUG] py4...: ǀReturning 'get_network_list': ['Acarbose and validamycin biosynthesis [bvu00525]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Streptomycin biosynthesis [bvu00521]', 'Novobiocin biosynthesis [bvu00401]']
2025-03-06 14:37:08,660 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Acarbose and validamycin biosynthesis [bvu00525]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,660 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Acarbose and validamycin biosynthesis [bvu00525]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:08,666 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 184998
}
],
 "errors":[]
}
2025-03-06 14:37:08,667 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 184998}]
2025-03-06 14:37:08,667 [DEBUG] py4...: Returning 'get_network_suid': 184998
2025-03-06 14:37:08,667 [DEBUG] py4...: --------------------
2025-03-06 14:37:08,667 [DEBUG] py4...: Calling get_network_suid('Benzoate degradation [bvu00362]')
2025-03-06 14:37:08,667 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,667 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,667 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:08,671 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":184998},{"name":"Benzoate degradation [bvu00362]","SUID":185204},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":186004},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":185610},{"name":"Novobiocin biosynthesis [bvu00401]","SUID":185790}]
2025-03-06 14:37:08,672 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 184998}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 185204}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 186004}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 185610}, {'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 185790}]
2025-03-06 14:37:08,672 [DEBUG] py4...: ǀReturning 'get_network_list': ['Acarbose and validamycin biosynthesis [bvu00525]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Streptomycin biosynthesis [bvu00521]', 'Novobiocin biosynthesis [bvu00401]']
2025-03-06 14:37:08,672 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Benzoate degradation [bvu00362]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,672 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Benzoate degradation [bvu00362]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:08,679 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 185204
}
],
 "errors":[]
}
2025-03-06 14:37:08,680 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 185204}]
2025-03-06 14:37:08,680 [DEBUG] py4...: Returning 'get_network_suid': 185204
2025-03-06 14:37:08,680 [DEBUG] py4...: --------------------
2025-03-06 14:37:08,680 [DEBUG] py4...: Calling get_network_suid('Biosynthesis of various plant secondary metabolites [bvu00999]')
2025-03-06 14:37:08,680 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,680 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,680 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:08,684 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":184998},{"name":"Benzoate degradation [bvu00362]","SUID":185204},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":186004},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":185610},{"name":"Novobiocin biosynthesis [bvu00401]","SUID":185790}]
2025-03-06 14:37:08,685 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 184998}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 185204}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 186004}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 185610}, {'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 185790}]
2025-03-06 14:37:08,685 [DEBUG] py4...: ǀReturning 'get_network_list': ['Acarbose and validamycin biosynthesis [bvu00525]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Streptomycin biosynthesis [bvu00521]', 'Novobiocin biosynthesis [bvu00401]']
2025-03-06 14:37:08,685 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Biosynthesis of various plant secondary metabolites [bvu00999]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,685 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:08,691 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 186004
}
],
 "errors":[]
}
2025-03-06 14:37:08,691 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 186004}]
2025-03-06 14:37:08,691 [DEBUG] py4...: Returning 'get_network_suid': 186004
2025-03-06 14:37:08,691 [DEBUG] py4...: --------------------
2025-03-06 14:37:08,692 [DEBUG] py4...: Calling get_network_suid('Streptomycin biosynthesis [bvu00521]')
2025-03-06 14:37:08,692 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,692 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,692 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:08,697 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":184998},{"name":"Benzoate degradation [bvu00362]","SUID":185204},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":186004},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":185610},{"name":"Novobiocin biosynthesis [bvu00401]","SUID":185790}]
2025-03-06 14:37:08,697 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 184998}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 185204}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 186004}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 185610}, {'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 185790}]
2025-03-06 14:37:08,698 [DEBUG] py4...: ǀReturning 'get_network_list': ['Acarbose and validamycin biosynthesis [bvu00525]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Streptomycin biosynthesis [bvu00521]', 'Novobiocin biosynthesis [bvu00401]']
2025-03-06 14:37:08,698 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Streptomycin biosynthesis [bvu00521]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,698 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Streptomycin biosynthesis [bvu00521]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:08,703 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 185610
}
],
 "errors":[]
}
2025-03-06 14:37:08,704 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 185610}]
2025-03-06 14:37:08,704 [DEBUG] py4...: Returning 'get_network_suid': 185610
2025-03-06 14:37:08,704 [DEBUG] py4...: --------------------
2025-03-06 14:37:08,706 [DEBUG] py4...: Calling get_network_suid('Novobiocin biosynthesis [bvu00401]')
2025-03-06 14:37:08,706 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,706 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,707 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:08,712 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Acarbose and validamycin biosynthesis [bvu00525]","SUID":184998},{"name":"Benzoate degradation [bvu00362]","SUID":185204},{"name":"Biosynthesis of various plant secondary metabolites [bvu00999]","SUID":186004},{"name":"Streptomycin biosynthesis [bvu00521]","SUID":185610},{"name":"Novobiocin biosynthesis [bvu00401]","SUID":185790}]
2025-03-06 14:37:08,712 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Acarbose and validamycin biosynthesis [bvu00525]', 'SUID': 184998}, {'name': 'Benzoate degradation [bvu00362]', 'SUID': 185204}, {'name': 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'SUID': 186004}, {'name': 'Streptomycin biosynthesis [bvu00521]', 'SUID': 185610}, {'name': 'Novobiocin biosynthesis [bvu00401]', 'SUID': 185790}]
2025-03-06 14:37:08,712 [DEBUG] py4...: ǀReturning 'get_network_list': ['Acarbose and validamycin biosynthesis [bvu00525]', 'Benzoate degradation [bvu00362]', 'Biosynthesis of various plant secondary metabolites [bvu00999]', 'Streptomycin biosynthesis [bvu00521]', 'Novobiocin biosynthesis [bvu00401]']
2025-03-06 14:37:08,712 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Novobiocin biosynthesis [bvu00401]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,713 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Novobiocin biosynthesis [bvu00401]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:08,719 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 185790
}
],
 "errors":[]
}
2025-03-06 14:37:08,719 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 185790}]
2025-03-06 14:37:08,719 [DEBUG] py4...: Returning 'get_network_suid': 185790
2025-03-06 14:37:08,719 [DEBUG] py4...: --------------------
2025-03-06 14:37:08,719 [DEBUG] py4...: Calling export_network('networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', 'graphml', network=184998, overwrite_file=True)
2025-03-06 14:37:08,719 [DEBUG] py4...: ǀCalling get_network_suid(184998, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,720 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,720 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:08,725 [DEBUG] py4...: ǀǀOK[200], content: [184998,185204,186004,185610,185790]
2025-03-06 14:37:08,725 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [184998, 185204, 186004, 185610, 185790]
2025-03-06 14:37:08,725 [DEBUG] py4...: ǀReturning 'get_network_suid': 184998
2025-03-06 14:37:08,725 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,726 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,726 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml'}
2025-03-06 14:37:08,731 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml","modifiedTime":"2025-03-06 13:59:45.0738","isFile":true},
 "errors":[]
}
2025-03-06 14:37:08,731 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', 'modifiedTime': '2025-03-06 13:59:45.0738', 'isFile': True}
2025-03-06 14:37:08,731 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', 'modifiedTime': '2025-03-06 13:59:45.0738', 'isFile': True}
2025-03-06 14:37:08,731 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,731 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,732 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml'}
2025-03-06 14:37:08,737 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:08,738 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', 'existed': True}
2025-03-06 14:37:08,738 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml', 'existed': True}
2025-03-06 14:37:08,738 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:184998" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,738 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:184998', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml'}
2025-03-06 14:37:08,748 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml"},
 "errors":[]
}
2025-03-06 14:37:08,748 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml'}
2025-03-06 14:37:08,749 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Acarbose and validamycin biosynthesis [bvu00525].graphml'}
2025-03-06 14:37:08,749 [DEBUG] py4...: --------------------
2025-03-06 14:37:08,749 [DEBUG] py4...: Calling export_network('networks_graphml/Benzoate degradation [bvu00362].graphml', 'graphml', network=185204, overwrite_file=True)
2025-03-06 14:37:08,749 [DEBUG] py4...: ǀCalling get_network_suid(185204, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,749 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,749 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:08,756 [DEBUG] py4...: ǀǀOK[200], content: [184998,185204,186004,185610,185790]
2025-03-06 14:37:08,756 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [184998, 185204, 186004, 185610, 185790]
2025-03-06 14:37:08,756 [DEBUG] py4...: ǀReturning 'get_network_suid': 185204
2025-03-06 14:37:08,756 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Benzoate degradation [bvu00362].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,756 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,757 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml'}
2025-03-06 14:37:08,761 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml","modifiedTime":"2025-03-06 13:59:45.0773","isFile":true},
 "errors":[]
}
2025-03-06 14:37:08,761 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml', 'modifiedTime': '2025-03-06 13:59:45.0773', 'isFile': True}
2025-03-06 14:37:08,761 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml', 'modifiedTime': '2025-03-06 13:59:45.0773', 'isFile': True}
2025-03-06 14:37:08,761 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Benzoate degradation [bvu00362].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,762 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,762 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml'}
2025-03-06 14:37:08,766 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:08,767 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml', 'existed': True}
2025-03-06 14:37:08,767 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml', 'existed': True}
2025-03-06 14:37:08,767 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:185204" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,767 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:185204', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml'}
2025-03-06 14:37:08,775 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml"},
 "errors":[]
}
2025-03-06 14:37:08,776 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml'}
2025-03-06 14:37:08,776 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Benzoate degradation [bvu00362].graphml'}
2025-03-06 14:37:08,776 [DEBUG] py4...: --------------------
2025-03-06 14:37:08,776 [DEBUG] py4...: Calling export_network('networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', 'graphml', network=186004, overwrite_file=True)
2025-03-06 14:37:08,776 [DEBUG] py4...: ǀCalling get_network_suid(186004, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,776 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,776 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:08,780 [DEBUG] py4...: ǀǀOK[200], content: [184998,185204,186004,185610,185790]
2025-03-06 14:37:08,780 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [184998, 185204, 186004, 185610, 185790]
2025-03-06 14:37:08,780 [DEBUG] py4...: ǀReturning 'get_network_suid': 186004
2025-03-06 14:37:08,780 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,780 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,781 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml'}
2025-03-06 14:37:08,786 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml","modifiedTime":"2025-03-06 13:59:45.0802","isFile":true},
 "errors":[]
}
2025-03-06 14:37:08,786 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', 'modifiedTime': '2025-03-06 13:59:45.0802', 'isFile': True}
2025-03-06 14:37:08,786 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', 'modifiedTime': '2025-03-06 13:59:45.0802', 'isFile': True}
2025-03-06 14:37:08,786 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,786 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,786 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml'}
2025-03-06 14:37:08,791 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:08,791 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', 'existed': True}
2025-03-06 14:37:08,791 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml', 'existed': True}
2025-03-06 14:37:08,792 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:186004" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,792 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:186004', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml'}
2025-03-06 14:37:08,800 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml"},
 "errors":[]
}
2025-03-06 14:37:08,800 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml'}
2025-03-06 14:37:08,801 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Biosynthesis of various plant secondary metabolites [bvu00999].graphml'}
2025-03-06 14:37:08,801 [DEBUG] py4...: --------------------
2025-03-06 14:37:08,801 [DEBUG] py4...: Calling export_network('networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', 'graphml', network=185610, overwrite_file=True)
2025-03-06 14:37:08,801 [DEBUG] py4...: ǀCalling get_network_suid(185610, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,801 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,801 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:08,806 [DEBUG] py4...: ǀǀOK[200], content: [184998,185204,186004,185610,185790]
2025-03-06 14:37:08,806 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [184998, 185204, 186004, 185610, 185790]
2025-03-06 14:37:08,806 [DEBUG] py4...: ǀReturning 'get_network_suid': 185610
2025-03-06 14:37:08,807 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,807 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,807 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml'}
2025-03-06 14:37:08,812 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml","modifiedTime":"2025-03-06 13:59:45.0824","isFile":true},
 "errors":[]
}
2025-03-06 14:37:08,813 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', 'modifiedTime': '2025-03-06 13:59:45.0824', 'isFile': True}
2025-03-06 14:37:08,813 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', 'modifiedTime': '2025-03-06 13:59:45.0824', 'isFile': True}
2025-03-06 14:37:08,813 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,813 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,813 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml'}
2025-03-06 14:37:08,820 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:08,820 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', 'existed': True}
2025-03-06 14:37:08,820 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml', 'existed': True}
2025-03-06 14:37:08,821 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:185610" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,821 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:185610', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml'}
2025-03-06 14:37:08,830 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml"},
 "errors":[]
}
2025-03-06 14:37:08,831 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml'}
2025-03-06 14:37:08,831 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Streptomycin biosynthesis [bvu00521].graphml'}
2025-03-06 14:37:08,831 [DEBUG] py4...: --------------------
2025-03-06 14:37:08,831 [DEBUG] py4...: Calling export_network('networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', 'graphml', network=185790, overwrite_file=True)
2025-03-06 14:37:08,831 [DEBUG] py4...: ǀCalling get_network_suid(185790, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,831 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,832 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:08,836 [DEBUG] py4...: ǀǀOK[200], content: [184998,185204,186004,185610,185790]
2025-03-06 14:37:08,836 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [184998, 185204, 186004, 185610, 185790]
2025-03-06 14:37:08,836 [DEBUG] py4...: ǀReturning 'get_network_suid': 185790
2025-03-06 14:37:08,836 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,836 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,837 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml'}
2025-03-06 14:37:08,843 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml","modifiedTime":"2025-03-06 13:59:45.0704","isFile":true},
 "errors":[]
}
2025-03-06 14:37:08,844 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', 'modifiedTime': '2025-03-06 13:59:45.0704', 'isFile': True}
2025-03-06 14:37:08,844 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', 'modifiedTime': '2025-03-06 13:59:45.0704', 'isFile': True}
2025-03-06 14:37:08,844 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,844 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,844 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml'}
2025-03-06 14:37:08,853 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:08,855 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', 'existed': True}
2025-03-06 14:37:08,856 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml', 'existed': True}
2025-03-06 14:37:08,856 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:185790" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,856 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:185790', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml'}
2025-03-06 14:37:08,864 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml"},
 "errors":[]
}
2025-03-06 14:37:08,864 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml'}
2025-03-06 14:37:08,865 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Novobiocin biosynthesis [bvu00401].graphml'}
2025-03-06 14:37:08,865 [DEBUG] py4...: --------------------
2025-03-06 14:37:08,865 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_8.cys')
2025-03-06 14:37:08,865 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_8.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:08,865 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_8.cys'}
2025-03-06 14:37:09,690 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:09,691 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:09,691 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:09,691 [DEBUG] py4...: --------------------
2025-03-06 14:37:09,691 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:09,691 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,692 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:09,697 [DEBUG] py4...: ǀOK[200], content: [{"name":"Tyrosine metabolism [bvu00350]","SUID":194162},{"name":"Histidine metabolism [bvu00340]","SUID":193872},{"name":"Arginine and proline metabolism [bvu00330]","SUID":193082},{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":192684},{"name":"Phenylalanine metabolism [bvu00360]","SUID":193564}]
2025-03-06 14:37:09,698 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 194162}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 193872}, {'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 193082}, {'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 192684}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 193564}]
2025-03-06 14:37:09,698 [DEBUG] py4...: Returning 'get_network_list': ['Tyrosine metabolism [bvu00350]', 'Histidine metabolism [bvu00340]', 'Arginine and proline metabolism [bvu00330]', 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]']
2025-03-06 14:37:09,698 [DEBUG] py4...: --------------------
2025-03-06 14:37:09,698 [DEBUG] py4...: Calling get_network_suid('Tyrosine metabolism [bvu00350]')
2025-03-06 14:37:09,698 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,699 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,699 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:09,707 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Tyrosine metabolism [bvu00350]","SUID":194162},{"name":"Histidine metabolism [bvu00340]","SUID":193872},{"name":"Arginine and proline metabolism [bvu00330]","SUID":193082},{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":192684},{"name":"Phenylalanine metabolism [bvu00360]","SUID":193564}]
2025-03-06 14:37:09,708 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 194162}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 193872}, {'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 193082}, {'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 192684}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 193564}]
2025-03-06 14:37:09,708 [DEBUG] py4...: ǀReturning 'get_network_list': ['Tyrosine metabolism [bvu00350]', 'Histidine metabolism [bvu00340]', 'Arginine and proline metabolism [bvu00330]', 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]']
2025-03-06 14:37:09,708 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Tyrosine metabolism [bvu00350]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,708 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Tyrosine metabolism [bvu00350]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:09,714 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 194162
}
],
 "errors":[]
}
2025-03-06 14:37:09,714 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 194162}]
2025-03-06 14:37:09,714 [DEBUG] py4...: Returning 'get_network_suid': 194162
2025-03-06 14:37:09,715 [DEBUG] py4...: --------------------
2025-03-06 14:37:09,715 [DEBUG] py4...: Calling get_network_suid('Histidine metabolism [bvu00340]')
2025-03-06 14:37:09,715 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,715 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,715 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:09,721 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Tyrosine metabolism [bvu00350]","SUID":194162},{"name":"Histidine metabolism [bvu00340]","SUID":193872},{"name":"Arginine and proline metabolism [bvu00330]","SUID":193082},{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":192684},{"name":"Phenylalanine metabolism [bvu00360]","SUID":193564}]
2025-03-06 14:37:09,721 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 194162}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 193872}, {'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 193082}, {'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 192684}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 193564}]
2025-03-06 14:37:09,722 [DEBUG] py4...: ǀReturning 'get_network_list': ['Tyrosine metabolism [bvu00350]', 'Histidine metabolism [bvu00340]', 'Arginine and proline metabolism [bvu00330]', 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]']
2025-03-06 14:37:09,722 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Histidine metabolism [bvu00340]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,722 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Histidine metabolism [bvu00340]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:09,732 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 193872
}
],
 "errors":[]
}
2025-03-06 14:37:09,732 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 193872}]
2025-03-06 14:37:09,733 [DEBUG] py4...: Returning 'get_network_suid': 193872
2025-03-06 14:37:09,733 [DEBUG] py4...: --------------------
2025-03-06 14:37:09,733 [DEBUG] py4...: Calling get_network_suid('Arginine and proline metabolism [bvu00330]')
2025-03-06 14:37:09,733 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,733 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,733 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:09,739 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Tyrosine metabolism [bvu00350]","SUID":194162},{"name":"Histidine metabolism [bvu00340]","SUID":193872},{"name":"Arginine and proline metabolism [bvu00330]","SUID":193082},{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":192684},{"name":"Phenylalanine metabolism [bvu00360]","SUID":193564}]
2025-03-06 14:37:09,740 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 194162}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 193872}, {'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 193082}, {'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 192684}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 193564}]
2025-03-06 14:37:09,741 [DEBUG] py4...: ǀReturning 'get_network_list': ['Tyrosine metabolism [bvu00350]', 'Histidine metabolism [bvu00340]', 'Arginine and proline metabolism [bvu00330]', 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]']
2025-03-06 14:37:09,741 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Arginine and proline metabolism [bvu00330]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,741 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Arginine and proline metabolism [bvu00330]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:09,748 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 193082
}
],
 "errors":[]
}
2025-03-06 14:37:09,751 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 193082}]
2025-03-06 14:37:09,752 [DEBUG] py4...: Returning 'get_network_suid': 193082
2025-03-06 14:37:09,752 [DEBUG] py4...: --------------------
2025-03-06 14:37:09,752 [DEBUG] py4...: Calling get_network_suid('Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]')
2025-03-06 14:37:09,752 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,752 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,752 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:09,757 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Tyrosine metabolism [bvu00350]","SUID":194162},{"name":"Histidine metabolism [bvu00340]","SUID":193872},{"name":"Arginine and proline metabolism [bvu00330]","SUID":193082},{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":192684},{"name":"Phenylalanine metabolism [bvu00360]","SUID":193564}]
2025-03-06 14:37:09,757 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 194162}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 193872}, {'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 193082}, {'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 192684}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 193564}]
2025-03-06 14:37:09,758 [DEBUG] py4...: ǀReturning 'get_network_list': ['Tyrosine metabolism [bvu00350]', 'Histidine metabolism [bvu00340]', 'Arginine and proline metabolism [bvu00330]', 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]']
2025-03-06 14:37:09,758 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,758 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:09,765 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 192684
}
],
 "errors":[]
}
2025-03-06 14:37:09,765 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 192684}]
2025-03-06 14:37:09,765 [DEBUG] py4...: Returning 'get_network_suid': 192684
2025-03-06 14:37:09,765 [DEBUG] py4...: --------------------
2025-03-06 14:37:09,765 [DEBUG] py4...: Calling get_network_suid('Phenylalanine metabolism [bvu00360]')
2025-03-06 14:37:09,765 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,766 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,766 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:09,770 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Tyrosine metabolism [bvu00350]","SUID":194162},{"name":"Histidine metabolism [bvu00340]","SUID":193872},{"name":"Arginine and proline metabolism [bvu00330]","SUID":193082},{"name":"Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]","SUID":192684},{"name":"Phenylalanine metabolism [bvu00360]","SUID":193564}]
2025-03-06 14:37:09,770 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Tyrosine metabolism [bvu00350]', 'SUID': 194162}, {'name': 'Histidine metabolism [bvu00340]', 'SUID': 193872}, {'name': 'Arginine and proline metabolism [bvu00330]', 'SUID': 193082}, {'name': 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'SUID': 192684}, {'name': 'Phenylalanine metabolism [bvu00360]', 'SUID': 193564}]
2025-03-06 14:37:09,770 [DEBUG] py4...: ǀReturning 'get_network_list': ['Tyrosine metabolism [bvu00350]', 'Histidine metabolism [bvu00340]', 'Arginine and proline metabolism [bvu00330]', 'Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400]', 'Phenylalanine metabolism [bvu00360]']
2025-03-06 14:37:09,770 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Phenylalanine metabolism [bvu00360]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,770 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Phenylalanine metabolism [bvu00360]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:09,774 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 193564
}
],
 "errors":[]
}
2025-03-06 14:37:09,774 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 193564}]
2025-03-06 14:37:09,774 [DEBUG] py4...: Returning 'get_network_suid': 193564
2025-03-06 14:37:09,774 [DEBUG] py4...: --------------------
2025-03-06 14:37:09,774 [DEBUG] py4...: Calling export_network('networks_graphml/Tyrosine metabolism [bvu00350].graphml', 'graphml', network=194162, overwrite_file=True)
2025-03-06 14:37:09,774 [DEBUG] py4...: ǀCalling get_network_suid(194162, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,774 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,774 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:09,777 [DEBUG] py4...: ǀǀOK[200], content: [194162,193872,193082,192684,193564]
2025-03-06 14:37:09,777 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [194162, 193872, 193082, 192684, 193564]
2025-03-06 14:37:09,778 [DEBUG] py4...: ǀReturning 'get_network_suid': 194162
2025-03-06 14:37:09,778 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Tyrosine metabolism [bvu00350].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,778 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,778 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml'}
2025-03-06 14:37:09,782 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml","modifiedTime":"2025-03-06 13:59:46.0989","isFile":true},
 "errors":[]
}
2025-03-06 14:37:09,783 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml', 'modifiedTime': '2025-03-06 13:59:46.0989', 'isFile': True}
2025-03-06 14:37:09,783 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml', 'modifiedTime': '2025-03-06 13:59:46.0989', 'isFile': True}
2025-03-06 14:37:09,783 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Tyrosine metabolism [bvu00350].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,783 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,783 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml'}
2025-03-06 14:37:09,788 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:09,788 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml', 'existed': True}
2025-03-06 14:37:09,788 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml', 'existed': True}
2025-03-06 14:37:09,788 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:194162" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,788 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:194162', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml'}
2025-03-06 14:37:09,795 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml"},
 "errors":[]
}
2025-03-06 14:37:09,795 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml'}
2025-03-06 14:37:09,796 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Tyrosine metabolism [bvu00350].graphml'}
2025-03-06 14:37:09,796 [DEBUG] py4...: --------------------
2025-03-06 14:37:09,796 [DEBUG] py4...: Calling export_network('networks_graphml/Histidine metabolism [bvu00340].graphml', 'graphml', network=193872, overwrite_file=True)
2025-03-06 14:37:09,796 [DEBUG] py4...: ǀCalling get_network_suid(193872, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,796 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,796 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:09,802 [DEBUG] py4...: ǀǀOK[200], content: [194162,193872,193082,192684,193564]
2025-03-06 14:37:09,802 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [194162, 193872, 193082, 192684, 193564]
2025-03-06 14:37:09,802 [DEBUG] py4...: ǀReturning 'get_network_suid': 193872
2025-03-06 14:37:09,803 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Histidine metabolism [bvu00340].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,803 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,803 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml'}
2025-03-06 14:37:09,808 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml","modifiedTime":"2025-03-06 13:59:47.0008","isFile":true},
 "errors":[]
}
2025-03-06 14:37:09,808 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml', 'modifiedTime': '2025-03-06 13:59:47.0008', 'isFile': True}
2025-03-06 14:37:09,808 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml', 'modifiedTime': '2025-03-06 13:59:47.0008', 'isFile': True}
2025-03-06 14:37:09,808 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Histidine metabolism [bvu00340].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,808 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,808 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml'}
2025-03-06 14:37:09,811 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:09,812 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml', 'existed': True}
2025-03-06 14:37:09,812 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml', 'existed': True}
2025-03-06 14:37:09,812 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:193872" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,812 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:193872', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml'}
2025-03-06 14:37:09,819 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml"},
 "errors":[]
}
2025-03-06 14:37:09,819 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml'}
2025-03-06 14:37:09,819 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Histidine metabolism [bvu00340].graphml'}
2025-03-06 14:37:09,819 [DEBUG] py4...: --------------------
2025-03-06 14:37:09,819 [DEBUG] py4...: Calling export_network('networks_graphml/Arginine and proline metabolism [bvu00330].graphml', 'graphml', network=193082, overwrite_file=True)
2025-03-06 14:37:09,819 [DEBUG] py4...: ǀCalling get_network_suid(193082, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,820 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,820 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:09,826 [DEBUG] py4...: ǀǀOK[200], content: [194162,193872,193082,192684,193564]
2025-03-06 14:37:09,826 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [194162, 193872, 193082, 192684, 193564]
2025-03-06 14:37:09,826 [DEBUG] py4...: ǀReturning 'get_network_suid': 193082
2025-03-06 14:37:09,826 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Arginine and proline metabolism [bvu00330].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,826 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,826 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml'}
2025-03-06 14:37:09,829 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml","modifiedTime":"2025-03-06 13:59:47.0034","isFile":true},
 "errors":[]
}
2025-03-06 14:37:09,829 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml', 'modifiedTime': '2025-03-06 13:59:47.0034', 'isFile': True}
2025-03-06 14:37:09,829 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml', 'modifiedTime': '2025-03-06 13:59:47.0034', 'isFile': True}
2025-03-06 14:37:09,829 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Arginine and proline metabolism [bvu00330].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,829 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,829 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml'}
2025-03-06 14:37:09,842 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:09,843 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml', 'existed': True}
2025-03-06 14:37:09,843 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml', 'existed': True}
2025-03-06 14:37:09,843 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:193082" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,843 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:193082', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml'}
2025-03-06 14:37:09,870 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml"},
 "errors":[]
}
2025-03-06 14:37:09,871 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml'}
2025-03-06 14:37:09,872 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine and proline metabolism [bvu00330].graphml'}
2025-03-06 14:37:09,872 [DEBUG] py4...: --------------------
2025-03-06 14:37:09,872 [DEBUG] py4...: Calling export_network('networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml', 'graphml', network=192684, overwrite_file=True)
2025-03-06 14:37:09,872 [DEBUG] py4...: ǀCalling get_network_suid(192684, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,872 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,872 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:09,875 [DEBUG] py4...: ǀǀOK[200], content: [194162,193872,193082,192684,193564]
2025-03-06 14:37:09,875 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [194162, 193872, 193082, 192684, 193564]
2025-03-06 14:37:09,875 [DEBUG] py4...: ǀReturning 'get_network_suid': 192684
2025-03-06 14:37:09,875 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,876 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,876 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml'}
2025-03-06 14:37:09,879 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml","modifiedTime":"2025-03-06 13:59:46.0944","isFile":true},
 "errors":[]
}
2025-03-06 14:37:09,879 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml', 'modifiedTime': '2025-03-06 13:59:46.0944', 'isFile': True}
2025-03-06 14:37:09,879 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml', 'modifiedTime': '2025-03-06 13:59:46.0944', 'isFile': True}
2025-03-06 14:37:09,879 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,879 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,880 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml'}
2025-03-06 14:37:09,883 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:09,884 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml', 'existed': True}
2025-03-06 14:37:09,884 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml', 'existed': True}
2025-03-06 14:37:09,884 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:192684" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,884 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:192684', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml'}
2025-03-06 14:37:09,890 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml"},
 "errors":[]
}
2025-03-06 14:37:09,890 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml'}
2025-03-06 14:37:09,890 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine, tyrosine and tryptophan biosynthesis [bvu00400].graphml'}
2025-03-06 14:37:09,891 [DEBUG] py4...: --------------------
2025-03-06 14:37:09,891 [DEBUG] py4...: Calling export_network('networks_graphml/Phenylalanine metabolism [bvu00360].graphml', 'graphml', network=193564, overwrite_file=True)
2025-03-06 14:37:09,891 [DEBUG] py4...: ǀCalling get_network_suid(193564, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,891 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,891 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:09,893 [DEBUG] py4...: ǀǀOK[200], content: [194162,193872,193082,192684,193564]
2025-03-06 14:37:09,894 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [194162, 193872, 193082, 192684, 193564]
2025-03-06 14:37:09,894 [DEBUG] py4...: ǀReturning 'get_network_suid': 193564
2025-03-06 14:37:09,894 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Phenylalanine metabolism [bvu00360].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,894 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,894 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml'}
2025-03-06 14:37:09,897 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml","modifiedTime":"2025-03-06 13:59:46.0968","isFile":true},
 "errors":[]
}
2025-03-06 14:37:09,897 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml', 'modifiedTime': '2025-03-06 13:59:46.0968', 'isFile': True}
2025-03-06 14:37:09,897 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml', 'modifiedTime': '2025-03-06 13:59:46.0968', 'isFile': True}
2025-03-06 14:37:09,897 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Phenylalanine metabolism [bvu00360].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,897 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,897 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml'}
2025-03-06 14:37:09,900 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:09,900 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml', 'existed': True}
2025-03-06 14:37:09,900 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml', 'existed': True}
2025-03-06 14:37:09,901 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:193564" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,901 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:193564', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml'}
2025-03-06 14:37:09,906 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml"},
 "errors":[]
}
2025-03-06 14:37:09,907 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml'}
2025-03-06 14:37:09,907 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Phenylalanine metabolism [bvu00360].graphml'}
2025-03-06 14:37:09,907 [DEBUG] py4...: --------------------
2025-03-06 14:37:09,907 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_17.cys')
2025-03-06 14:37:09,907 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_17.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:09,907 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_17.cys'}
2025-03-06 14:37:10,734 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:10,735 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:10,735 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:10,735 [DEBUG] py4...: --------------------
2025-03-06 14:37:10,735 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:10,735 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,736 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:10,741 [DEBUG] py4...: ǀOK[200], content: [{"name":"Sulfur relay system [bvu04122]","SUID":201875},{"name":"DNA replication [bvu03030]","SUID":202055},{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":202251},{"name":"Protein export [bvu03060]","SUID":201711},{"name":"RNA degradation [bvu03018]","SUID":201421}]
2025-03-06 14:37:10,741 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Sulfur relay system [bvu04122]', 'SUID': 201875}, {'name': 'DNA replication [bvu03030]', 'SUID': 202055}, {'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 202251}, {'name': 'Protein export [bvu03060]', 'SUID': 201711}, {'name': 'RNA degradation [bvu03018]', 'SUID': 201421}]
2025-03-06 14:37:10,741 [DEBUG] py4...: Returning 'get_network_list': ['Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]', 'Protein processing in endoplasmic reticulum [bvu04141]', 'Protein export [bvu03060]', 'RNA degradation [bvu03018]']
2025-03-06 14:37:10,741 [DEBUG] py4...: --------------------
2025-03-06 14:37:10,741 [DEBUG] py4...: Calling get_network_suid('Sulfur relay system [bvu04122]')
2025-03-06 14:37:10,742 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,742 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,742 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:10,746 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Sulfur relay system [bvu04122]","SUID":201875},{"name":"DNA replication [bvu03030]","SUID":202055},{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":202251},{"name":"Protein export [bvu03060]","SUID":201711},{"name":"RNA degradation [bvu03018]","SUID":201421}]
2025-03-06 14:37:10,747 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Sulfur relay system [bvu04122]', 'SUID': 201875}, {'name': 'DNA replication [bvu03030]', 'SUID': 202055}, {'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 202251}, {'name': 'Protein export [bvu03060]', 'SUID': 201711}, {'name': 'RNA degradation [bvu03018]', 'SUID': 201421}]
2025-03-06 14:37:10,747 [DEBUG] py4...: ǀReturning 'get_network_list': ['Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]', 'Protein processing in endoplasmic reticulum [bvu04141]', 'Protein export [bvu03060]', 'RNA degradation [bvu03018]']
2025-03-06 14:37:10,747 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Sulfur relay system [bvu04122]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,747 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Sulfur relay system [bvu04122]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:10,754 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 201875
}
],
 "errors":[]
}
2025-03-06 14:37:10,755 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 201875}]
2025-03-06 14:37:10,755 [DEBUG] py4...: Returning 'get_network_suid': 201875
2025-03-06 14:37:10,755 [DEBUG] py4...: --------------------
2025-03-06 14:37:10,755 [DEBUG] py4...: Calling get_network_suid('DNA replication [bvu03030]')
2025-03-06 14:37:10,755 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,755 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,756 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:10,761 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Sulfur relay system [bvu04122]","SUID":201875},{"name":"DNA replication [bvu03030]","SUID":202055},{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":202251},{"name":"Protein export [bvu03060]","SUID":201711},{"name":"RNA degradation [bvu03018]","SUID":201421}]
2025-03-06 14:37:10,762 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Sulfur relay system [bvu04122]', 'SUID': 201875}, {'name': 'DNA replication [bvu03030]', 'SUID': 202055}, {'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 202251}, {'name': 'Protein export [bvu03060]', 'SUID': 201711}, {'name': 'RNA degradation [bvu03018]', 'SUID': 201421}]
2025-03-06 14:37:10,762 [DEBUG] py4...: ǀReturning 'get_network_list': ['Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]', 'Protein processing in endoplasmic reticulum [bvu04141]', 'Protein export [bvu03060]', 'RNA degradation [bvu03018]']
2025-03-06 14:37:10,762 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="DNA replication [bvu03030]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,762 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'DNA replication [bvu03030]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:10,768 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 202055
}
],
 "errors":[]
}
2025-03-06 14:37:10,768 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 202055}]
2025-03-06 14:37:10,769 [DEBUG] py4...: Returning 'get_network_suid': 202055
2025-03-06 14:37:10,769 [DEBUG] py4...: --------------------
2025-03-06 14:37:10,769 [DEBUG] py4...: Calling get_network_suid('Protein processing in endoplasmic reticulum [bvu04141]')
2025-03-06 14:37:10,769 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,769 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,769 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:10,773 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Sulfur relay system [bvu04122]","SUID":201875},{"name":"DNA replication [bvu03030]","SUID":202055},{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":202251},{"name":"Protein export [bvu03060]","SUID":201711},{"name":"RNA degradation [bvu03018]","SUID":201421}]
2025-03-06 14:37:10,774 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Sulfur relay system [bvu04122]', 'SUID': 201875}, {'name': 'DNA replication [bvu03030]', 'SUID': 202055}, {'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 202251}, {'name': 'Protein export [bvu03060]', 'SUID': 201711}, {'name': 'RNA degradation [bvu03018]', 'SUID': 201421}]
2025-03-06 14:37:10,774 [DEBUG] py4...: ǀReturning 'get_network_list': ['Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]', 'Protein processing in endoplasmic reticulum [bvu04141]', 'Protein export [bvu03060]', 'RNA degradation [bvu03018]']
2025-03-06 14:37:10,774 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Protein processing in endoplasmic reticulum [bvu04141]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,774 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Protein processing in endoplasmic reticulum [bvu04141]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:10,779 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 202251
}
],
 "errors":[]
}
2025-03-06 14:37:10,780 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 202251}]
2025-03-06 14:37:10,780 [DEBUG] py4...: Returning 'get_network_suid': 202251
2025-03-06 14:37:10,780 [DEBUG] py4...: --------------------
2025-03-06 14:37:10,780 [DEBUG] py4...: Calling get_network_suid('Protein export [bvu03060]')
2025-03-06 14:37:10,780 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,780 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,780 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:10,785 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Sulfur relay system [bvu04122]","SUID":201875},{"name":"DNA replication [bvu03030]","SUID":202055},{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":202251},{"name":"Protein export [bvu03060]","SUID":201711},{"name":"RNA degradation [bvu03018]","SUID":201421}]
2025-03-06 14:37:10,786 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Sulfur relay system [bvu04122]', 'SUID': 201875}, {'name': 'DNA replication [bvu03030]', 'SUID': 202055}, {'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 202251}, {'name': 'Protein export [bvu03060]', 'SUID': 201711}, {'name': 'RNA degradation [bvu03018]', 'SUID': 201421}]
2025-03-06 14:37:10,786 [DEBUG] py4...: ǀReturning 'get_network_list': ['Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]', 'Protein processing in endoplasmic reticulum [bvu04141]', 'Protein export [bvu03060]', 'RNA degradation [bvu03018]']
2025-03-06 14:37:10,786 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Protein export [bvu03060]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,786 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Protein export [bvu03060]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:10,791 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 201711
}
],
 "errors":[]
}
2025-03-06 14:37:10,792 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 201711}]
2025-03-06 14:37:10,792 [DEBUG] py4...: Returning 'get_network_suid': 201711
2025-03-06 14:37:10,792 [DEBUG] py4...: --------------------
2025-03-06 14:37:10,792 [DEBUG] py4...: Calling get_network_suid('RNA degradation [bvu03018]')
2025-03-06 14:37:10,792 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,792 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,792 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:10,796 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Sulfur relay system [bvu04122]","SUID":201875},{"name":"DNA replication [bvu03030]","SUID":202055},{"name":"Protein processing in endoplasmic reticulum [bvu04141]","SUID":202251},{"name":"Protein export [bvu03060]","SUID":201711},{"name":"RNA degradation [bvu03018]","SUID":201421}]
2025-03-06 14:37:10,798 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Sulfur relay system [bvu04122]', 'SUID': 201875}, {'name': 'DNA replication [bvu03030]', 'SUID': 202055}, {'name': 'Protein processing in endoplasmic reticulum [bvu04141]', 'SUID': 202251}, {'name': 'Protein export [bvu03060]', 'SUID': 201711}, {'name': 'RNA degradation [bvu03018]', 'SUID': 201421}]
2025-03-06 14:37:10,798 [DEBUG] py4...: ǀReturning 'get_network_list': ['Sulfur relay system [bvu04122]', 'DNA replication [bvu03030]', 'Protein processing in endoplasmic reticulum [bvu04141]', 'Protein export [bvu03060]', 'RNA degradation [bvu03018]']
2025-03-06 14:37:10,798 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="RNA degradation [bvu03018]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,798 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'RNA degradation [bvu03018]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:10,804 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 201421
}
],
 "errors":[]
}
2025-03-06 14:37:10,804 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 201421}]
2025-03-06 14:37:10,805 [DEBUG] py4...: Returning 'get_network_suid': 201421
2025-03-06 14:37:10,805 [DEBUG] py4...: --------------------
2025-03-06 14:37:10,805 [DEBUG] py4...: Calling export_network('networks_graphml/Sulfur relay system [bvu04122].graphml', 'graphml', network=201875, overwrite_file=True)
2025-03-06 14:37:10,805 [DEBUG] py4...: ǀCalling get_network_suid(201875, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,805 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,805 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:10,811 [DEBUG] py4...: ǀǀOK[200], content: [201875,202055,202251,201711,201421]
2025-03-06 14:37:10,811 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [201875, 202055, 202251, 201711, 201421]
2025-03-06 14:37:10,811 [DEBUG] py4...: ǀReturning 'get_network_suid': 201875
2025-03-06 14:37:10,811 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Sulfur relay system [bvu04122].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,811 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,811 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml'}
2025-03-06 14:37:10,818 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml","modifiedTime":"2025-03-06 13:59:48.0087","isFile":true},
 "errors":[]
}
2025-03-06 14:37:10,818 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml', 'modifiedTime': '2025-03-06 13:59:48.0087', 'isFile': True}
2025-03-06 14:37:10,818 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml', 'modifiedTime': '2025-03-06 13:59:48.0087', 'isFile': True}
2025-03-06 14:37:10,818 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Sulfur relay system [bvu04122].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,818 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,819 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml'}
2025-03-06 14:37:10,826 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:10,826 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml', 'existed': True}
2025-03-06 14:37:10,826 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml', 'existed': True}
2025-03-06 14:37:10,826 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:201875" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,827 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:201875', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml'}
2025-03-06 14:37:10,834 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml"},
 "errors":[]
}
2025-03-06 14:37:10,834 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml'}
2025-03-06 14:37:10,834 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur relay system [bvu04122].graphml'}
2025-03-06 14:37:10,835 [DEBUG] py4...: --------------------
2025-03-06 14:37:10,835 [DEBUG] py4...: Calling export_network('networks_graphml/DNA replication [bvu03030].graphml', 'graphml', network=202055, overwrite_file=True)
2025-03-06 14:37:10,835 [DEBUG] py4...: ǀCalling get_network_suid(202055, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,835 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,835 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:10,842 [DEBUG] py4...: ǀǀOK[200], content: [201875,202055,202251,201711,201421]
2025-03-06 14:37:10,843 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [201875, 202055, 202251, 201711, 201421]
2025-03-06 14:37:10,843 [DEBUG] py4...: ǀReturning 'get_network_suid': 202055
2025-03-06 14:37:10,843 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/DNA replication [bvu03030].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,843 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,843 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml'}
2025-03-06 14:37:10,848 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml","modifiedTime":"2025-03-06 13:59:48.0101","isFile":true},
 "errors":[]
}
2025-03-06 14:37:10,848 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml', 'modifiedTime': '2025-03-06 13:59:48.0101', 'isFile': True}
2025-03-06 14:37:10,849 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml', 'modifiedTime': '2025-03-06 13:59:48.0101', 'isFile': True}
2025-03-06 14:37:10,849 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/DNA replication [bvu03030].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,849 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,849 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml'}
2025-03-06 14:37:10,861 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:10,863 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml', 'existed': True}
2025-03-06 14:37:10,863 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml', 'existed': True}
2025-03-06 14:37:10,863 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:202055" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,863 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:202055', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml'}
2025-03-06 14:37:10,873 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml"},
 "errors":[]
}
2025-03-06 14:37:10,873 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml'}
2025-03-06 14:37:10,873 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/DNA replication [bvu03030].graphml'}
2025-03-06 14:37:10,874 [DEBUG] py4...: --------------------
2025-03-06 14:37:10,874 [DEBUG] py4...: Calling export_network('networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml', 'graphml', network=202251, overwrite_file=True)
2025-03-06 14:37:10,874 [DEBUG] py4...: ǀCalling get_network_suid(202251, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,874 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,874 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:10,879 [DEBUG] py4...: ǀǀOK[200], content: [201875,202055,202251,201711,201421]
2025-03-06 14:37:10,879 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [201875, 202055, 202251, 201711, 201421]
2025-03-06 14:37:10,879 [DEBUG] py4...: ǀReturning 'get_network_suid': 202251
2025-03-06 14:37:10,879 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,879 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,879 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml'}
2025-03-06 14:37:10,882 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml","modifiedTime":"2025-03-06 13:59:48.0060","isFile":true},
 "errors":[]
}
2025-03-06 14:37:10,882 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml', 'modifiedTime': '2025-03-06 13:59:48.0060', 'isFile': True}
2025-03-06 14:37:10,882 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml', 'modifiedTime': '2025-03-06 13:59:48.0060', 'isFile': True}
2025-03-06 14:37:10,882 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,882 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,882 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml'}
2025-03-06 14:37:10,886 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:10,886 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml', 'existed': True}
2025-03-06 14:37:10,887 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml', 'existed': True}
2025-03-06 14:37:10,887 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:202251" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,887 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:202251', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml'}
2025-03-06 14:37:10,895 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml"},
 "errors":[]
}
2025-03-06 14:37:10,895 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml'}
2025-03-06 14:37:10,897 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein processing in endoplasmic reticulum [bvu04141].graphml'}
2025-03-06 14:37:10,898 [DEBUG] py4...: --------------------
2025-03-06 14:37:10,899 [DEBUG] py4...: Calling export_network('networks_graphml/Protein export [bvu03060].graphml', 'graphml', network=201711, overwrite_file=True)
2025-03-06 14:37:10,899 [DEBUG] py4...: ǀCalling get_network_suid(201711, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,899 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,899 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:10,902 [DEBUG] py4...: ǀǀOK[200], content: [201875,202055,202251,201711,201421]
2025-03-06 14:37:10,902 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [201875, 202055, 202251, 201711, 201421]
2025-03-06 14:37:10,902 [DEBUG] py4...: ǀReturning 'get_network_suid': 201711
2025-03-06 14:37:10,902 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Protein export [bvu03060].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,902 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,903 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml'}
2025-03-06 14:37:10,905 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml","modifiedTime":"2025-03-06 13:59:48.0075","isFile":true},
 "errors":[]
}
2025-03-06 14:37:10,905 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml', 'modifiedTime': '2025-03-06 13:59:48.0075', 'isFile': True}
2025-03-06 14:37:10,906 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml', 'modifiedTime': '2025-03-06 13:59:48.0075', 'isFile': True}
2025-03-06 14:37:10,906 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Protein export [bvu03060].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,906 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,906 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml'}
2025-03-06 14:37:10,909 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:10,909 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml', 'existed': True}
2025-03-06 14:37:10,910 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml', 'existed': True}
2025-03-06 14:37:10,910 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:201711" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,910 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:201711', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml'}
2025-03-06 14:37:10,916 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml"},
 "errors":[]
}
2025-03-06 14:37:10,917 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml'}
2025-03-06 14:37:10,917 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Protein export [bvu03060].graphml'}
2025-03-06 14:37:10,917 [DEBUG] py4...: --------------------
2025-03-06 14:37:10,917 [DEBUG] py4...: Calling export_network('networks_graphml/RNA degradation [bvu03018].graphml', 'graphml', network=201421, overwrite_file=True)
2025-03-06 14:37:10,917 [DEBUG] py4...: ǀCalling get_network_suid(201421, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,917 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,917 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:10,922 [DEBUG] py4...: ǀǀOK[200], content: [201875,202055,202251,201711,201421]
2025-03-06 14:37:10,922 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [201875, 202055, 202251, 201711, 201421]
2025-03-06 14:37:10,922 [DEBUG] py4...: ǀReturning 'get_network_suid': 201421
2025-03-06 14:37:10,922 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/RNA degradation [bvu03018].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,922 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,922 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml'}
2025-03-06 14:37:10,927 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml","modifiedTime":"2025-03-06 13:59:48.0010","isFile":true},
 "errors":[]
}
2025-03-06 14:37:10,927 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml', 'modifiedTime': '2025-03-06 13:59:48.0010', 'isFile': True}
2025-03-06 14:37:10,928 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml', 'modifiedTime': '2025-03-06 13:59:48.0010', 'isFile': True}
2025-03-06 14:37:10,928 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/RNA degradation [bvu03018].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,928 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,928 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml'}
2025-03-06 14:37:10,933 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:10,933 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml', 'existed': True}
2025-03-06 14:37:10,933 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml', 'existed': True}
2025-03-06 14:37:10,933 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:201421" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,933 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:201421', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml'}
2025-03-06 14:37:10,940 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml"},
 "errors":[]
}
2025-03-06 14:37:10,940 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml'}
2025-03-06 14:37:10,940 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA degradation [bvu03018].graphml'}
2025-03-06 14:37:10,941 [DEBUG] py4...: --------------------
2025-03-06 14:37:10,941 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_16.cys')
2025-03-06 14:37:10,941 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_16.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:10,941 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_16.cys'}
2025-03-06 14:37:11,773 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:11,774 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:11,774 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:11,774 [DEBUG] py4...: --------------------
2025-03-06 14:37:11,774 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:11,775 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,775 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:11,784 [DEBUG] py4...: ǀOK[200], content: [{"name":"Naphthalene degradation [bvu00626]","SUID":207298},{"name":"Ribosome [bvu03010]","SUID":206656},{"name":"Chloroalkane and chloroalkene degradation [bvu00625]","SUID":207076},{"name":"Aminoacyl-tRNA biosynthesis [bvu00970]","SUID":207738},{"name":"RNA polymerase [bvu03020]","SUID":207544}]
2025-03-06 14:37:11,784 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Naphthalene degradation [bvu00626]', 'SUID': 207298}, {'name': 'Ribosome [bvu03010]', 'SUID': 206656}, {'name': 'Chloroalkane and chloroalkene degradation [bvu00625]', 'SUID': 207076}, {'name': 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'SUID': 207738}, {'name': 'RNA polymerase [bvu03020]', 'SUID': 207544}]
2025-03-06 14:37:11,784 [DEBUG] py4...: Returning 'get_network_list': ['Naphthalene degradation [bvu00626]', 'Ribosome [bvu03010]', 'Chloroalkane and chloroalkene degradation [bvu00625]', 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'RNA polymerase [bvu03020]']
2025-03-06 14:37:11,785 [DEBUG] py4...: --------------------
2025-03-06 14:37:11,785 [DEBUG] py4...: Calling get_network_suid('Naphthalene degradation [bvu00626]')
2025-03-06 14:37:11,785 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,785 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,785 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:11,790 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Naphthalene degradation [bvu00626]","SUID":207298},{"name":"Ribosome [bvu03010]","SUID":206656},{"name":"Chloroalkane and chloroalkene degradation [bvu00625]","SUID":207076},{"name":"Aminoacyl-tRNA biosynthesis [bvu00970]","SUID":207738},{"name":"RNA polymerase [bvu03020]","SUID":207544}]
2025-03-06 14:37:11,791 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Naphthalene degradation [bvu00626]', 'SUID': 207298}, {'name': 'Ribosome [bvu03010]', 'SUID': 206656}, {'name': 'Chloroalkane and chloroalkene degradation [bvu00625]', 'SUID': 207076}, {'name': 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'SUID': 207738}, {'name': 'RNA polymerase [bvu03020]', 'SUID': 207544}]
2025-03-06 14:37:11,791 [DEBUG] py4...: ǀReturning 'get_network_list': ['Naphthalene degradation [bvu00626]', 'Ribosome [bvu03010]', 'Chloroalkane and chloroalkene degradation [bvu00625]', 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'RNA polymerase [bvu03020]']
2025-03-06 14:37:11,791 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Naphthalene degradation [bvu00626]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,791 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Naphthalene degradation [bvu00626]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:11,797 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 207298
}
],
 "errors":[]
}
2025-03-06 14:37:11,798 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 207298}]
2025-03-06 14:37:11,798 [DEBUG] py4...: Returning 'get_network_suid': 207298
2025-03-06 14:37:11,798 [DEBUG] py4...: --------------------
2025-03-06 14:37:11,798 [DEBUG] py4...: Calling get_network_suid('Ribosome [bvu03010]')
2025-03-06 14:37:11,798 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,798 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,799 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:11,804 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Naphthalene degradation [bvu00626]","SUID":207298},{"name":"Ribosome [bvu03010]","SUID":206656},{"name":"Chloroalkane and chloroalkene degradation [bvu00625]","SUID":207076},{"name":"Aminoacyl-tRNA biosynthesis [bvu00970]","SUID":207738},{"name":"RNA polymerase [bvu03020]","SUID":207544}]
2025-03-06 14:37:11,805 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Naphthalene degradation [bvu00626]', 'SUID': 207298}, {'name': 'Ribosome [bvu03010]', 'SUID': 206656}, {'name': 'Chloroalkane and chloroalkene degradation [bvu00625]', 'SUID': 207076}, {'name': 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'SUID': 207738}, {'name': 'RNA polymerase [bvu03020]', 'SUID': 207544}]
2025-03-06 14:37:11,805 [DEBUG] py4...: ǀReturning 'get_network_list': ['Naphthalene degradation [bvu00626]', 'Ribosome [bvu03010]', 'Chloroalkane and chloroalkene degradation [bvu00625]', 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'RNA polymerase [bvu03020]']
2025-03-06 14:37:11,805 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Ribosome [bvu03010]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,805 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Ribosome [bvu03010]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:11,813 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 206656
}
],
 "errors":[]
}
2025-03-06 14:37:11,814 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 206656}]
2025-03-06 14:37:11,814 [DEBUG] py4...: Returning 'get_network_suid': 206656
2025-03-06 14:37:11,814 [DEBUG] py4...: --------------------
2025-03-06 14:37:11,814 [DEBUG] py4...: Calling get_network_suid('Chloroalkane and chloroalkene degradation [bvu00625]')
2025-03-06 14:37:11,814 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,814 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,814 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:11,819 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Naphthalene degradation [bvu00626]","SUID":207298},{"name":"Ribosome [bvu03010]","SUID":206656},{"name":"Chloroalkane and chloroalkene degradation [bvu00625]","SUID":207076},{"name":"Aminoacyl-tRNA biosynthesis [bvu00970]","SUID":207738},{"name":"RNA polymerase [bvu03020]","SUID":207544}]
2025-03-06 14:37:11,820 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Naphthalene degradation [bvu00626]', 'SUID': 207298}, {'name': 'Ribosome [bvu03010]', 'SUID': 206656}, {'name': 'Chloroalkane and chloroalkene degradation [bvu00625]', 'SUID': 207076}, {'name': 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'SUID': 207738}, {'name': 'RNA polymerase [bvu03020]', 'SUID': 207544}]
2025-03-06 14:37:11,820 [DEBUG] py4...: ǀReturning 'get_network_list': ['Naphthalene degradation [bvu00626]', 'Ribosome [bvu03010]', 'Chloroalkane and chloroalkene degradation [bvu00625]', 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'RNA polymerase [bvu03020]']
2025-03-06 14:37:11,820 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Chloroalkane and chloroalkene degradation [bvu00625]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,820 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Chloroalkane and chloroalkene degradation [bvu00625]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:11,826 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 207076
}
],
 "errors":[]
}
2025-03-06 14:37:11,827 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 207076}]
2025-03-06 14:37:11,827 [DEBUG] py4...: Returning 'get_network_suid': 207076
2025-03-06 14:37:11,827 [DEBUG] py4...: --------------------
2025-03-06 14:37:11,827 [DEBUG] py4...: Calling get_network_suid('Aminoacyl-tRNA biosynthesis [bvu00970]')
2025-03-06 14:37:11,827 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,827 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,827 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:11,832 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Naphthalene degradation [bvu00626]","SUID":207298},{"name":"Ribosome [bvu03010]","SUID":206656},{"name":"Chloroalkane and chloroalkene degradation [bvu00625]","SUID":207076},{"name":"Aminoacyl-tRNA biosynthesis [bvu00970]","SUID":207738},{"name":"RNA polymerase [bvu03020]","SUID":207544}]
2025-03-06 14:37:11,832 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Naphthalene degradation [bvu00626]', 'SUID': 207298}, {'name': 'Ribosome [bvu03010]', 'SUID': 206656}, {'name': 'Chloroalkane and chloroalkene degradation [bvu00625]', 'SUID': 207076}, {'name': 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'SUID': 207738}, {'name': 'RNA polymerase [bvu03020]', 'SUID': 207544}]
2025-03-06 14:37:11,833 [DEBUG] py4...: ǀReturning 'get_network_list': ['Naphthalene degradation [bvu00626]', 'Ribosome [bvu03010]', 'Chloroalkane and chloroalkene degradation [bvu00625]', 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'RNA polymerase [bvu03020]']
2025-03-06 14:37:11,833 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Aminoacyl-tRNA biosynthesis [bvu00970]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,833 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:11,838 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 207738
}
],
 "errors":[]
}
2025-03-06 14:37:11,839 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 207738}]
2025-03-06 14:37:11,839 [DEBUG] py4...: Returning 'get_network_suid': 207738
2025-03-06 14:37:11,839 [DEBUG] py4...: --------------------
2025-03-06 14:37:11,840 [DEBUG] py4...: Calling get_network_suid('RNA polymerase [bvu03020]')
2025-03-06 14:37:11,840 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,840 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,840 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:11,845 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Naphthalene degradation [bvu00626]","SUID":207298},{"name":"Ribosome [bvu03010]","SUID":206656},{"name":"Chloroalkane and chloroalkene degradation [bvu00625]","SUID":207076},{"name":"Aminoacyl-tRNA biosynthesis [bvu00970]","SUID":207738},{"name":"RNA polymerase [bvu03020]","SUID":207544}]
2025-03-06 14:37:11,845 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Naphthalene degradation [bvu00626]', 'SUID': 207298}, {'name': 'Ribosome [bvu03010]', 'SUID': 206656}, {'name': 'Chloroalkane and chloroalkene degradation [bvu00625]', 'SUID': 207076}, {'name': 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'SUID': 207738}, {'name': 'RNA polymerase [bvu03020]', 'SUID': 207544}]
2025-03-06 14:37:11,846 [DEBUG] py4...: ǀReturning 'get_network_list': ['Naphthalene degradation [bvu00626]', 'Ribosome [bvu03010]', 'Chloroalkane and chloroalkene degradation [bvu00625]', 'Aminoacyl-tRNA biosynthesis [bvu00970]', 'RNA polymerase [bvu03020]']
2025-03-06 14:37:11,846 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="RNA polymerase [bvu03020]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,846 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'RNA polymerase [bvu03020]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:11,852 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 207544
}
],
 "errors":[]
}
2025-03-06 14:37:11,853 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 207544}]
2025-03-06 14:37:11,853 [DEBUG] py4...: Returning 'get_network_suid': 207544
2025-03-06 14:37:11,853 [DEBUG] py4...: --------------------
2025-03-06 14:37:11,853 [DEBUG] py4...: Calling export_network('networks_graphml/Naphthalene degradation [bvu00626].graphml', 'graphml', network=207298, overwrite_file=True)
2025-03-06 14:37:11,853 [DEBUG] py4...: ǀCalling get_network_suid(207298, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,853 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,853 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:11,858 [DEBUG] py4...: ǀǀOK[200], content: [207298,206656,207076,207738,207544]
2025-03-06 14:37:11,858 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [207298, 206656, 207076, 207738, 207544]
2025-03-06 14:37:11,858 [DEBUG] py4...: ǀReturning 'get_network_suid': 207298
2025-03-06 14:37:11,858 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Naphthalene degradation [bvu00626].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,858 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,859 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml'}
2025-03-06 14:37:11,864 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml","modifiedTime":"2025-03-06 13:59:49.0223","isFile":true},
 "errors":[]
}
2025-03-06 14:37:11,864 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml', 'modifiedTime': '2025-03-06 13:59:49.0223', 'isFile': True}
2025-03-06 14:37:11,865 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml', 'modifiedTime': '2025-03-06 13:59:49.0223', 'isFile': True}
2025-03-06 14:37:11,865 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Naphthalene degradation [bvu00626].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,865 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,865 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml'}
2025-03-06 14:37:11,872 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:11,873 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml', 'existed': True}
2025-03-06 14:37:11,873 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml', 'existed': True}
2025-03-06 14:37:11,873 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:207298" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,873 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:207298', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml'}
2025-03-06 14:37:11,889 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml"},
 "errors":[]
}
2025-03-06 14:37:11,890 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml'}
2025-03-06 14:37:11,890 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Naphthalene degradation [bvu00626].graphml'}
2025-03-06 14:37:11,890 [DEBUG] py4...: --------------------
2025-03-06 14:37:11,890 [DEBUG] py4...: Calling export_network('networks_graphml/Ribosome [bvu03010].graphml', 'graphml', network=206656, overwrite_file=True)
2025-03-06 14:37:11,890 [DEBUG] py4...: ǀCalling get_network_suid(206656, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,890 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,891 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:11,895 [DEBUG] py4...: ǀǀOK[200], content: [207298,206656,207076,207738,207544]
2025-03-06 14:37:11,896 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [207298, 206656, 207076, 207738, 207544]
2025-03-06 14:37:11,896 [DEBUG] py4...: ǀReturning 'get_network_suid': 206656
2025-03-06 14:37:11,896 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Ribosome [bvu03010].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,896 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,896 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml'}
2025-03-06 14:37:11,902 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml","modifiedTime":"2025-03-06 13:59:49.0259","isFile":true},
 "errors":[]
}
2025-03-06 14:37:11,902 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml', 'modifiedTime': '2025-03-06 13:59:49.0259', 'isFile': True}
2025-03-06 14:37:11,902 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml', 'modifiedTime': '2025-03-06 13:59:49.0259', 'isFile': True}
2025-03-06 14:37:11,903 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Ribosome [bvu03010].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,903 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,903 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml'}
2025-03-06 14:37:11,913 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:11,914 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml', 'existed': True}
2025-03-06 14:37:11,914 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml', 'existed': True}
2025-03-06 14:37:11,914 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:206656" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,914 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:206656', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml'}
2025-03-06 14:37:11,922 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml"},
 "errors":[]
}
2025-03-06 14:37:11,922 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml'}
2025-03-06 14:37:11,922 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Ribosome [bvu03010].graphml'}
2025-03-06 14:37:11,922 [DEBUG] py4...: --------------------
2025-03-06 14:37:11,922 [DEBUG] py4...: Calling export_network('networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml', 'graphml', network=207076, overwrite_file=True)
2025-03-06 14:37:11,922 [DEBUG] py4...: ǀCalling get_network_suid(207076, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,922 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,922 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:11,926 [DEBUG] py4...: ǀǀOK[200], content: [207298,206656,207076,207738,207544]
2025-03-06 14:37:11,927 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [207298, 206656, 207076, 207738, 207544]
2025-03-06 14:37:11,927 [DEBUG] py4...: ǀReturning 'get_network_suid': 207076
2025-03-06 14:37:11,927 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,927 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,927 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml'}
2025-03-06 14:37:11,932 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml","modifiedTime":"2025-03-06 13:59:49.0296","isFile":true},
 "errors":[]
}
2025-03-06 14:37:11,933 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml', 'modifiedTime': '2025-03-06 13:59:49.0296', 'isFile': True}
2025-03-06 14:37:11,933 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml', 'modifiedTime': '2025-03-06 13:59:49.0296', 'isFile': True}
2025-03-06 14:37:11,933 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,933 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,933 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml'}
2025-03-06 14:37:11,938 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:11,939 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml', 'existed': True}
2025-03-06 14:37:11,939 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml', 'existed': True}
2025-03-06 14:37:11,939 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:207076" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,940 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:207076', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml'}
2025-03-06 14:37:11,948 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml"},
 "errors":[]
}
2025-03-06 14:37:11,949 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml'}
2025-03-06 14:37:11,949 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Chloroalkane and chloroalkene degradation [bvu00625].graphml'}
2025-03-06 14:37:11,949 [DEBUG] py4...: --------------------
2025-03-06 14:37:11,949 [DEBUG] py4...: Calling export_network('networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml', 'graphml', network=207738, overwrite_file=True)
2025-03-06 14:37:11,949 [DEBUG] py4...: ǀCalling get_network_suid(207738, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,950 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,950 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:11,954 [DEBUG] py4...: ǀǀOK[200], content: [207298,206656,207076,207738,207544]
2025-03-06 14:37:11,954 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [207298, 206656, 207076, 207738, 207544]
2025-03-06 14:37:11,954 [DEBUG] py4...: ǀReturning 'get_network_suid': 207738
2025-03-06 14:37:11,954 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,954 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,954 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml'}
2025-03-06 14:37:11,961 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml","modifiedTime":"2025-03-06 13:59:49.0321","isFile":true},
 "errors":[]
}
2025-03-06 14:37:11,961 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml', 'modifiedTime': '2025-03-06 13:59:49.0321', 'isFile': True}
2025-03-06 14:37:11,961 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml', 'modifiedTime': '2025-03-06 13:59:49.0321', 'isFile': True}
2025-03-06 14:37:11,961 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,961 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,962 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml'}
2025-03-06 14:37:11,968 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:11,969 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml', 'existed': True}
2025-03-06 14:37:11,969 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml', 'existed': True}
2025-03-06 14:37:11,969 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:207738" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,969 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:207738', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml'}
2025-03-06 14:37:11,978 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml"},
 "errors":[]
}
2025-03-06 14:37:11,978 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml'}
2025-03-06 14:37:11,978 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Aminoacyl-tRNA biosynthesis [bvu00970].graphml'}
2025-03-06 14:37:11,978 [DEBUG] py4...: --------------------
2025-03-06 14:37:11,978 [DEBUG] py4...: Calling export_network('networks_graphml/RNA polymerase [bvu03020].graphml', 'graphml', network=207544, overwrite_file=True)
2025-03-06 14:37:11,978 [DEBUG] py4...: ǀCalling get_network_suid(207544, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,978 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,978 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:11,981 [DEBUG] py4...: ǀǀOK[200], content: [207298,206656,207076,207738,207544]
2025-03-06 14:37:11,981 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [207298, 206656, 207076, 207738, 207544]
2025-03-06 14:37:11,981 [DEBUG] py4...: ǀReturning 'get_network_suid': 207544
2025-03-06 14:37:11,981 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/RNA polymerase [bvu03020].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,981 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,981 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml'}
2025-03-06 14:37:11,984 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml","modifiedTime":"2025-03-06 13:59:49.0335","isFile":true},
 "errors":[]
}
2025-03-06 14:37:11,984 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml', 'modifiedTime': '2025-03-06 13:59:49.0335', 'isFile': True}
2025-03-06 14:37:11,984 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml', 'modifiedTime': '2025-03-06 13:59:49.0335', 'isFile': True}
2025-03-06 14:37:11,984 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/RNA polymerase [bvu03020].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,984 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,984 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml'}
2025-03-06 14:37:11,988 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:11,988 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml', 'existed': True}
2025-03-06 14:37:11,988 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml', 'existed': True}
2025-03-06 14:37:11,988 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:207544" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,988 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:207544', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml'}
2025-03-06 14:37:11,995 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml"},
 "errors":[]
}
2025-03-06 14:37:11,995 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml'}
2025-03-06 14:37:11,995 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/RNA polymerase [bvu03020].graphml'}
2025-03-06 14:37:11,995 [DEBUG] py4...: --------------------
2025-03-06 14:37:11,996 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_9.cys')
2025-03-06 14:37:11,996 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_9.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:11,996 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_9.cys'}
2025-03-06 14:37:12,858 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:12,860 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:12,860 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:12,860 [DEBUG] py4...: --------------------
2025-03-06 14:37:12,860 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:12,868 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,869 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:12,873 [DEBUG] py4...: ǀOK[200], content: [{"name":"beta-Alanine metabolism [bvu00410]","SUID":213939},{"name":"Cyanoamino acid metabolism [bvu00460]","SUID":214339},{"name":"Selenocompound metabolism [bvu00450]","SUID":214643},{"name":"Phosphonate and phosphinate metabolism [bvu00440]","SUID":213589},{"name":"Taurine and hypotaurine metabolism [bvu00430]","SUID":214155}]
2025-03-06 14:37:12,873 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'beta-Alanine metabolism [bvu00410]', 'SUID': 213939}, {'name': 'Cyanoamino acid metabolism [bvu00460]', 'SUID': 214339}, {'name': 'Selenocompound metabolism [bvu00450]', 'SUID': 214643}, {'name': 'Phosphonate and phosphinate metabolism [bvu00440]', 'SUID': 213589}, {'name': 'Taurine and hypotaurine metabolism [bvu00430]', 'SUID': 214155}]
2025-03-06 14:37:12,873 [DEBUG] py4...: Returning 'get_network_list': ['beta-Alanine metabolism [bvu00410]', 'Cyanoamino acid metabolism [bvu00460]', 'Selenocompound metabolism [bvu00450]', 'Phosphonate and phosphinate metabolism [bvu00440]', 'Taurine and hypotaurine metabolism [bvu00430]']
2025-03-06 14:37:12,874 [DEBUG] py4...: --------------------
2025-03-06 14:37:12,874 [DEBUG] py4...: Calling get_network_suid('beta-Alanine metabolism [bvu00410]')
2025-03-06 14:37:12,874 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,874 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,874 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:12,876 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"beta-Alanine metabolism [bvu00410]","SUID":213939},{"name":"Cyanoamino acid metabolism [bvu00460]","SUID":214339},{"name":"Selenocompound metabolism [bvu00450]","SUID":214643},{"name":"Phosphonate and phosphinate metabolism [bvu00440]","SUID":213589},{"name":"Taurine and hypotaurine metabolism [bvu00430]","SUID":214155}]
2025-03-06 14:37:12,876 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'beta-Alanine metabolism [bvu00410]', 'SUID': 213939}, {'name': 'Cyanoamino acid metabolism [bvu00460]', 'SUID': 214339}, {'name': 'Selenocompound metabolism [bvu00450]', 'SUID': 214643}, {'name': 'Phosphonate and phosphinate metabolism [bvu00440]', 'SUID': 213589}, {'name': 'Taurine and hypotaurine metabolism [bvu00430]', 'SUID': 214155}]
2025-03-06 14:37:12,876 [DEBUG] py4...: ǀReturning 'get_network_list': ['beta-Alanine metabolism [bvu00410]', 'Cyanoamino acid metabolism [bvu00460]', 'Selenocompound metabolism [bvu00450]', 'Phosphonate and phosphinate metabolism [bvu00440]', 'Taurine and hypotaurine metabolism [bvu00430]']
2025-03-06 14:37:12,876 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="beta-Alanine metabolism [bvu00410]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,876 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'beta-Alanine metabolism [bvu00410]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:12,880 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 213939
}
],
 "errors":[]
}
2025-03-06 14:37:12,880 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 213939}]
2025-03-06 14:37:12,880 [DEBUG] py4...: Returning 'get_network_suid': 213939
2025-03-06 14:37:12,880 [DEBUG] py4...: --------------------
2025-03-06 14:37:12,880 [DEBUG] py4...: Calling get_network_suid('Cyanoamino acid metabolism [bvu00460]')
2025-03-06 14:37:12,880 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,880 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,880 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:12,886 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"beta-Alanine metabolism [bvu00410]","SUID":213939},{"name":"Cyanoamino acid metabolism [bvu00460]","SUID":214339},{"name":"Selenocompound metabolism [bvu00450]","SUID":214643},{"name":"Phosphonate and phosphinate metabolism [bvu00440]","SUID":213589},{"name":"Taurine and hypotaurine metabolism [bvu00430]","SUID":214155}]
2025-03-06 14:37:12,887 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'beta-Alanine metabolism [bvu00410]', 'SUID': 213939}, {'name': 'Cyanoamino acid metabolism [bvu00460]', 'SUID': 214339}, {'name': 'Selenocompound metabolism [bvu00450]', 'SUID': 214643}, {'name': 'Phosphonate and phosphinate metabolism [bvu00440]', 'SUID': 213589}, {'name': 'Taurine and hypotaurine metabolism [bvu00430]', 'SUID': 214155}]
2025-03-06 14:37:12,888 [DEBUG] py4...: ǀReturning 'get_network_list': ['beta-Alanine metabolism [bvu00410]', 'Cyanoamino acid metabolism [bvu00460]', 'Selenocompound metabolism [bvu00450]', 'Phosphonate and phosphinate metabolism [bvu00440]', 'Taurine and hypotaurine metabolism [bvu00430]']
2025-03-06 14:37:12,888 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Cyanoamino acid metabolism [bvu00460]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,889 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Cyanoamino acid metabolism [bvu00460]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:12,896 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 214339
}
],
 "errors":[]
}
2025-03-06 14:37:12,897 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 214339}]
2025-03-06 14:37:12,897 [DEBUG] py4...: Returning 'get_network_suid': 214339
2025-03-06 14:37:12,897 [DEBUG] py4...: --------------------
2025-03-06 14:37:12,897 [DEBUG] py4...: Calling get_network_suid('Selenocompound metabolism [bvu00450]')
2025-03-06 14:37:12,897 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,897 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,898 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:12,902 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"beta-Alanine metabolism [bvu00410]","SUID":213939},{"name":"Cyanoamino acid metabolism [bvu00460]","SUID":214339},{"name":"Selenocompound metabolism [bvu00450]","SUID":214643},{"name":"Phosphonate and phosphinate metabolism [bvu00440]","SUID":213589},{"name":"Taurine and hypotaurine metabolism [bvu00430]","SUID":214155}]
2025-03-06 14:37:12,903 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'beta-Alanine metabolism [bvu00410]', 'SUID': 213939}, {'name': 'Cyanoamino acid metabolism [bvu00460]', 'SUID': 214339}, {'name': 'Selenocompound metabolism [bvu00450]', 'SUID': 214643}, {'name': 'Phosphonate and phosphinate metabolism [bvu00440]', 'SUID': 213589}, {'name': 'Taurine and hypotaurine metabolism [bvu00430]', 'SUID': 214155}]
2025-03-06 14:37:12,903 [DEBUG] py4...: ǀReturning 'get_network_list': ['beta-Alanine metabolism [bvu00410]', 'Cyanoamino acid metabolism [bvu00460]', 'Selenocompound metabolism [bvu00450]', 'Phosphonate and phosphinate metabolism [bvu00440]', 'Taurine and hypotaurine metabolism [bvu00430]']
2025-03-06 14:37:12,903 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Selenocompound metabolism [bvu00450]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,903 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Selenocompound metabolism [bvu00450]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:12,911 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 214643
}
],
 "errors":[]
}
2025-03-06 14:37:12,911 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 214643}]
2025-03-06 14:37:12,911 [DEBUG] py4...: Returning 'get_network_suid': 214643
2025-03-06 14:37:12,911 [DEBUG] py4...: --------------------
2025-03-06 14:37:12,912 [DEBUG] py4...: Calling get_network_suid('Phosphonate and phosphinate metabolism [bvu00440]')
2025-03-06 14:37:12,912 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,912 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,912 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:12,917 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"beta-Alanine metabolism [bvu00410]","SUID":213939},{"name":"Cyanoamino acid metabolism [bvu00460]","SUID":214339},{"name":"Selenocompound metabolism [bvu00450]","SUID":214643},{"name":"Phosphonate and phosphinate metabolism [bvu00440]","SUID":213589},{"name":"Taurine and hypotaurine metabolism [bvu00430]","SUID":214155}]
2025-03-06 14:37:12,917 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'beta-Alanine metabolism [bvu00410]', 'SUID': 213939}, {'name': 'Cyanoamino acid metabolism [bvu00460]', 'SUID': 214339}, {'name': 'Selenocompound metabolism [bvu00450]', 'SUID': 214643}, {'name': 'Phosphonate and phosphinate metabolism [bvu00440]', 'SUID': 213589}, {'name': 'Taurine and hypotaurine metabolism [bvu00430]', 'SUID': 214155}]
2025-03-06 14:37:12,917 [DEBUG] py4...: ǀReturning 'get_network_list': ['beta-Alanine metabolism [bvu00410]', 'Cyanoamino acid metabolism [bvu00460]', 'Selenocompound metabolism [bvu00450]', 'Phosphonate and phosphinate metabolism [bvu00440]', 'Taurine and hypotaurine metabolism [bvu00430]']
2025-03-06 14:37:12,918 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Phosphonate and phosphinate metabolism [bvu00440]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,918 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Phosphonate and phosphinate metabolism [bvu00440]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:12,924 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 213589
}
],
 "errors":[]
}
2025-03-06 14:37:12,924 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 213589}]
2025-03-06 14:37:12,925 [DEBUG] py4...: Returning 'get_network_suid': 213589
2025-03-06 14:37:12,925 [DEBUG] py4...: --------------------
2025-03-06 14:37:12,925 [DEBUG] py4...: Calling get_network_suid('Taurine and hypotaurine metabolism [bvu00430]')
2025-03-06 14:37:12,925 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,925 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,925 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:12,930 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"beta-Alanine metabolism [bvu00410]","SUID":213939},{"name":"Cyanoamino acid metabolism [bvu00460]","SUID":214339},{"name":"Selenocompound metabolism [bvu00450]","SUID":214643},{"name":"Phosphonate and phosphinate metabolism [bvu00440]","SUID":213589},{"name":"Taurine and hypotaurine metabolism [bvu00430]","SUID":214155}]
2025-03-06 14:37:12,930 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'beta-Alanine metabolism [bvu00410]', 'SUID': 213939}, {'name': 'Cyanoamino acid metabolism [bvu00460]', 'SUID': 214339}, {'name': 'Selenocompound metabolism [bvu00450]', 'SUID': 214643}, {'name': 'Phosphonate and phosphinate metabolism [bvu00440]', 'SUID': 213589}, {'name': 'Taurine and hypotaurine metabolism [bvu00430]', 'SUID': 214155}]
2025-03-06 14:37:12,930 [DEBUG] py4...: ǀReturning 'get_network_list': ['beta-Alanine metabolism [bvu00410]', 'Cyanoamino acid metabolism [bvu00460]', 'Selenocompound metabolism [bvu00450]', 'Phosphonate and phosphinate metabolism [bvu00440]', 'Taurine and hypotaurine metabolism [bvu00430]']
2025-03-06 14:37:12,930 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Taurine and hypotaurine metabolism [bvu00430]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,931 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Taurine and hypotaurine metabolism [bvu00430]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:12,943 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 214155
}
],
 "errors":[]
}
2025-03-06 14:37:12,944 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 214155}]
2025-03-06 14:37:12,944 [DEBUG] py4...: Returning 'get_network_suid': 214155
2025-03-06 14:37:12,944 [DEBUG] py4...: --------------------
2025-03-06 14:37:12,944 [DEBUG] py4...: Calling export_network('networks_graphml/beta-Alanine metabolism [bvu00410].graphml', 'graphml', network=213939, overwrite_file=True)
2025-03-06 14:37:12,944 [DEBUG] py4...: ǀCalling get_network_suid(213939, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,944 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,944 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:12,951 [DEBUG] py4...: ǀǀOK[200], content: [213939,214339,214643,213589,214155]
2025-03-06 14:37:12,952 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [213939, 214339, 214643, 213589, 214155]
2025-03-06 14:37:12,952 [DEBUG] py4...: ǀReturning 'get_network_suid': 213939
2025-03-06 14:37:12,952 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/beta-Alanine metabolism [bvu00410].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,952 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,952 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml'}
2025-03-06 14:37:12,957 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml","modifiedTime":"2025-03-06 13:59:50.0281","isFile":true},
 "errors":[]
}
2025-03-06 14:37:12,957 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml', 'modifiedTime': '2025-03-06 13:59:50.0281', 'isFile': True}
2025-03-06 14:37:12,957 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml', 'modifiedTime': '2025-03-06 13:59:50.0281', 'isFile': True}
2025-03-06 14:37:12,957 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/beta-Alanine metabolism [bvu00410].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,957 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,958 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml'}
2025-03-06 14:37:12,964 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:12,964 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml', 'existed': True}
2025-03-06 14:37:12,964 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml', 'existed': True}
2025-03-06 14:37:12,965 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:213939" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,965 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:213939', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml'}
2025-03-06 14:37:12,972 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml"},
 "errors":[]
}
2025-03-06 14:37:12,972 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml'}
2025-03-06 14:37:12,973 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Alanine metabolism [bvu00410].graphml'}
2025-03-06 14:37:12,973 [DEBUG] py4...: --------------------
2025-03-06 14:37:12,973 [DEBUG] py4...: Calling export_network('networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml', 'graphml', network=214339, overwrite_file=True)
2025-03-06 14:37:12,973 [DEBUG] py4...: ǀCalling get_network_suid(214339, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,973 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,973 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:12,977 [DEBUG] py4...: ǀǀOK[200], content: [213939,214339,214643,213589,214155]
2025-03-06 14:37:12,978 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [213939, 214339, 214643, 213589, 214155]
2025-03-06 14:37:12,978 [DEBUG] py4...: ǀReturning 'get_network_suid': 214339
2025-03-06 14:37:12,978 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,978 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,978 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml'}
2025-03-06 14:37:12,986 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml","modifiedTime":"2025-03-06 13:59:50.0310","isFile":true},
 "errors":[]
}
2025-03-06 14:37:12,986 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml', 'modifiedTime': '2025-03-06 13:59:50.0310', 'isFile': True}
2025-03-06 14:37:12,987 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml', 'modifiedTime': '2025-03-06 13:59:50.0310', 'isFile': True}
2025-03-06 14:37:12,987 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,987 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,987 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml'}
2025-03-06 14:37:12,993 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:12,993 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml', 'existed': True}
2025-03-06 14:37:12,993 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml', 'existed': True}
2025-03-06 14:37:12,993 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:214339" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:12,994 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:214339', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml'}
2025-03-06 14:37:13,002 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml"},
 "errors":[]
}
2025-03-06 14:37:13,009 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml'}
2025-03-06 14:37:13,009 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Cyanoamino acid metabolism [bvu00460].graphml'}
2025-03-06 14:37:13,009 [DEBUG] py4...: --------------------
2025-03-06 14:37:13,010 [DEBUG] py4...: Calling export_network('networks_graphml/Selenocompound metabolism [bvu00450].graphml', 'graphml', network=214643, overwrite_file=True)
2025-03-06 14:37:13,010 [DEBUG] py4...: ǀCalling get_network_suid(214643, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,010 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,010 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:13,016 [DEBUG] py4...: ǀǀOK[200], content: [213939,214339,214643,213589,214155]
2025-03-06 14:37:13,016 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [213939, 214339, 214643, 213589, 214155]
2025-03-06 14:37:13,016 [DEBUG] py4...: ǀReturning 'get_network_suid': 214643
2025-03-06 14:37:13,016 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Selenocompound metabolism [bvu00450].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,016 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,017 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml'}
2025-03-06 14:37:13,021 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml","modifiedTime":"2025-03-06 13:59:50.0333","isFile":true},
 "errors":[]
}
2025-03-06 14:37:13,022 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml', 'modifiedTime': '2025-03-06 13:59:50.0333', 'isFile': True}
2025-03-06 14:37:13,022 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml', 'modifiedTime': '2025-03-06 13:59:50.0333', 'isFile': True}
2025-03-06 14:37:13,022 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Selenocompound metabolism [bvu00450].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,022 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,022 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml'}
2025-03-06 14:37:13,025 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:13,025 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml', 'existed': True}
2025-03-06 14:37:13,025 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml', 'existed': True}
2025-03-06 14:37:13,025 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:214643" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,026 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:214643', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml'}
2025-03-06 14:37:13,037 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml"},
 "errors":[]
}
2025-03-06 14:37:13,037 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml'}
2025-03-06 14:37:13,037 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Selenocompound metabolism [bvu00450].graphml'}
2025-03-06 14:37:13,038 [DEBUG] py4...: --------------------
2025-03-06 14:37:13,038 [DEBUG] py4...: Calling export_network('networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml', 'graphml', network=213589, overwrite_file=True)
2025-03-06 14:37:13,038 [DEBUG] py4...: ǀCalling get_network_suid(213589, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,038 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,038 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:13,040 [DEBUG] py4...: ǀǀOK[200], content: [213939,214339,214643,213589,214155]
2025-03-06 14:37:13,040 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [213939, 214339, 214643, 213589, 214155]
2025-03-06 14:37:13,040 [DEBUG] py4...: ǀReturning 'get_network_suid': 213589
2025-03-06 14:37:13,040 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,041 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,041 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml'}
2025-03-06 14:37:13,044 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml","modifiedTime":"2025-03-06 13:59:50.0254","isFile":true},
 "errors":[]
}
2025-03-06 14:37:13,044 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml', 'modifiedTime': '2025-03-06 13:59:50.0254', 'isFile': True}
2025-03-06 14:37:13,044 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml', 'modifiedTime': '2025-03-06 13:59:50.0254', 'isFile': True}
2025-03-06 14:37:13,044 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,044 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,045 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml'}
2025-03-06 14:37:13,049 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:13,050 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml', 'existed': True}
2025-03-06 14:37:13,050 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml', 'existed': True}
2025-03-06 14:37:13,050 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:213589" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,050 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:213589', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml'}
2025-03-06 14:37:13,057 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml"},
 "errors":[]
}
2025-03-06 14:37:13,058 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml'}
2025-03-06 14:37:13,058 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Phosphonate and phosphinate metabolism [bvu00440].graphml'}
2025-03-06 14:37:13,058 [DEBUG] py4...: --------------------
2025-03-06 14:37:13,058 [DEBUG] py4...: Calling export_network('networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml', 'graphml', network=214155, overwrite_file=True)
2025-03-06 14:37:13,058 [DEBUG] py4...: ǀCalling get_network_suid(214155, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,058 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,058 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:13,062 [DEBUG] py4...: ǀǀOK[200], content: [213939,214339,214643,213589,214155]
2025-03-06 14:37:13,062 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [213939, 214339, 214643, 213589, 214155]
2025-03-06 14:37:13,062 [DEBUG] py4...: ǀReturning 'get_network_suid': 214155
2025-03-06 14:37:13,062 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,062 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,062 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml'}
2025-03-06 14:37:13,066 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml","modifiedTime":"2025-03-06 13:59:50.0235","isFile":true},
 "errors":[]
}
2025-03-06 14:37:13,066 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml', 'modifiedTime': '2025-03-06 13:59:50.0235', 'isFile': True}
2025-03-06 14:37:13,066 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml', 'modifiedTime': '2025-03-06 13:59:50.0235', 'isFile': True}
2025-03-06 14:37:13,066 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,066 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,066 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml'}
2025-03-06 14:37:13,069 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:13,070 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml', 'existed': True}
2025-03-06 14:37:13,070 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml', 'existed': True}
2025-03-06 14:37:13,070 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:214155" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,070 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:214155', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml'}
2025-03-06 14:37:13,078 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml"},
 "errors":[]
}
2025-03-06 14:37:13,078 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml'}
2025-03-06 14:37:13,078 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Taurine and hypotaurine metabolism [bvu00430].graphml'}
2025-03-06 14:37:13,078 [DEBUG] py4...: --------------------
2025-03-06 14:37:13,078 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_4.cys')
2025-03-06 14:37:13,079 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_4.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,079 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_4.cys'}
2025-03-06 14:37:13,947 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:13,949 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:13,949 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:13,949 [DEBUG] py4...: --------------------
2025-03-06 14:37:13,949 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:13,950 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,950 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:13,955 [DEBUG] py4...: ǀOK[200], content: [{"name":"Carbon fixation by Calvin cycle [bvu00710]","SUID":219472},{"name":"Sulfur metabolism [bvu00920]","SUID":220992},{"name":"Nitrogen metabolism [bvu00910]","SUID":219754},{"name":"Other carbon fixation pathways [bvu00720]","SUID":220060},{"name":"Methane metabolism [bvu00680]","SUID":220444}]
2025-03-06 14:37:13,956 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Carbon fixation by Calvin cycle [bvu00710]', 'SUID': 219472}, {'name': 'Sulfur metabolism [bvu00920]', 'SUID': 220992}, {'name': 'Nitrogen metabolism [bvu00910]', 'SUID': 219754}, {'name': 'Other carbon fixation pathways [bvu00720]', 'SUID': 220060}, {'name': 'Methane metabolism [bvu00680]', 'SUID': 220444}]
2025-03-06 14:37:13,956 [DEBUG] py4...: Returning 'get_network_list': ['Carbon fixation by Calvin cycle [bvu00710]', 'Sulfur metabolism [bvu00920]', 'Nitrogen metabolism [bvu00910]', 'Other carbon fixation pathways [bvu00720]', 'Methane metabolism [bvu00680]']
2025-03-06 14:37:13,956 [DEBUG] py4...: --------------------
2025-03-06 14:37:13,957 [DEBUG] py4...: Calling get_network_suid('Carbon fixation by Calvin cycle [bvu00710]')
2025-03-06 14:37:13,957 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,957 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,957 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:13,964 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Carbon fixation by Calvin cycle [bvu00710]","SUID":219472},{"name":"Sulfur metabolism [bvu00920]","SUID":220992},{"name":"Nitrogen metabolism [bvu00910]","SUID":219754},{"name":"Other carbon fixation pathways [bvu00720]","SUID":220060},{"name":"Methane metabolism [bvu00680]","SUID":220444}]
2025-03-06 14:37:13,965 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Carbon fixation by Calvin cycle [bvu00710]', 'SUID': 219472}, {'name': 'Sulfur metabolism [bvu00920]', 'SUID': 220992}, {'name': 'Nitrogen metabolism [bvu00910]', 'SUID': 219754}, {'name': 'Other carbon fixation pathways [bvu00720]', 'SUID': 220060}, {'name': 'Methane metabolism [bvu00680]', 'SUID': 220444}]
2025-03-06 14:37:13,965 [DEBUG] py4...: ǀReturning 'get_network_list': ['Carbon fixation by Calvin cycle [bvu00710]', 'Sulfur metabolism [bvu00920]', 'Nitrogen metabolism [bvu00910]', 'Other carbon fixation pathways [bvu00720]', 'Methane metabolism [bvu00680]']
2025-03-06 14:37:13,965 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Carbon fixation by Calvin cycle [bvu00710]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,965 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Carbon fixation by Calvin cycle [bvu00710]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:13,973 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 219472
}
],
 "errors":[]
}
2025-03-06 14:37:13,973 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 219472}]
2025-03-06 14:37:13,973 [DEBUG] py4...: Returning 'get_network_suid': 219472
2025-03-06 14:37:13,973 [DEBUG] py4...: --------------------
2025-03-06 14:37:13,974 [DEBUG] py4...: Calling get_network_suid('Sulfur metabolism [bvu00920]')
2025-03-06 14:37:13,974 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,974 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,974 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:13,978 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Carbon fixation by Calvin cycle [bvu00710]","SUID":219472},{"name":"Sulfur metabolism [bvu00920]","SUID":220992},{"name":"Nitrogen metabolism [bvu00910]","SUID":219754},{"name":"Other carbon fixation pathways [bvu00720]","SUID":220060},{"name":"Methane metabolism [bvu00680]","SUID":220444}]
2025-03-06 14:37:13,978 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Carbon fixation by Calvin cycle [bvu00710]', 'SUID': 219472}, {'name': 'Sulfur metabolism [bvu00920]', 'SUID': 220992}, {'name': 'Nitrogen metabolism [bvu00910]', 'SUID': 219754}, {'name': 'Other carbon fixation pathways [bvu00720]', 'SUID': 220060}, {'name': 'Methane metabolism [bvu00680]', 'SUID': 220444}]
2025-03-06 14:37:13,978 [DEBUG] py4...: ǀReturning 'get_network_list': ['Carbon fixation by Calvin cycle [bvu00710]', 'Sulfur metabolism [bvu00920]', 'Nitrogen metabolism [bvu00910]', 'Other carbon fixation pathways [bvu00720]', 'Methane metabolism [bvu00680]']
2025-03-06 14:37:13,979 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Sulfur metabolism [bvu00920]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,979 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Sulfur metabolism [bvu00920]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:13,988 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 220992
}
],
 "errors":[]
}
2025-03-06 14:37:13,988 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 220992}]
2025-03-06 14:37:13,989 [DEBUG] py4...: Returning 'get_network_suid': 220992
2025-03-06 14:37:13,989 [DEBUG] py4...: --------------------
2025-03-06 14:37:13,989 [DEBUG] py4...: Calling get_network_suid('Nitrogen metabolism [bvu00910]')
2025-03-06 14:37:13,989 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,990 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,990 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:13,993 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Carbon fixation by Calvin cycle [bvu00710]","SUID":219472},{"name":"Sulfur metabolism [bvu00920]","SUID":220992},{"name":"Nitrogen metabolism [bvu00910]","SUID":219754},{"name":"Other carbon fixation pathways [bvu00720]","SUID":220060},{"name":"Methane metabolism [bvu00680]","SUID":220444}]
2025-03-06 14:37:13,993 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Carbon fixation by Calvin cycle [bvu00710]', 'SUID': 219472}, {'name': 'Sulfur metabolism [bvu00920]', 'SUID': 220992}, {'name': 'Nitrogen metabolism [bvu00910]', 'SUID': 219754}, {'name': 'Other carbon fixation pathways [bvu00720]', 'SUID': 220060}, {'name': 'Methane metabolism [bvu00680]', 'SUID': 220444}]
2025-03-06 14:37:13,993 [DEBUG] py4...: ǀReturning 'get_network_list': ['Carbon fixation by Calvin cycle [bvu00710]', 'Sulfur metabolism [bvu00920]', 'Nitrogen metabolism [bvu00910]', 'Other carbon fixation pathways [bvu00720]', 'Methane metabolism [bvu00680]']
2025-03-06 14:37:13,993 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Nitrogen metabolism [bvu00910]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,993 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Nitrogen metabolism [bvu00910]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:13,997 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 219754
}
],
 "errors":[]
}
2025-03-06 14:37:13,997 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 219754}]
2025-03-06 14:37:13,997 [DEBUG] py4...: Returning 'get_network_suid': 219754
2025-03-06 14:37:13,997 [DEBUG] py4...: --------------------
2025-03-06 14:37:13,997 [DEBUG] py4...: Calling get_network_suid('Other carbon fixation pathways [bvu00720]')
2025-03-06 14:37:13,997 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,997 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:13,997 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:14,000 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Carbon fixation by Calvin cycle [bvu00710]","SUID":219472},{"name":"Sulfur metabolism [bvu00920]","SUID":220992},{"name":"Nitrogen metabolism [bvu00910]","SUID":219754},{"name":"Other carbon fixation pathways [bvu00720]","SUID":220060},{"name":"Methane metabolism [bvu00680]","SUID":220444}]
2025-03-06 14:37:14,000 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Carbon fixation by Calvin cycle [bvu00710]', 'SUID': 219472}, {'name': 'Sulfur metabolism [bvu00920]', 'SUID': 220992}, {'name': 'Nitrogen metabolism [bvu00910]', 'SUID': 219754}, {'name': 'Other carbon fixation pathways [bvu00720]', 'SUID': 220060}, {'name': 'Methane metabolism [bvu00680]', 'SUID': 220444}]
2025-03-06 14:37:14,000 [DEBUG] py4...: ǀReturning 'get_network_list': ['Carbon fixation by Calvin cycle [bvu00710]', 'Sulfur metabolism [bvu00920]', 'Nitrogen metabolism [bvu00910]', 'Other carbon fixation pathways [bvu00720]', 'Methane metabolism [bvu00680]']
2025-03-06 14:37:14,000 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Other carbon fixation pathways [bvu00720]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,000 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Other carbon fixation pathways [bvu00720]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:14,003 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 220060
}
],
 "errors":[]
}
2025-03-06 14:37:14,004 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 220060}]
2025-03-06 14:37:14,004 [DEBUG] py4...: Returning 'get_network_suid': 220060
2025-03-06 14:37:14,004 [DEBUG] py4...: --------------------
2025-03-06 14:37:14,004 [DEBUG] py4...: Calling get_network_suid('Methane metabolism [bvu00680]')
2025-03-06 14:37:14,004 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,004 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,004 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:14,008 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Carbon fixation by Calvin cycle [bvu00710]","SUID":219472},{"name":"Sulfur metabolism [bvu00920]","SUID":220992},{"name":"Nitrogen metabolism [bvu00910]","SUID":219754},{"name":"Other carbon fixation pathways [bvu00720]","SUID":220060},{"name":"Methane metabolism [bvu00680]","SUID":220444}]
2025-03-06 14:37:14,009 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Carbon fixation by Calvin cycle [bvu00710]', 'SUID': 219472}, {'name': 'Sulfur metabolism [bvu00920]', 'SUID': 220992}, {'name': 'Nitrogen metabolism [bvu00910]', 'SUID': 219754}, {'name': 'Other carbon fixation pathways [bvu00720]', 'SUID': 220060}, {'name': 'Methane metabolism [bvu00680]', 'SUID': 220444}]
2025-03-06 14:37:14,009 [DEBUG] py4...: ǀReturning 'get_network_list': ['Carbon fixation by Calvin cycle [bvu00710]', 'Sulfur metabolism [bvu00920]', 'Nitrogen metabolism [bvu00910]', 'Other carbon fixation pathways [bvu00720]', 'Methane metabolism [bvu00680]']
2025-03-06 14:37:14,009 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Methane metabolism [bvu00680]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,009 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Methane metabolism [bvu00680]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:14,016 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 220444
}
],
 "errors":[]
}
2025-03-06 14:37:14,017 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 220444}]
2025-03-06 14:37:14,017 [DEBUG] py4...: Returning 'get_network_suid': 220444
2025-03-06 14:37:14,017 [DEBUG] py4...: --------------------
2025-03-06 14:37:14,017 [DEBUG] py4...: Calling export_network('networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml', 'graphml', network=219472, overwrite_file=True)
2025-03-06 14:37:14,018 [DEBUG] py4...: ǀCalling get_network_suid(219472, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,018 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,018 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:14,021 [DEBUG] py4...: ǀǀOK[200], content: [219472,220992,219754,220060,220444]
2025-03-06 14:37:14,021 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [219472, 220992, 219754, 220060, 220444]
2025-03-06 14:37:14,021 [DEBUG] py4...: ǀReturning 'get_network_suid': 219472
2025-03-06 14:37:14,021 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,021 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,021 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml'}
2025-03-06 14:37:14,024 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml","modifiedTime":"2025-03-06 13:59:51.0450","isFile":true},
 "errors":[]
}
2025-03-06 14:37:14,024 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml', 'modifiedTime': '2025-03-06 13:59:51.0450', 'isFile': True}
2025-03-06 14:37:14,024 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml', 'modifiedTime': '2025-03-06 13:59:51.0450', 'isFile': True}
2025-03-06 14:37:14,024 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,024 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,025 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml'}
2025-03-06 14:37:14,029 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:14,029 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml', 'existed': True}
2025-03-06 14:37:14,029 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml', 'existed': True}
2025-03-06 14:37:14,029 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:219472" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,030 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:219472', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml'}
2025-03-06 14:37:14,040 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml"},
 "errors":[]
}
2025-03-06 14:37:14,040 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml'}
2025-03-06 14:37:14,040 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Carbon fixation by Calvin cycle [bvu00710].graphml'}
2025-03-06 14:37:14,040 [DEBUG] py4...: --------------------
2025-03-06 14:37:14,040 [DEBUG] py4...: Calling export_network('networks_graphml/Sulfur metabolism [bvu00920].graphml', 'graphml', network=220992, overwrite_file=True)
2025-03-06 14:37:14,040 [DEBUG] py4...: ǀCalling get_network_suid(220992, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,040 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,041 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:14,044 [DEBUG] py4...: ǀǀOK[200], content: [219472,220992,219754,220060,220444]
2025-03-06 14:37:14,044 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [219472, 220992, 219754, 220060, 220444]
2025-03-06 14:37:14,044 [DEBUG] py4...: ǀReturning 'get_network_suid': 220992
2025-03-06 14:37:14,044 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Sulfur metabolism [bvu00920].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,044 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,044 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml'}
2025-03-06 14:37:14,047 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml","modifiedTime":"2025-03-06 13:59:51.0476","isFile":true},
 "errors":[]
}
2025-03-06 14:37:14,048 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml', 'modifiedTime': '2025-03-06 13:59:51.0476', 'isFile': True}
2025-03-06 14:37:14,048 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml', 'modifiedTime': '2025-03-06 13:59:51.0476', 'isFile': True}
2025-03-06 14:37:14,048 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Sulfur metabolism [bvu00920].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,048 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,048 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml'}
2025-03-06 14:37:14,051 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:14,052 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml', 'existed': True}
2025-03-06 14:37:14,052 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml', 'existed': True}
2025-03-06 14:37:14,052 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:220992" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,052 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:220992', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml'}
2025-03-06 14:37:14,059 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml"},
 "errors":[]
}
2025-03-06 14:37:14,059 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml'}
2025-03-06 14:37:14,059 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Sulfur metabolism [bvu00920].graphml'}
2025-03-06 14:37:14,059 [DEBUG] py4...: --------------------
2025-03-06 14:37:14,059 [DEBUG] py4...: Calling export_network('networks_graphml/Nitrogen metabolism [bvu00910].graphml', 'graphml', network=219754, overwrite_file=True)
2025-03-06 14:37:14,059 [DEBUG] py4...: ǀCalling get_network_suid(219754, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,059 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,059 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:14,062 [DEBUG] py4...: ǀǀOK[200], content: [219472,220992,219754,220060,220444]
2025-03-06 14:37:14,062 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [219472, 220992, 219754, 220060, 220444]
2025-03-06 14:37:14,063 [DEBUG] py4...: ǀReturning 'get_network_suid': 219754
2025-03-06 14:37:14,063 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Nitrogen metabolism [bvu00910].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,063 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,063 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml'}
2025-03-06 14:37:14,069 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml","modifiedTime":"2025-03-06 13:59:51.0498","isFile":true},
 "errors":[]
}
2025-03-06 14:37:14,070 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml', 'modifiedTime': '2025-03-06 13:59:51.0498', 'isFile': True}
2025-03-06 14:37:14,070 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml', 'modifiedTime': '2025-03-06 13:59:51.0498', 'isFile': True}
2025-03-06 14:37:14,070 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Nitrogen metabolism [bvu00910].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,070 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,070 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml'}
2025-03-06 14:37:14,075 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:14,075 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml', 'existed': True}
2025-03-06 14:37:14,075 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml', 'existed': True}
2025-03-06 14:37:14,075 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:219754" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,075 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:219754', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml'}
2025-03-06 14:37:14,082 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml"},
 "errors":[]
}
2025-03-06 14:37:14,082 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml'}
2025-03-06 14:37:14,082 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Nitrogen metabolism [bvu00910].graphml'}
2025-03-06 14:37:14,082 [DEBUG] py4...: --------------------
2025-03-06 14:37:14,082 [DEBUG] py4...: Calling export_network('networks_graphml/Other carbon fixation pathways [bvu00720].graphml', 'graphml', network=220060, overwrite_file=True)
2025-03-06 14:37:14,082 [DEBUG] py4...: ǀCalling get_network_suid(220060, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,082 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,082 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:14,084 [DEBUG] py4...: ǀǀOK[200], content: [219472,220992,219754,220060,220444]
2025-03-06 14:37:14,085 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [219472, 220992, 219754, 220060, 220444]
2025-03-06 14:37:14,085 [DEBUG] py4...: ǀReturning 'get_network_suid': 220060
2025-03-06 14:37:14,085 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Other carbon fixation pathways [bvu00720].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,085 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,085 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml'}
2025-03-06 14:37:14,090 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml","modifiedTime":"2025-03-06 13:59:51.0408","isFile":true},
 "errors":[]
}
2025-03-06 14:37:14,091 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml', 'modifiedTime': '2025-03-06 13:59:51.0408', 'isFile': True}
2025-03-06 14:37:14,091 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml', 'modifiedTime': '2025-03-06 13:59:51.0408', 'isFile': True}
2025-03-06 14:37:14,091 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Other carbon fixation pathways [bvu00720].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,091 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,091 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml'}
2025-03-06 14:37:14,095 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:14,095 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml', 'existed': True}
2025-03-06 14:37:14,095 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml', 'existed': True}
2025-03-06 14:37:14,095 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:220060" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,096 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:220060', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml'}
2025-03-06 14:37:14,102 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml"},
 "errors":[]
}
2025-03-06 14:37:14,102 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml'}
2025-03-06 14:37:14,102 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Other carbon fixation pathways [bvu00720].graphml'}
2025-03-06 14:37:14,103 [DEBUG] py4...: --------------------
2025-03-06 14:37:14,103 [DEBUG] py4...: Calling export_network('networks_graphml/Methane metabolism [bvu00680].graphml', 'graphml', network=220444, overwrite_file=True)
2025-03-06 14:37:14,103 [DEBUG] py4...: ǀCalling get_network_suid(220444, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,103 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,103 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:14,107 [DEBUG] py4...: ǀǀOK[200], content: [219472,220992,219754,220060,220444]
2025-03-06 14:37:14,107 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [219472, 220992, 219754, 220060, 220444]
2025-03-06 14:37:14,107 [DEBUG] py4...: ǀReturning 'get_network_suid': 220444
2025-03-06 14:37:14,107 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Methane metabolism [bvu00680].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,107 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,108 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml'}
2025-03-06 14:37:14,111 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml","modifiedTime":"2025-03-06 13:59:51.0432","isFile":true},
 "errors":[]
}
2025-03-06 14:37:14,112 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml', 'modifiedTime': '2025-03-06 13:59:51.0432', 'isFile': True}
2025-03-06 14:37:14,112 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml', 'modifiedTime': '2025-03-06 13:59:51.0432', 'isFile': True}
2025-03-06 14:37:14,112 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Methane metabolism [bvu00680].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,112 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,112 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml'}
2025-03-06 14:37:14,118 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:14,118 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml', 'existed': True}
2025-03-06 14:37:14,118 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml', 'existed': True}
2025-03-06 14:37:14,119 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:220444" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,119 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:220444', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml'}
2025-03-06 14:37:14,125 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml"},
 "errors":[]
}
2025-03-06 14:37:14,125 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml'}
2025-03-06 14:37:14,125 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Methane metabolism [bvu00680].graphml'}
2025-03-06 14:37:14,125 [DEBUG] py4...: --------------------
2025-03-06 14:37:14,126 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_5.cys')
2025-03-06 14:37:14,126 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_5.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:14,126 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_5.cys'}
2025-03-06 14:37:15,011 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:15,012 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:15,012 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:15,012 [DEBUG] py4...: --------------------
2025-03-06 14:37:15,012 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:15,012 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,012 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:15,018 [DEBUG] py4...: ǀOK[200], content: [{"name":"Fatty acid degradation [bvu00071]","SUID":230097},{"name":"Secondary bile acid biosynthesis [bvu00121]","SUID":228795},{"name":"Glycerolipid metabolism [bvu00561]","SUID":230443},{"name":"Glycerophospholipid metabolism [bvu00564]","SUID":230699},{"name":"Fatty acid biosynthesis [bvu00061]","SUID":229081}]
2025-03-06 14:37:15,019 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Fatty acid degradation [bvu00071]', 'SUID': 230097}, {'name': 'Secondary bile acid biosynthesis [bvu00121]', 'SUID': 228795}, {'name': 'Glycerolipid metabolism [bvu00561]', 'SUID': 230443}, {'name': 'Glycerophospholipid metabolism [bvu00564]', 'SUID': 230699}, {'name': 'Fatty acid biosynthesis [bvu00061]', 'SUID': 229081}]
2025-03-06 14:37:15,019 [DEBUG] py4...: Returning 'get_network_list': ['Fatty acid degradation [bvu00071]', 'Secondary bile acid biosynthesis [bvu00121]', 'Glycerolipid metabolism [bvu00561]', 'Glycerophospholipid metabolism [bvu00564]', 'Fatty acid biosynthesis [bvu00061]']
2025-03-06 14:37:15,019 [DEBUG] py4...: --------------------
2025-03-06 14:37:15,020 [DEBUG] py4...: Calling get_network_suid('Fatty acid degradation [bvu00071]')
2025-03-06 14:37:15,020 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,020 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,020 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:15,033 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Fatty acid degradation [bvu00071]","SUID":230097},{"name":"Secondary bile acid biosynthesis [bvu00121]","SUID":228795},{"name":"Glycerolipid metabolism [bvu00561]","SUID":230443},{"name":"Glycerophospholipid metabolism [bvu00564]","SUID":230699},{"name":"Fatty acid biosynthesis [bvu00061]","SUID":229081}]
2025-03-06 14:37:15,033 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Fatty acid degradation [bvu00071]', 'SUID': 230097}, {'name': 'Secondary bile acid biosynthesis [bvu00121]', 'SUID': 228795}, {'name': 'Glycerolipid metabolism [bvu00561]', 'SUID': 230443}, {'name': 'Glycerophospholipid metabolism [bvu00564]', 'SUID': 230699}, {'name': 'Fatty acid biosynthesis [bvu00061]', 'SUID': 229081}]
2025-03-06 14:37:15,033 [DEBUG] py4...: ǀReturning 'get_network_list': ['Fatty acid degradation [bvu00071]', 'Secondary bile acid biosynthesis [bvu00121]', 'Glycerolipid metabolism [bvu00561]', 'Glycerophospholipid metabolism [bvu00564]', 'Fatty acid biosynthesis [bvu00061]']
2025-03-06 14:37:15,034 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Fatty acid degradation [bvu00071]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,034 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Fatty acid degradation [bvu00071]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:15,041 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 230097
}
],
 "errors":[]
}
2025-03-06 14:37:15,041 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 230097}]
2025-03-06 14:37:15,041 [DEBUG] py4...: Returning 'get_network_suid': 230097
2025-03-06 14:37:15,042 [DEBUG] py4...: --------------------
2025-03-06 14:37:15,042 [DEBUG] py4...: Calling get_network_suid('Secondary bile acid biosynthesis [bvu00121]')
2025-03-06 14:37:15,042 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,042 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,042 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:15,048 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Fatty acid degradation [bvu00071]","SUID":230097},{"name":"Secondary bile acid biosynthesis [bvu00121]","SUID":228795},{"name":"Glycerolipid metabolism [bvu00561]","SUID":230443},{"name":"Glycerophospholipid metabolism [bvu00564]","SUID":230699},{"name":"Fatty acid biosynthesis [bvu00061]","SUID":229081}]
2025-03-06 14:37:15,048 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Fatty acid degradation [bvu00071]', 'SUID': 230097}, {'name': 'Secondary bile acid biosynthesis [bvu00121]', 'SUID': 228795}, {'name': 'Glycerolipid metabolism [bvu00561]', 'SUID': 230443}, {'name': 'Glycerophospholipid metabolism [bvu00564]', 'SUID': 230699}, {'name': 'Fatty acid biosynthesis [bvu00061]', 'SUID': 229081}]
2025-03-06 14:37:15,048 [DEBUG] py4...: ǀReturning 'get_network_list': ['Fatty acid degradation [bvu00071]', 'Secondary bile acid biosynthesis [bvu00121]', 'Glycerolipid metabolism [bvu00561]', 'Glycerophospholipid metabolism [bvu00564]', 'Fatty acid biosynthesis [bvu00061]']
2025-03-06 14:37:15,048 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Secondary bile acid biosynthesis [bvu00121]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,049 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Secondary bile acid biosynthesis [bvu00121]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:15,056 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 228795
}
],
 "errors":[]
}
2025-03-06 14:37:15,056 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 228795}]
2025-03-06 14:37:15,056 [DEBUG] py4...: Returning 'get_network_suid': 228795
2025-03-06 14:37:15,057 [DEBUG] py4...: --------------------
2025-03-06 14:37:15,057 [DEBUG] py4...: Calling get_network_suid('Glycerolipid metabolism [bvu00561]')
2025-03-06 14:37:15,057 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,057 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,057 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:15,063 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Fatty acid degradation [bvu00071]","SUID":230097},{"name":"Secondary bile acid biosynthesis [bvu00121]","SUID":228795},{"name":"Glycerolipid metabolism [bvu00561]","SUID":230443},{"name":"Glycerophospholipid metabolism [bvu00564]","SUID":230699},{"name":"Fatty acid biosynthesis [bvu00061]","SUID":229081}]
2025-03-06 14:37:15,064 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Fatty acid degradation [bvu00071]', 'SUID': 230097}, {'name': 'Secondary bile acid biosynthesis [bvu00121]', 'SUID': 228795}, {'name': 'Glycerolipid metabolism [bvu00561]', 'SUID': 230443}, {'name': 'Glycerophospholipid metabolism [bvu00564]', 'SUID': 230699}, {'name': 'Fatty acid biosynthesis [bvu00061]', 'SUID': 229081}]
2025-03-06 14:37:15,064 [DEBUG] py4...: ǀReturning 'get_network_list': ['Fatty acid degradation [bvu00071]', 'Secondary bile acid biosynthesis [bvu00121]', 'Glycerolipid metabolism [bvu00561]', 'Glycerophospholipid metabolism [bvu00564]', 'Fatty acid biosynthesis [bvu00061]']
2025-03-06 14:37:15,064 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glycerolipid metabolism [bvu00561]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,064 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glycerolipid metabolism [bvu00561]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:15,073 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 230443
}
],
 "errors":[]
}
2025-03-06 14:37:15,073 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 230443}]
2025-03-06 14:37:15,073 [DEBUG] py4...: Returning 'get_network_suid': 230443
2025-03-06 14:37:15,073 [DEBUG] py4...: --------------------
2025-03-06 14:37:15,073 [DEBUG] py4...: Calling get_network_suid('Glycerophospholipid metabolism [bvu00564]')
2025-03-06 14:37:15,073 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,074 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,074 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:15,079 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Fatty acid degradation [bvu00071]","SUID":230097},{"name":"Secondary bile acid biosynthesis [bvu00121]","SUID":228795},{"name":"Glycerolipid metabolism [bvu00561]","SUID":230443},{"name":"Glycerophospholipid metabolism [bvu00564]","SUID":230699},{"name":"Fatty acid biosynthesis [bvu00061]","SUID":229081}]
2025-03-06 14:37:15,079 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Fatty acid degradation [bvu00071]', 'SUID': 230097}, {'name': 'Secondary bile acid biosynthesis [bvu00121]', 'SUID': 228795}, {'name': 'Glycerolipid metabolism [bvu00561]', 'SUID': 230443}, {'name': 'Glycerophospholipid metabolism [bvu00564]', 'SUID': 230699}, {'name': 'Fatty acid biosynthesis [bvu00061]', 'SUID': 229081}]
2025-03-06 14:37:15,079 [DEBUG] py4...: ǀReturning 'get_network_list': ['Fatty acid degradation [bvu00071]', 'Secondary bile acid biosynthesis [bvu00121]', 'Glycerolipid metabolism [bvu00561]', 'Glycerophospholipid metabolism [bvu00564]', 'Fatty acid biosynthesis [bvu00061]']
2025-03-06 14:37:15,079 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glycerophospholipid metabolism [bvu00564]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,080 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glycerophospholipid metabolism [bvu00564]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:15,083 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 230699
}
],
 "errors":[]
}
2025-03-06 14:37:15,083 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 230699}]
2025-03-06 14:37:15,083 [DEBUG] py4...: Returning 'get_network_suid': 230699
2025-03-06 14:37:15,083 [DEBUG] py4...: --------------------
2025-03-06 14:37:15,083 [DEBUG] py4...: Calling get_network_suid('Fatty acid biosynthesis [bvu00061]')
2025-03-06 14:37:15,083 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,083 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,083 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:15,086 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Fatty acid degradation [bvu00071]","SUID":230097},{"name":"Secondary bile acid biosynthesis [bvu00121]","SUID":228795},{"name":"Glycerolipid metabolism [bvu00561]","SUID":230443},{"name":"Glycerophospholipid metabolism [bvu00564]","SUID":230699},{"name":"Fatty acid biosynthesis [bvu00061]","SUID":229081}]
2025-03-06 14:37:15,087 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Fatty acid degradation [bvu00071]', 'SUID': 230097}, {'name': 'Secondary bile acid biosynthesis [bvu00121]', 'SUID': 228795}, {'name': 'Glycerolipid metabolism [bvu00561]', 'SUID': 230443}, {'name': 'Glycerophospholipid metabolism [bvu00564]', 'SUID': 230699}, {'name': 'Fatty acid biosynthesis [bvu00061]', 'SUID': 229081}]
2025-03-06 14:37:15,087 [DEBUG] py4...: ǀReturning 'get_network_list': ['Fatty acid degradation [bvu00071]', 'Secondary bile acid biosynthesis [bvu00121]', 'Glycerolipid metabolism [bvu00561]', 'Glycerophospholipid metabolism [bvu00564]', 'Fatty acid biosynthesis [bvu00061]']
2025-03-06 14:37:15,087 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Fatty acid biosynthesis [bvu00061]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,087 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Fatty acid biosynthesis [bvu00061]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:15,091 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 229081
}
],
 "errors":[]
}
2025-03-06 14:37:15,092 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 229081}]
2025-03-06 14:37:15,092 [DEBUG] py4...: Returning 'get_network_suid': 229081
2025-03-06 14:37:15,092 [DEBUG] py4...: --------------------
2025-03-06 14:37:15,092 [DEBUG] py4...: Calling export_network('networks_graphml/Fatty acid degradation [bvu00071].graphml', 'graphml', network=230097, overwrite_file=True)
2025-03-06 14:37:15,092 [DEBUG] py4...: ǀCalling get_network_suid(230097, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,092 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,093 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:15,098 [DEBUG] py4...: ǀǀOK[200], content: [230097,228795,230443,230699,229081]
2025-03-06 14:37:15,098 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [230097, 228795, 230443, 230699, 229081]
2025-03-06 14:37:15,098 [DEBUG] py4...: ǀReturning 'get_network_suid': 230097
2025-03-06 14:37:15,098 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Fatty acid degradation [bvu00071].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,098 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,098 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml'}
2025-03-06 14:37:15,104 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml","modifiedTime":"2025-03-06 13:59:52.0634","isFile":true},
 "errors":[]
}
2025-03-06 14:37:15,104 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml', 'modifiedTime': '2025-03-06 13:59:52.0634', 'isFile': True}
2025-03-06 14:37:15,104 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml', 'modifiedTime': '2025-03-06 13:59:52.0634', 'isFile': True}
2025-03-06 14:37:15,104 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Fatty acid degradation [bvu00071].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,104 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,104 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml'}
2025-03-06 14:37:15,108 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:15,108 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml', 'existed': True}
2025-03-06 14:37:15,108 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml', 'existed': True}
2025-03-06 14:37:15,108 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:230097" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,108 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:230097', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml'}
2025-03-06 14:37:15,117 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml"},
 "errors":[]
}
2025-03-06 14:37:15,118 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml'}
2025-03-06 14:37:15,118 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid degradation [bvu00071].graphml'}
2025-03-06 14:37:15,118 [DEBUG] py4...: --------------------
2025-03-06 14:37:15,118 [DEBUG] py4...: Calling export_network('networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml', 'graphml', network=228795, overwrite_file=True)
2025-03-06 14:37:15,118 [DEBUG] py4...: ǀCalling get_network_suid(228795, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,118 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,118 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:15,133 [DEBUG] py4...: ǀǀOK[200], content: [230097,228795,230443,230699,229081]
2025-03-06 14:37:15,133 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [230097, 228795, 230443, 230699, 229081]
2025-03-06 14:37:15,133 [DEBUG] py4...: ǀReturning 'get_network_suid': 228795
2025-03-06 14:37:15,133 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,134 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,134 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml'}
2025-03-06 14:37:15,137 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml","modifiedTime":"2025-03-06 13:59:52.0563","isFile":true},
 "errors":[]
}
2025-03-06 14:37:15,137 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml', 'modifiedTime': '2025-03-06 13:59:52.0563', 'isFile': True}
2025-03-06 14:37:15,137 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml', 'modifiedTime': '2025-03-06 13:59:52.0563', 'isFile': True}
2025-03-06 14:37:15,137 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,137 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,137 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml'}
2025-03-06 14:37:15,141 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:15,141 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml', 'existed': True}
2025-03-06 14:37:15,141 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml', 'existed': True}
2025-03-06 14:37:15,141 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:228795" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,141 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:228795', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml'}
2025-03-06 14:37:15,148 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml"},
 "errors":[]
}
2025-03-06 14:37:15,148 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml'}
2025-03-06 14:37:15,148 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Secondary bile acid biosynthesis [bvu00121].graphml'}
2025-03-06 14:37:15,148 [DEBUG] py4...: --------------------
2025-03-06 14:37:15,148 [DEBUG] py4...: Calling export_network('networks_graphml/Glycerolipid metabolism [bvu00561].graphml', 'graphml', network=230443, overwrite_file=True)
2025-03-06 14:37:15,148 [DEBUG] py4...: ǀCalling get_network_suid(230443, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,148 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,148 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:15,152 [DEBUG] py4...: ǀǀOK[200], content: [230097,228795,230443,230699,229081]
2025-03-06 14:37:15,153 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [230097, 228795, 230443, 230699, 229081]
2025-03-06 14:37:15,153 [DEBUG] py4...: ǀReturning 'get_network_suid': 230443
2025-03-06 14:37:15,153 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Glycerolipid metabolism [bvu00561].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,153 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,153 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml'}
2025-03-06 14:37:15,159 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml","modifiedTime":"2025-03-06 13:59:52.0584","isFile":true},
 "errors":[]
}
2025-03-06 14:37:15,159 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml', 'modifiedTime': '2025-03-06 13:59:52.0584', 'isFile': True}
2025-03-06 14:37:15,159 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml', 'modifiedTime': '2025-03-06 13:59:52.0584', 'isFile': True}
2025-03-06 14:37:15,159 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Glycerolipid metabolism [bvu00561].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,159 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,160 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml'}
2025-03-06 14:37:15,165 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:15,166 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml', 'existed': True}
2025-03-06 14:37:15,166 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml', 'existed': True}
2025-03-06 14:37:15,166 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:230443" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,166 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:230443', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml'}
2025-03-06 14:37:15,177 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml"},
 "errors":[]
}
2025-03-06 14:37:15,178 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml'}
2025-03-06 14:37:15,178 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerolipid metabolism [bvu00561].graphml'}
2025-03-06 14:37:15,178 [DEBUG] py4...: --------------------
2025-03-06 14:37:15,178 [DEBUG] py4...: Calling export_network('networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml', 'graphml', network=230699, overwrite_file=True)
2025-03-06 14:37:15,178 [DEBUG] py4...: ǀCalling get_network_suid(230699, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,178 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,178 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:15,187 [DEBUG] py4...: ǀǀOK[200], content: [230097,228795,230443,230699,229081]
2025-03-06 14:37:15,190 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [230097, 228795, 230443, 230699, 229081]
2025-03-06 14:37:15,190 [DEBUG] py4...: ǀReturning 'get_network_suid': 230699
2025-03-06 14:37:15,190 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,191 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,191 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml'}
2025-03-06 14:37:15,195 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml","modifiedTime":"2025-03-06 13:59:52.0605","isFile":true},
 "errors":[]
}
2025-03-06 14:37:15,195 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml', 'modifiedTime': '2025-03-06 13:59:52.0605', 'isFile': True}
2025-03-06 14:37:15,195 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml', 'modifiedTime': '2025-03-06 13:59:52.0605', 'isFile': True}
2025-03-06 14:37:15,195 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,195 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,195 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml'}
2025-03-06 14:37:15,198 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:15,198 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml', 'existed': True}
2025-03-06 14:37:15,198 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml', 'existed': True}
2025-03-06 14:37:15,199 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:230699" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,199 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:230699', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml'}
2025-03-06 14:37:15,207 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml"},
 "errors":[]
}
2025-03-06 14:37:15,207 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml'}
2025-03-06 14:37:15,207 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycerophospholipid metabolism [bvu00564].graphml'}
2025-03-06 14:37:15,207 [DEBUG] py4...: --------------------
2025-03-06 14:37:15,208 [DEBUG] py4...: Calling export_network('networks_graphml/Fatty acid biosynthesis [bvu00061].graphml', 'graphml', network=229081, overwrite_file=True)
2025-03-06 14:37:15,208 [DEBUG] py4...: ǀCalling get_network_suid(229081, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,208 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,208 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:15,213 [DEBUG] py4...: ǀǀOK[200], content: [230097,228795,230443,230699,229081]
2025-03-06 14:37:15,218 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [230097, 228795, 230443, 230699, 229081]
2025-03-06 14:37:15,218 [DEBUG] py4...: ǀReturning 'get_network_suid': 229081
2025-03-06 14:37:15,218 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Fatty acid biosynthesis [bvu00061].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,218 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,219 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml'}
2025-03-06 14:37:15,222 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml","modifiedTime":"2025-03-06 13:59:52.0672","isFile":true},
 "errors":[]
}
2025-03-06 14:37:15,222 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml', 'modifiedTime': '2025-03-06 13:59:52.0672', 'isFile': True}
2025-03-06 14:37:15,223 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml', 'modifiedTime': '2025-03-06 13:59:52.0672', 'isFile': True}
2025-03-06 14:37:15,223 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Fatty acid biosynthesis [bvu00061].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,223 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,223 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml'}
2025-03-06 14:37:15,227 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:15,228 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml', 'existed': True}
2025-03-06 14:37:15,228 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml', 'existed': True}
2025-03-06 14:37:15,228 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:229081" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,228 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:229081', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml'}
2025-03-06 14:37:15,238 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml"},
 "errors":[]
}
2025-03-06 14:37:15,240 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml'}
2025-03-06 14:37:15,241 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Fatty acid biosynthesis [bvu00061].graphml'}
2025-03-06 14:37:15,241 [DEBUG] py4...: --------------------
2025-03-06 14:37:15,241 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_7.cys')
2025-03-06 14:37:15,241 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_7.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:15,242 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_7.cys'}
2025-03-06 14:37:16,120 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:16,121 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:16,121 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:16,121 [DEBUG] py4...: --------------------
2025-03-06 14:37:16,121 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:16,122 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,124 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:16,132 [DEBUG] py4...: ǀOK[200], content: [{"name":"Cysteine and methionine metabolism [bvu00270]","SUID":240496},{"name":"Lysine biosynthesis [bvu00300]","SUID":239924},{"name":"Valine, leucine and isoleucine biosynthesis [bvu00290]","SUID":239678},{"name":"Arginine biosynthesis [bvu00220]","SUID":241022},{"name":"Valine, leucine and isoleucine degradation [bvu00280]","SUID":240188}]
2025-03-06 14:37:16,132 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Cysteine and methionine metabolism [bvu00270]', 'SUID': 240496}, {'name': 'Lysine biosynthesis [bvu00300]', 'SUID': 239924}, {'name': 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'SUID': 239678}, {'name': 'Arginine biosynthesis [bvu00220]', 'SUID': 241022}, {'name': 'Valine, leucine and isoleucine degradation [bvu00280]', 'SUID': 240188}]
2025-03-06 14:37:16,133 [DEBUG] py4...: Returning 'get_network_list': ['Cysteine and methionine metabolism [bvu00270]', 'Lysine biosynthesis [bvu00300]', 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'Arginine biosynthesis [bvu00220]', 'Valine, leucine and isoleucine degradation [bvu00280]']
2025-03-06 14:37:16,133 [DEBUG] py4...: --------------------
2025-03-06 14:37:16,133 [DEBUG] py4...: Calling get_network_suid('Cysteine and methionine metabolism [bvu00270]')
2025-03-06 14:37:16,133 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,133 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,133 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:16,141 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Cysteine and methionine metabolism [bvu00270]","SUID":240496},{"name":"Lysine biosynthesis [bvu00300]","SUID":239924},{"name":"Valine, leucine and isoleucine biosynthesis [bvu00290]","SUID":239678},{"name":"Arginine biosynthesis [bvu00220]","SUID":241022},{"name":"Valine, leucine and isoleucine degradation [bvu00280]","SUID":240188}]
2025-03-06 14:37:16,141 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Cysteine and methionine metabolism [bvu00270]', 'SUID': 240496}, {'name': 'Lysine biosynthesis [bvu00300]', 'SUID': 239924}, {'name': 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'SUID': 239678}, {'name': 'Arginine biosynthesis [bvu00220]', 'SUID': 241022}, {'name': 'Valine, leucine and isoleucine degradation [bvu00280]', 'SUID': 240188}]
2025-03-06 14:37:16,142 [DEBUG] py4...: ǀReturning 'get_network_list': ['Cysteine and methionine metabolism [bvu00270]', 'Lysine biosynthesis [bvu00300]', 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'Arginine biosynthesis [bvu00220]', 'Valine, leucine and isoleucine degradation [bvu00280]']
2025-03-06 14:37:16,142 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Cysteine and methionine metabolism [bvu00270]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,142 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Cysteine and methionine metabolism [bvu00270]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:16,148 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 240496
}
],
 "errors":[]
}
2025-03-06 14:37:16,148 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 240496}]
2025-03-06 14:37:16,149 [DEBUG] py4...: Returning 'get_network_suid': 240496
2025-03-06 14:37:16,149 [DEBUG] py4...: --------------------
2025-03-06 14:37:16,149 [DEBUG] py4...: Calling get_network_suid('Lysine biosynthesis [bvu00300]')
2025-03-06 14:37:16,149 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,149 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,149 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:16,153 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Cysteine and methionine metabolism [bvu00270]","SUID":240496},{"name":"Lysine biosynthesis [bvu00300]","SUID":239924},{"name":"Valine, leucine and isoleucine biosynthesis [bvu00290]","SUID":239678},{"name":"Arginine biosynthesis [bvu00220]","SUID":241022},{"name":"Valine, leucine and isoleucine degradation [bvu00280]","SUID":240188}]
2025-03-06 14:37:16,154 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Cysteine and methionine metabolism [bvu00270]', 'SUID': 240496}, {'name': 'Lysine biosynthesis [bvu00300]', 'SUID': 239924}, {'name': 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'SUID': 239678}, {'name': 'Arginine biosynthesis [bvu00220]', 'SUID': 241022}, {'name': 'Valine, leucine and isoleucine degradation [bvu00280]', 'SUID': 240188}]
2025-03-06 14:37:16,154 [DEBUG] py4...: ǀReturning 'get_network_list': ['Cysteine and methionine metabolism [bvu00270]', 'Lysine biosynthesis [bvu00300]', 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'Arginine biosynthesis [bvu00220]', 'Valine, leucine and isoleucine degradation [bvu00280]']
2025-03-06 14:37:16,154 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Lysine biosynthesis [bvu00300]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,154 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Lysine biosynthesis [bvu00300]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:16,169 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 239924
}
],
 "errors":[]
}
2025-03-06 14:37:16,169 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 239924}]
2025-03-06 14:37:16,169 [DEBUG] py4...: Returning 'get_network_suid': 239924
2025-03-06 14:37:16,169 [DEBUG] py4...: --------------------
2025-03-06 14:37:16,169 [DEBUG] py4...: Calling get_network_suid('Valine, leucine and isoleucine biosynthesis [bvu00290]')
2025-03-06 14:37:16,169 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,169 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,169 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:16,172 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Cysteine and methionine metabolism [bvu00270]","SUID":240496},{"name":"Lysine biosynthesis [bvu00300]","SUID":239924},{"name":"Valine, leucine and isoleucine biosynthesis [bvu00290]","SUID":239678},{"name":"Arginine biosynthesis [bvu00220]","SUID":241022},{"name":"Valine, leucine and isoleucine degradation [bvu00280]","SUID":240188}]
2025-03-06 14:37:16,172 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Cysteine and methionine metabolism [bvu00270]', 'SUID': 240496}, {'name': 'Lysine biosynthesis [bvu00300]', 'SUID': 239924}, {'name': 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'SUID': 239678}, {'name': 'Arginine biosynthesis [bvu00220]', 'SUID': 241022}, {'name': 'Valine, leucine and isoleucine degradation [bvu00280]', 'SUID': 240188}]
2025-03-06 14:37:16,173 [DEBUG] py4...: ǀReturning 'get_network_list': ['Cysteine and methionine metabolism [bvu00270]', 'Lysine biosynthesis [bvu00300]', 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'Arginine biosynthesis [bvu00220]', 'Valine, leucine and isoleucine degradation [bvu00280]']
2025-03-06 14:37:16,173 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Valine, leucine and isoleucine biosynthesis [bvu00290]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,173 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:16,178 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 239678
}
],
 "errors":[]
}
2025-03-06 14:37:16,178 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 239678}]
2025-03-06 14:37:16,179 [DEBUG] py4...: Returning 'get_network_suid': 239678
2025-03-06 14:37:16,179 [DEBUG] py4...: --------------------
2025-03-06 14:37:16,179 [DEBUG] py4...: Calling get_network_suid('Arginine biosynthesis [bvu00220]')
2025-03-06 14:37:16,179 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,179 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,179 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:16,185 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Cysteine and methionine metabolism [bvu00270]","SUID":240496},{"name":"Lysine biosynthesis [bvu00300]","SUID":239924},{"name":"Valine, leucine and isoleucine biosynthesis [bvu00290]","SUID":239678},{"name":"Arginine biosynthesis [bvu00220]","SUID":241022},{"name":"Valine, leucine and isoleucine degradation [bvu00280]","SUID":240188}]
2025-03-06 14:37:16,186 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Cysteine and methionine metabolism [bvu00270]', 'SUID': 240496}, {'name': 'Lysine biosynthesis [bvu00300]', 'SUID': 239924}, {'name': 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'SUID': 239678}, {'name': 'Arginine biosynthesis [bvu00220]', 'SUID': 241022}, {'name': 'Valine, leucine and isoleucine degradation [bvu00280]', 'SUID': 240188}]
2025-03-06 14:37:16,186 [DEBUG] py4...: ǀReturning 'get_network_list': ['Cysteine and methionine metabolism [bvu00270]', 'Lysine biosynthesis [bvu00300]', 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'Arginine biosynthesis [bvu00220]', 'Valine, leucine and isoleucine degradation [bvu00280]']
2025-03-06 14:37:16,186 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Arginine biosynthesis [bvu00220]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,186 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Arginine biosynthesis [bvu00220]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:16,193 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 241022
}
],
 "errors":[]
}
2025-03-06 14:37:16,193 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 241022}]
2025-03-06 14:37:16,193 [DEBUG] py4...: Returning 'get_network_suid': 241022
2025-03-06 14:37:16,193 [DEBUG] py4...: --------------------
2025-03-06 14:37:16,193 [DEBUG] py4...: Calling get_network_suid('Valine, leucine and isoleucine degradation [bvu00280]')
2025-03-06 14:37:16,193 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,194 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,194 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:16,199 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Cysteine and methionine metabolism [bvu00270]","SUID":240496},{"name":"Lysine biosynthesis [bvu00300]","SUID":239924},{"name":"Valine, leucine and isoleucine biosynthesis [bvu00290]","SUID":239678},{"name":"Arginine biosynthesis [bvu00220]","SUID":241022},{"name":"Valine, leucine and isoleucine degradation [bvu00280]","SUID":240188}]
2025-03-06 14:37:16,199 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Cysteine and methionine metabolism [bvu00270]', 'SUID': 240496}, {'name': 'Lysine biosynthesis [bvu00300]', 'SUID': 239924}, {'name': 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'SUID': 239678}, {'name': 'Arginine biosynthesis [bvu00220]', 'SUID': 241022}, {'name': 'Valine, leucine and isoleucine degradation [bvu00280]', 'SUID': 240188}]
2025-03-06 14:37:16,199 [DEBUG] py4...: ǀReturning 'get_network_list': ['Cysteine and methionine metabolism [bvu00270]', 'Lysine biosynthesis [bvu00300]', 'Valine, leucine and isoleucine biosynthesis [bvu00290]', 'Arginine biosynthesis [bvu00220]', 'Valine, leucine and isoleucine degradation [bvu00280]']
2025-03-06 14:37:16,200 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Valine, leucine and isoleucine degradation [bvu00280]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,200 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Valine, leucine and isoleucine degradation [bvu00280]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:16,206 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 240188
}
],
 "errors":[]
}
2025-03-06 14:37:16,207 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 240188}]
2025-03-06 14:37:16,207 [DEBUG] py4...: Returning 'get_network_suid': 240188
2025-03-06 14:37:16,207 [DEBUG] py4...: --------------------
2025-03-06 14:37:16,207 [DEBUG] py4...: Calling export_network('networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml', 'graphml', network=240496, overwrite_file=True)
2025-03-06 14:37:16,207 [DEBUG] py4...: ǀCalling get_network_suid(240496, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,207 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,207 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:16,211 [DEBUG] py4...: ǀǀOK[200], content: [240496,239924,239678,241022,240188]
2025-03-06 14:37:16,212 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [240496, 239924, 239678, 241022, 240188]
2025-03-06 14:37:16,212 [DEBUG] py4...: ǀReturning 'get_network_suid': 240496
2025-03-06 14:37:16,212 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,212 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,212 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml'}
2025-03-06 14:37:16,218 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml","modifiedTime":"2025-03-06 13:59:55.0490","isFile":true},
 "errors":[]
}
2025-03-06 14:37:16,218 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml', 'modifiedTime': '2025-03-06 13:59:55.0490', 'isFile': True}
2025-03-06 14:37:16,219 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml', 'modifiedTime': '2025-03-06 13:59:55.0490', 'isFile': True}
2025-03-06 14:37:16,219 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,219 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,219 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml'}
2025-03-06 14:37:16,225 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:16,225 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml', 'existed': True}
2025-03-06 14:37:16,225 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml', 'existed': True}
2025-03-06 14:37:16,225 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:240496" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,225 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:240496', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml'}
2025-03-06 14:37:16,233 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml"},
 "errors":[]
}
2025-03-06 14:37:16,234 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml'}
2025-03-06 14:37:16,234 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Cysteine and methionine metabolism [bvu00270].graphml'}
2025-03-06 14:37:16,234 [DEBUG] py4...: --------------------
2025-03-06 14:37:16,234 [DEBUG] py4...: Calling export_network('networks_graphml/Lysine biosynthesis [bvu00300].graphml', 'graphml', network=239924, overwrite_file=True)
2025-03-06 14:37:16,234 [DEBUG] py4...: ǀCalling get_network_suid(239924, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,234 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,234 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:16,240 [DEBUG] py4...: ǀǀOK[200], content: [240496,239924,239678,241022,240188]
2025-03-06 14:37:16,241 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [240496, 239924, 239678, 241022, 240188]
2025-03-06 14:37:16,241 [DEBUG] py4...: ǀReturning 'get_network_suid': 239924
2025-03-06 14:37:16,241 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Lysine biosynthesis [bvu00300].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,241 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,242 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml'}
2025-03-06 14:37:16,248 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml","modifiedTime":"2025-03-06 13:59:55.0504","isFile":true},
 "errors":[]
}
2025-03-06 14:37:16,249 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml', 'modifiedTime': '2025-03-06 13:59:55.0504', 'isFile': True}
2025-03-06 14:37:16,249 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml', 'modifiedTime': '2025-03-06 13:59:55.0504', 'isFile': True}
2025-03-06 14:37:16,249 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Lysine biosynthesis [bvu00300].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,250 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,250 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml'}
2025-03-06 14:37:16,257 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:16,257 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml', 'existed': True}
2025-03-06 14:37:16,257 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml', 'existed': True}
2025-03-06 14:37:16,258 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:239924" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,258 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:239924', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml'}
2025-03-06 14:37:16,267 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml"},
 "errors":[]
}
2025-03-06 14:37:16,268 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml'}
2025-03-06 14:37:16,268 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysine biosynthesis [bvu00300].graphml'}
2025-03-06 14:37:16,268 [DEBUG] py4...: --------------------
2025-03-06 14:37:16,268 [DEBUG] py4...: Calling export_network('networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml', 'graphml', network=239678, overwrite_file=True)
2025-03-06 14:37:16,268 [DEBUG] py4...: ǀCalling get_network_suid(239678, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,269 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,269 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:16,278 [DEBUG] py4...: ǀǀOK[200], content: [240496,239924,239678,241022,240188]
2025-03-06 14:37:16,278 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [240496, 239924, 239678, 241022, 240188]
2025-03-06 14:37:16,278 [DEBUG] py4...: ǀReturning 'get_network_suid': 239678
2025-03-06 14:37:16,278 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,278 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,279 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml'}
2025-03-06 14:37:16,284 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml","modifiedTime":"2025-03-06 13:59:55.0433","isFile":true},
 "errors":[]
}
2025-03-06 14:37:16,284 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml', 'modifiedTime': '2025-03-06 13:59:55.0433', 'isFile': True}
2025-03-06 14:37:16,284 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml', 'modifiedTime': '2025-03-06 13:59:55.0433', 'isFile': True}
2025-03-06 14:37:16,285 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,285 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,285 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml'}
2025-03-06 14:37:16,291 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:16,291 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml', 'existed': True}
2025-03-06 14:37:16,291 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml', 'existed': True}
2025-03-06 14:37:16,291 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:239678" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,292 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:239678', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml'}
2025-03-06 14:37:16,299 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml"},
 "errors":[]
}
2025-03-06 14:37:16,300 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml'}
2025-03-06 14:37:16,300 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine biosynthesis [bvu00290].graphml'}
2025-03-06 14:37:16,300 [DEBUG] py4...: --------------------
2025-03-06 14:37:16,300 [DEBUG] py4...: Calling export_network('networks_graphml/Arginine biosynthesis [bvu00220].graphml', 'graphml', network=241022, overwrite_file=True)
2025-03-06 14:37:16,300 [DEBUG] py4...: ǀCalling get_network_suid(241022, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,300 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,300 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:16,310 [DEBUG] py4...: ǀǀOK[200], content: [240496,239924,239678,241022,240188]
2025-03-06 14:37:16,310 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [240496, 239924, 239678, 241022, 240188]
2025-03-06 14:37:16,310 [DEBUG] py4...: ǀReturning 'get_network_suid': 241022
2025-03-06 14:37:16,310 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Arginine biosynthesis [bvu00220].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,310 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,310 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml'}
2025-03-06 14:37:16,314 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml","modifiedTime":"2025-03-06 13:59:55.0455","isFile":true},
 "errors":[]
}
2025-03-06 14:37:16,314 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml', 'modifiedTime': '2025-03-06 13:59:55.0455', 'isFile': True}
2025-03-06 14:37:16,314 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml', 'modifiedTime': '2025-03-06 13:59:55.0455', 'isFile': True}
2025-03-06 14:37:16,314 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Arginine biosynthesis [bvu00220].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,314 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,314 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml'}
2025-03-06 14:37:16,321 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:16,321 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml', 'existed': True}
2025-03-06 14:37:16,321 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml', 'existed': True}
2025-03-06 14:37:16,321 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:241022" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,321 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:241022', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml'}
2025-03-06 14:37:16,327 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml"},
 "errors":[]
}
2025-03-06 14:37:16,327 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml'}
2025-03-06 14:37:16,327 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Arginine biosynthesis [bvu00220].graphml'}
2025-03-06 14:37:16,327 [DEBUG] py4...: --------------------
2025-03-06 14:37:16,327 [DEBUG] py4...: Calling export_network('networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml', 'graphml', network=240188, overwrite_file=True)
2025-03-06 14:37:16,327 [DEBUG] py4...: ǀCalling get_network_suid(240188, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,327 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,327 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:16,330 [DEBUG] py4...: ǀǀOK[200], content: [240496,239924,239678,241022,240188]
2025-03-06 14:37:16,330 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [240496, 239924, 239678, 241022, 240188]
2025-03-06 14:37:16,330 [DEBUG] py4...: ǀReturning 'get_network_suid': 240188
2025-03-06 14:37:16,330 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,330 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,330 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml'}
2025-03-06 14:37:16,332 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml","modifiedTime":"2025-03-06 13:59:55.0471","isFile":true},
 "errors":[]
}
2025-03-06 14:37:16,333 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml', 'modifiedTime': '2025-03-06 13:59:55.0471', 'isFile': True}
2025-03-06 14:37:16,333 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml', 'modifiedTime': '2025-03-06 13:59:55.0471', 'isFile': True}
2025-03-06 14:37:16,333 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,333 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,333 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml'}
2025-03-06 14:37:16,336 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:16,337 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml', 'existed': True}
2025-03-06 14:37:16,337 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml', 'existed': True}
2025-03-06 14:37:16,337 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:240188" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,337 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:240188', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml'}
2025-03-06 14:37:16,346 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml"},
 "errors":[]
}
2025-03-06 14:37:16,347 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml'}
2025-03-06 14:37:16,348 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Valine, leucine and isoleucine degradation [bvu00280].graphml'}
2025-03-06 14:37:16,348 [DEBUG] py4...: --------------------
2025-03-06 14:37:16,349 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_18.cys')
2025-03-06 14:37:16,349 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_18.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:16,350 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_18.cys'}
2025-03-06 14:37:17,557 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:17,557 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:17,557 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:17,557 [DEBUG] py4...: --------------------
2025-03-06 14:37:17,557 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:17,557 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,557 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:17,561 [DEBUG] py4...: ǀOK[200], content: [{"name":"Homologous recombination [bvu03440]","SUID":247281},{"name":"ABC transporters [bvu02010]","SUID":247681},{"name":"Mismatch repair [bvu03430]","SUID":249386},{"name":"Nucleotide excision repair [bvu03420]","SUID":249514},{"name":"Base excision repair [bvu03410]","SUID":247485}]
2025-03-06 14:37:17,561 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Homologous recombination [bvu03440]', 'SUID': 247281}, {'name': 'ABC transporters [bvu02010]', 'SUID': 247681}, {'name': 'Mismatch repair [bvu03430]', 'SUID': 249386}, {'name': 'Nucleotide excision repair [bvu03420]', 'SUID': 249514}, {'name': 'Base excision repair [bvu03410]', 'SUID': 247485}]
2025-03-06 14:37:17,561 [DEBUG] py4...: Returning 'get_network_list': ['Homologous recombination [bvu03440]', 'ABC transporters [bvu02010]', 'Mismatch repair [bvu03430]', 'Nucleotide excision repair [bvu03420]', 'Base excision repair [bvu03410]']
2025-03-06 14:37:17,561 [DEBUG] py4...: --------------------
2025-03-06 14:37:17,561 [DEBUG] py4...: Calling get_network_suid('Homologous recombination [bvu03440]')
2025-03-06 14:37:17,561 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,561 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,561 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:17,566 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Homologous recombination [bvu03440]","SUID":247281},{"name":"ABC transporters [bvu02010]","SUID":247681},{"name":"Mismatch repair [bvu03430]","SUID":249386},{"name":"Nucleotide excision repair [bvu03420]","SUID":249514},{"name":"Base excision repair [bvu03410]","SUID":247485}]
2025-03-06 14:37:17,566 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Homologous recombination [bvu03440]', 'SUID': 247281}, {'name': 'ABC transporters [bvu02010]', 'SUID': 247681}, {'name': 'Mismatch repair [bvu03430]', 'SUID': 249386}, {'name': 'Nucleotide excision repair [bvu03420]', 'SUID': 249514}, {'name': 'Base excision repair [bvu03410]', 'SUID': 247485}]
2025-03-06 14:37:17,566 [DEBUG] py4...: ǀReturning 'get_network_list': ['Homologous recombination [bvu03440]', 'ABC transporters [bvu02010]', 'Mismatch repair [bvu03430]', 'Nucleotide excision repair [bvu03420]', 'Base excision repair [bvu03410]']
2025-03-06 14:37:17,566 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Homologous recombination [bvu03440]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,566 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Homologous recombination [bvu03440]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:17,571 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 247281
}
],
 "errors":[]
}
2025-03-06 14:37:17,571 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 247281}]
2025-03-06 14:37:17,571 [DEBUG] py4...: Returning 'get_network_suid': 247281
2025-03-06 14:37:17,571 [DEBUG] py4...: --------------------
2025-03-06 14:37:17,571 [DEBUG] py4...: Calling get_network_suid('ABC transporters [bvu02010]')
2025-03-06 14:37:17,571 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,571 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,571 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:17,574 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Homologous recombination [bvu03440]","SUID":247281},{"name":"ABC transporters [bvu02010]","SUID":247681},{"name":"Mismatch repair [bvu03430]","SUID":249386},{"name":"Nucleotide excision repair [bvu03420]","SUID":249514},{"name":"Base excision repair [bvu03410]","SUID":247485}]
2025-03-06 14:37:17,575 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Homologous recombination [bvu03440]', 'SUID': 247281}, {'name': 'ABC transporters [bvu02010]', 'SUID': 247681}, {'name': 'Mismatch repair [bvu03430]', 'SUID': 249386}, {'name': 'Nucleotide excision repair [bvu03420]', 'SUID': 249514}, {'name': 'Base excision repair [bvu03410]', 'SUID': 247485}]
2025-03-06 14:37:17,575 [DEBUG] py4...: ǀReturning 'get_network_list': ['Homologous recombination [bvu03440]', 'ABC transporters [bvu02010]', 'Mismatch repair [bvu03430]', 'Nucleotide excision repair [bvu03420]', 'Base excision repair [bvu03410]']
2025-03-06 14:37:17,575 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="ABC transporters [bvu02010]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,575 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'ABC transporters [bvu02010]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:17,578 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 247681
}
],
 "errors":[]
}
2025-03-06 14:37:17,578 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 247681}]
2025-03-06 14:37:17,578 [DEBUG] py4...: Returning 'get_network_suid': 247681
2025-03-06 14:37:17,578 [DEBUG] py4...: --------------------
2025-03-06 14:37:17,578 [DEBUG] py4...: Calling get_network_suid('Mismatch repair [bvu03430]')
2025-03-06 14:37:17,578 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,578 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,579 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:17,581 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Homologous recombination [bvu03440]","SUID":247281},{"name":"ABC transporters [bvu02010]","SUID":247681},{"name":"Mismatch repair [bvu03430]","SUID":249386},{"name":"Nucleotide excision repair [bvu03420]","SUID":249514},{"name":"Base excision repair [bvu03410]","SUID":247485}]
2025-03-06 14:37:17,582 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Homologous recombination [bvu03440]', 'SUID': 247281}, {'name': 'ABC transporters [bvu02010]', 'SUID': 247681}, {'name': 'Mismatch repair [bvu03430]', 'SUID': 249386}, {'name': 'Nucleotide excision repair [bvu03420]', 'SUID': 249514}, {'name': 'Base excision repair [bvu03410]', 'SUID': 247485}]
2025-03-06 14:37:17,582 [DEBUG] py4...: ǀReturning 'get_network_list': ['Homologous recombination [bvu03440]', 'ABC transporters [bvu02010]', 'Mismatch repair [bvu03430]', 'Nucleotide excision repair [bvu03420]', 'Base excision repair [bvu03410]']
2025-03-06 14:37:17,582 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Mismatch repair [bvu03430]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,582 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Mismatch repair [bvu03430]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:17,585 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 249386
}
],
 "errors":[]
}
2025-03-06 14:37:17,585 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 249386}]
2025-03-06 14:37:17,585 [DEBUG] py4...: Returning 'get_network_suid': 249386
2025-03-06 14:37:17,586 [DEBUG] py4...: --------------------
2025-03-06 14:37:17,586 [DEBUG] py4...: Calling get_network_suid('Nucleotide excision repair [bvu03420]')
2025-03-06 14:37:17,586 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,586 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,586 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:17,589 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Homologous recombination [bvu03440]","SUID":247281},{"name":"ABC transporters [bvu02010]","SUID":247681},{"name":"Mismatch repair [bvu03430]","SUID":249386},{"name":"Nucleotide excision repair [bvu03420]","SUID":249514},{"name":"Base excision repair [bvu03410]","SUID":247485}]
2025-03-06 14:37:17,589 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Homologous recombination [bvu03440]', 'SUID': 247281}, {'name': 'ABC transporters [bvu02010]', 'SUID': 247681}, {'name': 'Mismatch repair [bvu03430]', 'SUID': 249386}, {'name': 'Nucleotide excision repair [bvu03420]', 'SUID': 249514}, {'name': 'Base excision repair [bvu03410]', 'SUID': 247485}]
2025-03-06 14:37:17,589 [DEBUG] py4...: ǀReturning 'get_network_list': ['Homologous recombination [bvu03440]', 'ABC transporters [bvu02010]', 'Mismatch repair [bvu03430]', 'Nucleotide excision repair [bvu03420]', 'Base excision repair [bvu03410]']
2025-03-06 14:37:17,589 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Nucleotide excision repair [bvu03420]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,589 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Nucleotide excision repair [bvu03420]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:17,592 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 249514
}
],
 "errors":[]
}
2025-03-06 14:37:17,592 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 249514}]
2025-03-06 14:37:17,593 [DEBUG] py4...: Returning 'get_network_suid': 249514
2025-03-06 14:37:17,593 [DEBUG] py4...: --------------------
2025-03-06 14:37:17,593 [DEBUG] py4...: Calling get_network_suid('Base excision repair [bvu03410]')
2025-03-06 14:37:17,593 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,593 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,593 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:17,596 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Homologous recombination [bvu03440]","SUID":247281},{"name":"ABC transporters [bvu02010]","SUID":247681},{"name":"Mismatch repair [bvu03430]","SUID":249386},{"name":"Nucleotide excision repair [bvu03420]","SUID":249514},{"name":"Base excision repair [bvu03410]","SUID":247485}]
2025-03-06 14:37:17,596 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Homologous recombination [bvu03440]', 'SUID': 247281}, {'name': 'ABC transporters [bvu02010]', 'SUID': 247681}, {'name': 'Mismatch repair [bvu03430]', 'SUID': 249386}, {'name': 'Nucleotide excision repair [bvu03420]', 'SUID': 249514}, {'name': 'Base excision repair [bvu03410]', 'SUID': 247485}]
2025-03-06 14:37:17,596 [DEBUG] py4...: ǀReturning 'get_network_list': ['Homologous recombination [bvu03440]', 'ABC transporters [bvu02010]', 'Mismatch repair [bvu03430]', 'Nucleotide excision repair [bvu03420]', 'Base excision repair [bvu03410]']
2025-03-06 14:37:17,596 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Base excision repair [bvu03410]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,596 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Base excision repair [bvu03410]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:17,600 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 247485
}
],
 "errors":[]
}
2025-03-06 14:37:17,600 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 247485}]
2025-03-06 14:37:17,601 [DEBUG] py4...: Returning 'get_network_suid': 247485
2025-03-06 14:37:17,601 [DEBUG] py4...: --------------------
2025-03-06 14:37:17,601 [DEBUG] py4...: Calling export_network('networks_graphml/Homologous recombination [bvu03440].graphml', 'graphml', network=247281, overwrite_file=True)
2025-03-06 14:37:17,601 [DEBUG] py4...: ǀCalling get_network_suid(247281, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,601 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,601 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:17,603 [DEBUG] py4...: ǀǀOK[200], content: [247281,247681,249386,249514,247485]
2025-03-06 14:37:17,604 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [247281, 247681, 249386, 249514, 247485]
2025-03-06 14:37:17,604 [DEBUG] py4...: ǀReturning 'get_network_suid': 247281
2025-03-06 14:37:17,604 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Homologous recombination [bvu03440].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,604 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,604 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml'}
2025-03-06 14:37:17,610 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml","modifiedTime":"2025-03-06 13:59:56.0946","isFile":true},
 "errors":[]
}
2025-03-06 14:37:17,611 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml', 'modifiedTime': '2025-03-06 13:59:56.0946', 'isFile': True}
2025-03-06 14:37:17,611 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml', 'modifiedTime': '2025-03-06 13:59:56.0946', 'isFile': True}
2025-03-06 14:37:17,611 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Homologous recombination [bvu03440].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,611 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,611 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml'}
2025-03-06 14:37:17,615 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:17,615 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml', 'existed': True}
2025-03-06 14:37:17,615 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml', 'existed': True}
2025-03-06 14:37:17,615 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:247281" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,615 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:247281', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml'}
2025-03-06 14:37:17,632 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml"},
 "errors":[]
}
2025-03-06 14:37:17,633 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml'}
2025-03-06 14:37:17,633 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Homologous recombination [bvu03440].graphml'}
2025-03-06 14:37:17,633 [DEBUG] py4...: --------------------
2025-03-06 14:37:17,633 [DEBUG] py4...: Calling export_network('networks_graphml/ABC transporters [bvu02010].graphml', 'graphml', network=247681, overwrite_file=True)
2025-03-06 14:37:17,633 [DEBUG] py4...: ǀCalling get_network_suid(247681, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,633 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,633 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:17,636 [DEBUG] py4...: ǀǀOK[200], content: [247281,247681,249386,249514,247485]
2025-03-06 14:37:17,636 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [247281, 247681, 249386, 249514, 247485]
2025-03-06 14:37:17,636 [DEBUG] py4...: ǀReturning 'get_network_suid': 247681
2025-03-06 14:37:17,636 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/ABC transporters [bvu02010].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,636 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,636 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml'}
2025-03-06 14:37:17,639 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml","modifiedTime":"2025-03-06 13:59:56.0969","isFile":true},
 "errors":[]
}
2025-03-06 14:37:17,640 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml', 'modifiedTime': '2025-03-06 13:59:56.0969', 'isFile': True}
2025-03-06 14:37:17,640 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml', 'modifiedTime': '2025-03-06 13:59:56.0969', 'isFile': True}
2025-03-06 14:37:17,640 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/ABC transporters [bvu02010].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,640 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,640 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml'}
2025-03-06 14:37:17,662 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:17,666 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml', 'existed': True}
2025-03-06 14:37:17,666 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml', 'existed': True}
2025-03-06 14:37:17,666 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:247681" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,666 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:247681', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml'}
2025-03-06 14:37:17,686 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml"},
 "errors":[]
}
2025-03-06 14:37:17,687 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml'}
2025-03-06 14:37:17,687 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/ABC transporters [bvu02010].graphml'}
2025-03-06 14:37:17,687 [DEBUG] py4...: --------------------
2025-03-06 14:37:17,687 [DEBUG] py4...: Calling export_network('networks_graphml/Mismatch repair [bvu03430].graphml', 'graphml', network=249386, overwrite_file=True)
2025-03-06 14:37:17,687 [DEBUG] py4...: ǀCalling get_network_suid(249386, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,687 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,688 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:17,701 [DEBUG] py4...: ǀǀOK[200], content: [247281,247681,249386,249514,247485]
2025-03-06 14:37:17,702 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [247281, 247681, 249386, 249514, 247485]
2025-03-06 14:37:17,702 [DEBUG] py4...: ǀReturning 'get_network_suid': 249386
2025-03-06 14:37:17,702 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Mismatch repair [bvu03430].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,702 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,702 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml'}
2025-03-06 14:37:17,706 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml","modifiedTime":"2025-03-06 13:59:56.0992","isFile":true},
 "errors":[]
}
2025-03-06 14:37:17,706 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml', 'modifiedTime': '2025-03-06 13:59:56.0992', 'isFile': True}
2025-03-06 14:37:17,706 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml', 'modifiedTime': '2025-03-06 13:59:56.0992', 'isFile': True}
2025-03-06 14:37:17,706 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Mismatch repair [bvu03430].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,706 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,707 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml'}
2025-03-06 14:37:17,715 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:17,725 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml', 'existed': True}
2025-03-06 14:37:17,725 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml', 'existed': True}
2025-03-06 14:37:17,725 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:249386" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,725 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:249386', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml'}
2025-03-06 14:37:17,742 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml"},
 "errors":[]
}
2025-03-06 14:37:17,742 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml'}
2025-03-06 14:37:17,742 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Mismatch repair [bvu03430].graphml'}
2025-03-06 14:37:17,742 [DEBUG] py4...: --------------------
2025-03-06 14:37:17,742 [DEBUG] py4...: Calling export_network('networks_graphml/Nucleotide excision repair [bvu03420].graphml', 'graphml', network=249514, overwrite_file=True)
2025-03-06 14:37:17,742 [DEBUG] py4...: ǀCalling get_network_suid(249514, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,743 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,743 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:17,747 [DEBUG] py4...: ǀǀOK[200], content: [247281,247681,249386,249514,247485]
2025-03-06 14:37:17,749 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [247281, 247681, 249386, 249514, 247485]
2025-03-06 14:37:17,749 [DEBUG] py4...: ǀReturning 'get_network_suid': 249514
2025-03-06 14:37:17,749 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Nucleotide excision repair [bvu03420].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,750 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,750 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml'}
2025-03-06 14:37:17,756 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml","modifiedTime":"2025-03-06 13:59:57.0018","isFile":true},
 "errors":[]
}
2025-03-06 14:37:17,756 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml', 'modifiedTime': '2025-03-06 13:59:57.0018', 'isFile': True}
2025-03-06 14:37:17,756 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml', 'modifiedTime': '2025-03-06 13:59:57.0018', 'isFile': True}
2025-03-06 14:37:17,756 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Nucleotide excision repair [bvu03420].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,757 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,757 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml'}
2025-03-06 14:37:17,762 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:17,765 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml', 'existed': True}
2025-03-06 14:37:17,765 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml', 'existed': True}
2025-03-06 14:37:17,765 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:249514" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,765 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:249514', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml'}
2025-03-06 14:37:17,783 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml"},
 "errors":[]
}
2025-03-06 14:37:17,784 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml'}
2025-03-06 14:37:17,784 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Nucleotide excision repair [bvu03420].graphml'}
2025-03-06 14:37:17,784 [DEBUG] py4...: --------------------
2025-03-06 14:37:17,784 [DEBUG] py4...: Calling export_network('networks_graphml/Base excision repair [bvu03410].graphml', 'graphml', network=247485, overwrite_file=True)
2025-03-06 14:37:17,784 [DEBUG] py4...: ǀCalling get_network_suid(247485, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,784 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,784 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:17,791 [DEBUG] py4...: ǀǀOK[200], content: [247281,247681,249386,249514,247485]
2025-03-06 14:37:17,791 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [247281, 247681, 249386, 249514, 247485]
2025-03-06 14:37:17,792 [DEBUG] py4...: ǀReturning 'get_network_suid': 247485
2025-03-06 14:37:17,792 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Base excision repair [bvu03410].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,792 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,792 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml'}
2025-03-06 14:37:17,801 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml","modifiedTime":"2025-03-06 13:59:56.0923","isFile":true},
 "errors":[]
}
2025-03-06 14:37:17,801 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml', 'modifiedTime': '2025-03-06 13:59:56.0923', 'isFile': True}
2025-03-06 14:37:17,802 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml', 'modifiedTime': '2025-03-06 13:59:56.0923', 'isFile': True}
2025-03-06 14:37:17,802 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Base excision repair [bvu03410].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,802 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,802 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml'}
2025-03-06 14:37:17,811 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:17,812 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml', 'existed': True}
2025-03-06 14:37:17,812 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml', 'existed': True}
2025-03-06 14:37:17,812 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:247485" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,815 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:247485', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml'}
2025-03-06 14:37:17,835 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml"},
 "errors":[]
}
2025-03-06 14:37:17,836 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml'}
2025-03-06 14:37:17,836 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Base excision repair [bvu03410].graphml'}
2025-03-06 14:37:17,836 [DEBUG] py4...: --------------------
2025-03-06 14:37:17,836 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_19.cys')
2025-03-06 14:37:17,836 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_19.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:17,837 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_19.cys'}
2025-03-06 14:37:19,744 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:19,745 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:19,745 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:19,745 [DEBUG] py4...: --------------------
2025-03-06 14:37:19,746 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:19,746 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,747 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:19,755 [DEBUG] py4...: ǀOK[200], content: [{"name":"Peroxisome [bvu04146]","SUID":261587},{"name":"Lysosome [bvu04142]","SUID":261785},{"name":"Quorum sensing [bvu02024]","SUID":260479},{"name":"Bacterial secretion system [bvu03070]","SUID":261359},{"name":"Two-component system [bvu02020]","SUID":262015}]
2025-03-06 14:37:19,755 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Peroxisome [bvu04146]', 'SUID': 261587}, {'name': 'Lysosome [bvu04142]', 'SUID': 261785}, {'name': 'Quorum sensing [bvu02024]', 'SUID': 260479}, {'name': 'Bacterial secretion system [bvu03070]', 'SUID': 261359}, {'name': 'Two-component system [bvu02020]', 'SUID': 262015}]
2025-03-06 14:37:19,755 [DEBUG] py4...: Returning 'get_network_list': ['Peroxisome [bvu04146]', 'Lysosome [bvu04142]', 'Quorum sensing [bvu02024]', 'Bacterial secretion system [bvu03070]', 'Two-component system [bvu02020]']
2025-03-06 14:37:19,755 [DEBUG] py4...: --------------------
2025-03-06 14:37:19,755 [DEBUG] py4...: Calling get_network_suid('Peroxisome [bvu04146]')
2025-03-06 14:37:19,755 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,756 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,756 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:19,762 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peroxisome [bvu04146]","SUID":261587},{"name":"Lysosome [bvu04142]","SUID":261785},{"name":"Quorum sensing [bvu02024]","SUID":260479},{"name":"Bacterial secretion system [bvu03070]","SUID":261359},{"name":"Two-component system [bvu02020]","SUID":262015}]
2025-03-06 14:37:19,762 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peroxisome [bvu04146]', 'SUID': 261587}, {'name': 'Lysosome [bvu04142]', 'SUID': 261785}, {'name': 'Quorum sensing [bvu02024]', 'SUID': 260479}, {'name': 'Bacterial secretion system [bvu03070]', 'SUID': 261359}, {'name': 'Two-component system [bvu02020]', 'SUID': 262015}]
2025-03-06 14:37:19,764 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peroxisome [bvu04146]', 'Lysosome [bvu04142]', 'Quorum sensing [bvu02024]', 'Bacterial secretion system [bvu03070]', 'Two-component system [bvu02020]']
2025-03-06 14:37:19,764 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Peroxisome [bvu04146]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,768 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Peroxisome [bvu04146]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:19,780 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 261587
}
],
 "errors":[]
}
2025-03-06 14:37:19,780 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 261587}]
2025-03-06 14:37:19,780 [DEBUG] py4...: Returning 'get_network_suid': 261587
2025-03-06 14:37:19,780 [DEBUG] py4...: --------------------
2025-03-06 14:37:19,780 [DEBUG] py4...: Calling get_network_suid('Lysosome [bvu04142]')
2025-03-06 14:37:19,781 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,781 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,781 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:19,785 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peroxisome [bvu04146]","SUID":261587},{"name":"Lysosome [bvu04142]","SUID":261785},{"name":"Quorum sensing [bvu02024]","SUID":260479},{"name":"Bacterial secretion system [bvu03070]","SUID":261359},{"name":"Two-component system [bvu02020]","SUID":262015}]
2025-03-06 14:37:19,785 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peroxisome [bvu04146]', 'SUID': 261587}, {'name': 'Lysosome [bvu04142]', 'SUID': 261785}, {'name': 'Quorum sensing [bvu02024]', 'SUID': 260479}, {'name': 'Bacterial secretion system [bvu03070]', 'SUID': 261359}, {'name': 'Two-component system [bvu02020]', 'SUID': 262015}]
2025-03-06 14:37:19,785 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peroxisome [bvu04146]', 'Lysosome [bvu04142]', 'Quorum sensing [bvu02024]', 'Bacterial secretion system [bvu03070]', 'Two-component system [bvu02020]']
2025-03-06 14:37:19,785 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Lysosome [bvu04142]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,786 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Lysosome [bvu04142]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:19,791 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 261785
}
],
 "errors":[]
}
2025-03-06 14:37:19,792 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 261785}]
2025-03-06 14:37:19,792 [DEBUG] py4...: Returning 'get_network_suid': 261785
2025-03-06 14:37:19,792 [DEBUG] py4...: --------------------
2025-03-06 14:37:19,792 [DEBUG] py4...: Calling get_network_suid('Quorum sensing [bvu02024]')
2025-03-06 14:37:19,792 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,792 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,792 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:19,798 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peroxisome [bvu04146]","SUID":261587},{"name":"Lysosome [bvu04142]","SUID":261785},{"name":"Quorum sensing [bvu02024]","SUID":260479},{"name":"Bacterial secretion system [bvu03070]","SUID":261359},{"name":"Two-component system [bvu02020]","SUID":262015}]
2025-03-06 14:37:19,799 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peroxisome [bvu04146]', 'SUID': 261587}, {'name': 'Lysosome [bvu04142]', 'SUID': 261785}, {'name': 'Quorum sensing [bvu02024]', 'SUID': 260479}, {'name': 'Bacterial secretion system [bvu03070]', 'SUID': 261359}, {'name': 'Two-component system [bvu02020]', 'SUID': 262015}]
2025-03-06 14:37:19,799 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peroxisome [bvu04146]', 'Lysosome [bvu04142]', 'Quorum sensing [bvu02024]', 'Bacterial secretion system [bvu03070]', 'Two-component system [bvu02020]']
2025-03-06 14:37:19,799 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Quorum sensing [bvu02024]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,799 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Quorum sensing [bvu02024]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:19,806 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 260479
}
],
 "errors":[]
}
2025-03-06 14:37:19,807 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 260479}]
2025-03-06 14:37:19,807 [DEBUG] py4...: Returning 'get_network_suid': 260479
2025-03-06 14:37:19,807 [DEBUG] py4...: --------------------
2025-03-06 14:37:19,807 [DEBUG] py4...: Calling get_network_suid('Bacterial secretion system [bvu03070]')
2025-03-06 14:37:19,807 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,807 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,807 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:19,810 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peroxisome [bvu04146]","SUID":261587},{"name":"Lysosome [bvu04142]","SUID":261785},{"name":"Quorum sensing [bvu02024]","SUID":260479},{"name":"Bacterial secretion system [bvu03070]","SUID":261359},{"name":"Two-component system [bvu02020]","SUID":262015}]
2025-03-06 14:37:19,810 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peroxisome [bvu04146]', 'SUID': 261587}, {'name': 'Lysosome [bvu04142]', 'SUID': 261785}, {'name': 'Quorum sensing [bvu02024]', 'SUID': 260479}, {'name': 'Bacterial secretion system [bvu03070]', 'SUID': 261359}, {'name': 'Two-component system [bvu02020]', 'SUID': 262015}]
2025-03-06 14:37:19,810 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peroxisome [bvu04146]', 'Lysosome [bvu04142]', 'Quorum sensing [bvu02024]', 'Bacterial secretion system [bvu03070]', 'Two-component system [bvu02020]']
2025-03-06 14:37:19,810 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Bacterial secretion system [bvu03070]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,811 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Bacterial secretion system [bvu03070]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:19,817 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 261359
}
],
 "errors":[]
}
2025-03-06 14:37:19,817 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 261359}]
2025-03-06 14:37:19,817 [DEBUG] py4...: Returning 'get_network_suid': 261359
2025-03-06 14:37:19,817 [DEBUG] py4...: --------------------
2025-03-06 14:37:19,818 [DEBUG] py4...: Calling get_network_suid('Two-component system [bvu02020]')
2025-03-06 14:37:19,818 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,818 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,818 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:19,822 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Peroxisome [bvu04146]","SUID":261587},{"name":"Lysosome [bvu04142]","SUID":261785},{"name":"Quorum sensing [bvu02024]","SUID":260479},{"name":"Bacterial secretion system [bvu03070]","SUID":261359},{"name":"Two-component system [bvu02020]","SUID":262015}]
2025-03-06 14:37:19,823 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Peroxisome [bvu04146]', 'SUID': 261587}, {'name': 'Lysosome [bvu04142]', 'SUID': 261785}, {'name': 'Quorum sensing [bvu02024]', 'SUID': 260479}, {'name': 'Bacterial secretion system [bvu03070]', 'SUID': 261359}, {'name': 'Two-component system [bvu02020]', 'SUID': 262015}]
2025-03-06 14:37:19,823 [DEBUG] py4...: ǀReturning 'get_network_list': ['Peroxisome [bvu04146]', 'Lysosome [bvu04142]', 'Quorum sensing [bvu02024]', 'Bacterial secretion system [bvu03070]', 'Two-component system [bvu02020]']
2025-03-06 14:37:19,823 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Two-component system [bvu02020]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,823 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Two-component system [bvu02020]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:19,828 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 262015
}
],
 "errors":[]
}
2025-03-06 14:37:19,828 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 262015}]
2025-03-06 14:37:19,828 [DEBUG] py4...: Returning 'get_network_suid': 262015
2025-03-06 14:37:19,828 [DEBUG] py4...: --------------------
2025-03-06 14:37:19,829 [DEBUG] py4...: Calling export_network('networks_graphml/Peroxisome [bvu04146].graphml', 'graphml', network=261587, overwrite_file=True)
2025-03-06 14:37:19,829 [DEBUG] py4...: ǀCalling get_network_suid(261587, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,830 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,830 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:19,834 [DEBUG] py4...: ǀǀOK[200], content: [261587,261785,260479,261359,262015]
2025-03-06 14:37:19,834 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [261587, 261785, 260479, 261359, 262015]
2025-03-06 14:37:19,834 [DEBUG] py4...: ǀReturning 'get_network_suid': 261587
2025-03-06 14:37:19,834 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Peroxisome [bvu04146].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,834 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,835 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml'}
2025-03-06 14:37:19,838 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml","modifiedTime":"2025-03-06 13:59:58.0173","isFile":true},
 "errors":[]
}
2025-03-06 14:37:19,838 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml', 'modifiedTime': '2025-03-06 13:59:58.0173', 'isFile': True}
2025-03-06 14:37:19,838 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml', 'modifiedTime': '2025-03-06 13:59:58.0173', 'isFile': True}
2025-03-06 14:37:19,838 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Peroxisome [bvu04146].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,838 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,838 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml'}
2025-03-06 14:37:19,842 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:19,842 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml', 'existed': True}
2025-03-06 14:37:19,842 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml', 'existed': True}
2025-03-06 14:37:19,842 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:261587" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,842 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:261587', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml'}
2025-03-06 14:37:19,864 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml"},
 "errors":[]
}
2025-03-06 14:37:19,864 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml'}
2025-03-06 14:37:19,864 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Peroxisome [bvu04146].graphml'}
2025-03-06 14:37:19,864 [DEBUG] py4...: --------------------
2025-03-06 14:37:19,864 [DEBUG] py4...: Calling export_network('networks_graphml/Lysosome [bvu04142].graphml', 'graphml', network=261785, overwrite_file=True)
2025-03-06 14:37:19,864 [DEBUG] py4...: ǀCalling get_network_suid(261785, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,864 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,864 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:19,868 [DEBUG] py4...: ǀǀOK[200], content: [261587,261785,260479,261359,262015]
2025-03-06 14:37:19,868 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [261587, 261785, 260479, 261359, 262015]
2025-03-06 14:37:19,868 [DEBUG] py4...: ǀReturning 'get_network_suid': 261785
2025-03-06 14:37:19,868 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Lysosome [bvu04142].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,868 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,868 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml'}
2025-03-06 14:37:19,875 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml","modifiedTime":"2025-03-06 13:59:58.0191","isFile":true},
 "errors":[]
}
2025-03-06 14:37:19,875 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml', 'modifiedTime': '2025-03-06 13:59:58.0191', 'isFile': True}
2025-03-06 14:37:19,875 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml', 'modifiedTime': '2025-03-06 13:59:58.0191', 'isFile': True}
2025-03-06 14:37:19,875 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Lysosome [bvu04142].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,875 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,875 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml'}
2025-03-06 14:37:19,880 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:19,880 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml', 'existed': True}
2025-03-06 14:37:19,880 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml', 'existed': True}
2025-03-06 14:37:19,880 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:261785" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,880 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:261785', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml'}
2025-03-06 14:37:19,899 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml"},
 "errors":[]
}
2025-03-06 14:37:19,900 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml'}
2025-03-06 14:37:19,900 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Lysosome [bvu04142].graphml'}
2025-03-06 14:37:19,900 [DEBUG] py4...: --------------------
2025-03-06 14:37:19,900 [DEBUG] py4...: Calling export_network('networks_graphml/Quorum sensing [bvu02024].graphml', 'graphml', network=260479, overwrite_file=True)
2025-03-06 14:37:19,900 [DEBUG] py4...: ǀCalling get_network_suid(260479, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,900 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,900 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:19,903 [DEBUG] py4...: ǀǀOK[200], content: [261587,261785,260479,261359,262015]
2025-03-06 14:37:19,903 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [261587, 261785, 260479, 261359, 262015]
2025-03-06 14:37:19,903 [DEBUG] py4...: ǀReturning 'get_network_suid': 260479
2025-03-06 14:37:19,903 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Quorum sensing [bvu02024].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,903 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,903 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml'}
2025-03-06 14:37:19,907 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml","modifiedTime":"2025-03-06 13:59:58.0112","isFile":true},
 "errors":[]
}
2025-03-06 14:37:19,907 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml', 'modifiedTime': '2025-03-06 13:59:58.0112', 'isFile': True}
2025-03-06 14:37:19,907 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml', 'modifiedTime': '2025-03-06 13:59:58.0112', 'isFile': True}
2025-03-06 14:37:19,907 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Quorum sensing [bvu02024].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,907 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,907 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml'}
2025-03-06 14:37:19,911 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:19,912 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml', 'existed': True}
2025-03-06 14:37:19,912 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml', 'existed': True}
2025-03-06 14:37:19,912 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:260479" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,912 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:260479', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml'}
2025-03-06 14:37:19,938 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml"},
 "errors":[]
}
2025-03-06 14:37:19,938 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml'}
2025-03-06 14:37:19,938 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Quorum sensing [bvu02024].graphml'}
2025-03-06 14:37:19,938 [DEBUG] py4...: --------------------
2025-03-06 14:37:19,938 [DEBUG] py4...: Calling export_network('networks_graphml/Bacterial secretion system [bvu03070].graphml', 'graphml', network=261359, overwrite_file=True)
2025-03-06 14:37:19,938 [DEBUG] py4...: ǀCalling get_network_suid(261359, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,938 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,938 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:19,942 [DEBUG] py4...: ǀǀOK[200], content: [261587,261785,260479,261359,262015]
2025-03-06 14:37:19,942 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [261587, 261785, 260479, 261359, 262015]
2025-03-06 14:37:19,942 [DEBUG] py4...: ǀReturning 'get_network_suid': 261359
2025-03-06 14:37:19,942 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Bacterial secretion system [bvu03070].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,942 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,942 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml'}
2025-03-06 14:37:19,947 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml","modifiedTime":"2025-03-06 13:59:58.0130","isFile":true},
 "errors":[]
}
2025-03-06 14:37:19,947 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml', 'modifiedTime': '2025-03-06 13:59:58.0130', 'isFile': True}
2025-03-06 14:37:19,947 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml', 'modifiedTime': '2025-03-06 13:59:58.0130', 'isFile': True}
2025-03-06 14:37:19,947 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Bacterial secretion system [bvu03070].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,947 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,947 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml'}
2025-03-06 14:37:19,952 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:19,953 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml', 'existed': True}
2025-03-06 14:37:19,953 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml', 'existed': True}
2025-03-06 14:37:19,953 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:261359" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,953 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:261359', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml'}
2025-03-06 14:37:19,979 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml"},
 "errors":[]
}
2025-03-06 14:37:19,979 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml'}
2025-03-06 14:37:19,979 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Bacterial secretion system [bvu03070].graphml'}
2025-03-06 14:37:19,979 [DEBUG] py4...: --------------------
2025-03-06 14:37:19,979 [DEBUG] py4...: Calling export_network('networks_graphml/Two-component system [bvu02020].graphml', 'graphml', network=262015, overwrite_file=True)
2025-03-06 14:37:19,979 [DEBUG] py4...: ǀCalling get_network_suid(262015, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,979 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,979 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:19,984 [DEBUG] py4...: ǀǀOK[200], content: [261587,261785,260479,261359,262015]
2025-03-06 14:37:19,985 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [261587, 261785, 260479, 261359, 262015]
2025-03-06 14:37:19,985 [DEBUG] py4...: ǀReturning 'get_network_suid': 262015
2025-03-06 14:37:19,985 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Two-component system [bvu02020].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,985 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,985 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml'}
2025-03-06 14:37:19,991 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml","modifiedTime":"2025-03-06 13:59:58.0149","isFile":true},
 "errors":[]
}
2025-03-06 14:37:19,991 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml', 'modifiedTime': '2025-03-06 13:59:58.0149', 'isFile': True}
2025-03-06 14:37:19,991 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml', 'modifiedTime': '2025-03-06 13:59:58.0149', 'isFile': True}
2025-03-06 14:37:19,991 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Two-component system [bvu02020].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,991 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,991 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml'}
2025-03-06 14:37:19,997 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:19,997 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml', 'existed': True}
2025-03-06 14:37:19,997 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml', 'existed': True}
2025-03-06 14:37:19,997 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:262015" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:19,997 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:262015', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml'}
2025-03-06 14:37:20,014 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml"},
 "errors":[]
}
2025-03-06 14:37:20,014 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml'}
2025-03-06 14:37:20,014 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Two-component system [bvu02020].graphml'}
2025-03-06 14:37:20,014 [DEBUG] py4...: --------------------
2025-03-06 14:37:20,014 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_6.cys')
2025-03-06 14:37:20,014 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_6.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:20,014 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_6.cys'}
2025-03-06 14:37:21,274 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:21,275 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:21,275 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:21,275 [DEBUG] py4...: --------------------
2025-03-06 14:37:21,275 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:21,275 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,275 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:21,280 [DEBUG] py4...: ǀOK[200], content: [{"name":"Pyrimidine metabolism [bvu00240]","SUID":276279},{"name":"Purine metabolism [bvu00230]","SUID":275363},{"name":"Glycine, serine and threonine metabolism [bvu00260]","SUID":274605},{"name":"Sphingolipid metabolism [bvu00600]","SUID":274303},{"name":"Alanine, aspartate and glutamate metabolism [bvu00250]","SUID":275035}]
2025-03-06 14:37:21,281 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Pyrimidine metabolism [bvu00240]', 'SUID': 276279}, {'name': 'Purine metabolism [bvu00230]', 'SUID': 275363}, {'name': 'Glycine, serine and threonine metabolism [bvu00260]', 'SUID': 274605}, {'name': 'Sphingolipid metabolism [bvu00600]', 'SUID': 274303}, {'name': 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'SUID': 275035}]
2025-03-06 14:37:21,281 [DEBUG] py4...: Returning 'get_network_list': ['Pyrimidine metabolism [bvu00240]', 'Purine metabolism [bvu00230]', 'Glycine, serine and threonine metabolism [bvu00260]', 'Sphingolipid metabolism [bvu00600]', 'Alanine, aspartate and glutamate metabolism [bvu00250]']
2025-03-06 14:37:21,281 [DEBUG] py4...: --------------------
2025-03-06 14:37:21,281 [DEBUG] py4...: Calling get_network_suid('Pyrimidine metabolism [bvu00240]')
2025-03-06 14:37:21,281 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,281 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,281 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:21,285 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Pyrimidine metabolism [bvu00240]","SUID":276279},{"name":"Purine metabolism [bvu00230]","SUID":275363},{"name":"Glycine, serine and threonine metabolism [bvu00260]","SUID":274605},{"name":"Sphingolipid metabolism [bvu00600]","SUID":274303},{"name":"Alanine, aspartate and glutamate metabolism [bvu00250]","SUID":275035}]
2025-03-06 14:37:21,285 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Pyrimidine metabolism [bvu00240]', 'SUID': 276279}, {'name': 'Purine metabolism [bvu00230]', 'SUID': 275363}, {'name': 'Glycine, serine and threonine metabolism [bvu00260]', 'SUID': 274605}, {'name': 'Sphingolipid metabolism [bvu00600]', 'SUID': 274303}, {'name': 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'SUID': 275035}]
2025-03-06 14:37:21,285 [DEBUG] py4...: ǀReturning 'get_network_list': ['Pyrimidine metabolism [bvu00240]', 'Purine metabolism [bvu00230]', 'Glycine, serine and threonine metabolism [bvu00260]', 'Sphingolipid metabolism [bvu00600]', 'Alanine, aspartate and glutamate metabolism [bvu00250]']
2025-03-06 14:37:21,285 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pyrimidine metabolism [bvu00240]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,285 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pyrimidine metabolism [bvu00240]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:21,290 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 276279
}
],
 "errors":[]
}
2025-03-06 14:37:21,290 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 276279}]
2025-03-06 14:37:21,291 [DEBUG] py4...: Returning 'get_network_suid': 276279
2025-03-06 14:37:21,291 [DEBUG] py4...: --------------------
2025-03-06 14:37:21,291 [DEBUG] py4...: Calling get_network_suid('Purine metabolism [bvu00230]')
2025-03-06 14:37:21,291 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,291 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,291 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:21,295 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Pyrimidine metabolism [bvu00240]","SUID":276279},{"name":"Purine metabolism [bvu00230]","SUID":275363},{"name":"Glycine, serine and threonine metabolism [bvu00260]","SUID":274605},{"name":"Sphingolipid metabolism [bvu00600]","SUID":274303},{"name":"Alanine, aspartate and glutamate metabolism [bvu00250]","SUID":275035}]
2025-03-06 14:37:21,295 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Pyrimidine metabolism [bvu00240]', 'SUID': 276279}, {'name': 'Purine metabolism [bvu00230]', 'SUID': 275363}, {'name': 'Glycine, serine and threonine metabolism [bvu00260]', 'SUID': 274605}, {'name': 'Sphingolipid metabolism [bvu00600]', 'SUID': 274303}, {'name': 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'SUID': 275035}]
2025-03-06 14:37:21,295 [DEBUG] py4...: ǀReturning 'get_network_list': ['Pyrimidine metabolism [bvu00240]', 'Purine metabolism [bvu00230]', 'Glycine, serine and threonine metabolism [bvu00260]', 'Sphingolipid metabolism [bvu00600]', 'Alanine, aspartate and glutamate metabolism [bvu00250]']
2025-03-06 14:37:21,295 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Purine metabolism [bvu00230]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,295 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Purine metabolism [bvu00230]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:21,302 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 275363
}
],
 "errors":[]
}
2025-03-06 14:37:21,302 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 275363}]
2025-03-06 14:37:21,302 [DEBUG] py4...: Returning 'get_network_suid': 275363
2025-03-06 14:37:21,302 [DEBUG] py4...: --------------------
2025-03-06 14:37:21,302 [DEBUG] py4...: Calling get_network_suid('Glycine, serine and threonine metabolism [bvu00260]')
2025-03-06 14:37:21,303 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,303 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,303 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:21,306 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Pyrimidine metabolism [bvu00240]","SUID":276279},{"name":"Purine metabolism [bvu00230]","SUID":275363},{"name":"Glycine, serine and threonine metabolism [bvu00260]","SUID":274605},{"name":"Sphingolipid metabolism [bvu00600]","SUID":274303},{"name":"Alanine, aspartate and glutamate metabolism [bvu00250]","SUID":275035}]
2025-03-06 14:37:21,306 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Pyrimidine metabolism [bvu00240]', 'SUID': 276279}, {'name': 'Purine metabolism [bvu00230]', 'SUID': 275363}, {'name': 'Glycine, serine and threonine metabolism [bvu00260]', 'SUID': 274605}, {'name': 'Sphingolipid metabolism [bvu00600]', 'SUID': 274303}, {'name': 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'SUID': 275035}]
2025-03-06 14:37:21,306 [DEBUG] py4...: ǀReturning 'get_network_list': ['Pyrimidine metabolism [bvu00240]', 'Purine metabolism [bvu00230]', 'Glycine, serine and threonine metabolism [bvu00260]', 'Sphingolipid metabolism [bvu00600]', 'Alanine, aspartate and glutamate metabolism [bvu00250]']
2025-03-06 14:37:21,306 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glycine, serine and threonine metabolism [bvu00260]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,306 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glycine, serine and threonine metabolism [bvu00260]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:21,311 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 274605
}
],
 "errors":[]
}
2025-03-06 14:37:21,311 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 274605}]
2025-03-06 14:37:21,311 [DEBUG] py4...: Returning 'get_network_suid': 274605
2025-03-06 14:37:21,311 [DEBUG] py4...: --------------------
2025-03-06 14:37:21,311 [DEBUG] py4...: Calling get_network_suid('Sphingolipid metabolism [bvu00600]')
2025-03-06 14:37:21,311 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,311 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,311 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:21,315 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Pyrimidine metabolism [bvu00240]","SUID":276279},{"name":"Purine metabolism [bvu00230]","SUID":275363},{"name":"Glycine, serine and threonine metabolism [bvu00260]","SUID":274605},{"name":"Sphingolipid metabolism [bvu00600]","SUID":274303},{"name":"Alanine, aspartate and glutamate metabolism [bvu00250]","SUID":275035}]
2025-03-06 14:37:21,315 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Pyrimidine metabolism [bvu00240]', 'SUID': 276279}, {'name': 'Purine metabolism [bvu00230]', 'SUID': 275363}, {'name': 'Glycine, serine and threonine metabolism [bvu00260]', 'SUID': 274605}, {'name': 'Sphingolipid metabolism [bvu00600]', 'SUID': 274303}, {'name': 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'SUID': 275035}]
2025-03-06 14:37:21,315 [DEBUG] py4...: ǀReturning 'get_network_list': ['Pyrimidine metabolism [bvu00240]', 'Purine metabolism [bvu00230]', 'Glycine, serine and threonine metabolism [bvu00260]', 'Sphingolipid metabolism [bvu00600]', 'Alanine, aspartate and glutamate metabolism [bvu00250]']
2025-03-06 14:37:21,315 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Sphingolipid metabolism [bvu00600]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,315 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Sphingolipid metabolism [bvu00600]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:21,321 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 274303
}
],
 "errors":[]
}
2025-03-06 14:37:21,321 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 274303}]
2025-03-06 14:37:21,321 [DEBUG] py4...: Returning 'get_network_suid': 274303
2025-03-06 14:37:21,321 [DEBUG] py4...: --------------------
2025-03-06 14:37:21,321 [DEBUG] py4...: Calling get_network_suid('Alanine, aspartate and glutamate metabolism [bvu00250]')
2025-03-06 14:37:21,322 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,322 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,322 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:21,328 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Pyrimidine metabolism [bvu00240]","SUID":276279},{"name":"Purine metabolism [bvu00230]","SUID":275363},{"name":"Glycine, serine and threonine metabolism [bvu00260]","SUID":274605},{"name":"Sphingolipid metabolism [bvu00600]","SUID":274303},{"name":"Alanine, aspartate and glutamate metabolism [bvu00250]","SUID":275035}]
2025-03-06 14:37:21,328 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Pyrimidine metabolism [bvu00240]', 'SUID': 276279}, {'name': 'Purine metabolism [bvu00230]', 'SUID': 275363}, {'name': 'Glycine, serine and threonine metabolism [bvu00260]', 'SUID': 274605}, {'name': 'Sphingolipid metabolism [bvu00600]', 'SUID': 274303}, {'name': 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'SUID': 275035}]
2025-03-06 14:37:21,328 [DEBUG] py4...: ǀReturning 'get_network_list': ['Pyrimidine metabolism [bvu00240]', 'Purine metabolism [bvu00230]', 'Glycine, serine and threonine metabolism [bvu00260]', 'Sphingolipid metabolism [bvu00600]', 'Alanine, aspartate and glutamate metabolism [bvu00250]']
2025-03-06 14:37:21,328 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Alanine, aspartate and glutamate metabolism [bvu00250]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,329 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Alanine, aspartate and glutamate metabolism [bvu00250]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:21,333 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 275035
}
],
 "errors":[]
}
2025-03-06 14:37:21,333 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 275035}]
2025-03-06 14:37:21,333 [DEBUG] py4...: Returning 'get_network_suid': 275035
2025-03-06 14:37:21,333 [DEBUG] py4...: --------------------
2025-03-06 14:37:21,333 [DEBUG] py4...: Calling export_network('networks_graphml/Pyrimidine metabolism [bvu00240].graphml', 'graphml', network=276279, overwrite_file=True)
2025-03-06 14:37:21,333 [DEBUG] py4...: ǀCalling get_network_suid(276279, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,333 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,333 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:21,336 [DEBUG] py4...: ǀǀOK[200], content: [276279,275363,274605,274303,275035]
2025-03-06 14:37:21,336 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [276279, 275363, 274605, 274303, 275035]
2025-03-06 14:37:21,336 [DEBUG] py4...: ǀReturning 'get_network_suid': 276279
2025-03-06 14:37:21,336 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Pyrimidine metabolism [bvu00240].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,337 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,337 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml'}
2025-03-06 14:37:21,341 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml","modifiedTime":"2025-03-06 13:59:59.0318","isFile":true},
 "errors":[]
}
2025-03-06 14:37:21,341 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml', 'modifiedTime': '2025-03-06 13:59:59.0318', 'isFile': True}
2025-03-06 14:37:21,341 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml', 'modifiedTime': '2025-03-06 13:59:59.0318', 'isFile': True}
2025-03-06 14:37:21,341 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Pyrimidine metabolism [bvu00240].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,341 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,341 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml'}
2025-03-06 14:37:21,345 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:21,345 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml', 'existed': True}
2025-03-06 14:37:21,345 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml', 'existed': True}
2025-03-06 14:37:21,345 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:276279" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,345 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:276279', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml'}
2025-03-06 14:37:21,353 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml"},
 "errors":[]
}
2025-03-06 14:37:21,353 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml'}
2025-03-06 14:37:21,354 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyrimidine metabolism [bvu00240].graphml'}
2025-03-06 14:37:21,354 [DEBUG] py4...: --------------------
2025-03-06 14:37:21,354 [DEBUG] py4...: Calling export_network('networks_graphml/Purine metabolism [bvu00230].graphml', 'graphml', network=275363, overwrite_file=True)
2025-03-06 14:37:21,354 [DEBUG] py4...: ǀCalling get_network_suid(275363, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,354 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,354 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:21,357 [DEBUG] py4...: ǀǀOK[200], content: [276279,275363,274605,274303,275035]
2025-03-06 14:37:21,357 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [276279, 275363, 274605, 274303, 275035]
2025-03-06 14:37:21,357 [DEBUG] py4...: ǀReturning 'get_network_suid': 275363
2025-03-06 14:37:21,357 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Purine metabolism [bvu00230].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,357 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,357 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml'}
2025-03-06 14:37:21,361 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml","modifiedTime":"2025-03-06 13:59:59.0365","isFile":true},
 "errors":[]
}
2025-03-06 14:37:21,361 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml', 'modifiedTime': '2025-03-06 13:59:59.0365', 'isFile': True}
2025-03-06 14:37:21,361 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml', 'modifiedTime': '2025-03-06 13:59:59.0365', 'isFile': True}
2025-03-06 14:37:21,361 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Purine metabolism [bvu00230].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,361 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,361 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml'}
2025-03-06 14:37:21,365 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:21,365 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml', 'existed': True}
2025-03-06 14:37:21,365 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml', 'existed': True}
2025-03-06 14:37:21,365 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:275363" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,365 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:275363', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml'}
2025-03-06 14:37:21,372 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml"},
 "errors":[]
}
2025-03-06 14:37:21,373 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml'}
2025-03-06 14:37:21,373 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Purine metabolism [bvu00230].graphml'}
2025-03-06 14:37:21,373 [DEBUG] py4...: --------------------
2025-03-06 14:37:21,373 [DEBUG] py4...: Calling export_network('networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml', 'graphml', network=274605, overwrite_file=True)
2025-03-06 14:37:21,373 [DEBUG] py4...: ǀCalling get_network_suid(274605, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,373 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,373 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:21,377 [DEBUG] py4...: ǀǀOK[200], content: [276279,275363,274605,274303,275035]
2025-03-06 14:37:21,377 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [276279, 275363, 274605, 274303, 275035]
2025-03-06 14:37:21,377 [DEBUG] py4...: ǀReturning 'get_network_suid': 274605
2025-03-06 14:37:21,377 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,377 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,377 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml'}
2025-03-06 14:37:21,381 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml","modifiedTime":"2025-03-06 13:59:59.0303","isFile":true},
 "errors":[]
}
2025-03-06 14:37:21,382 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml', 'modifiedTime': '2025-03-06 13:59:59.0303', 'isFile': True}
2025-03-06 14:37:21,382 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml', 'modifiedTime': '2025-03-06 13:59:59.0303', 'isFile': True}
2025-03-06 14:37:21,382 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,382 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,382 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml'}
2025-03-06 14:37:21,386 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:21,386 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml', 'existed': True}
2025-03-06 14:37:21,386 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml', 'existed': True}
2025-03-06 14:37:21,386 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:274605" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,386 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:274605', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml'}
2025-03-06 14:37:21,393 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml"},
 "errors":[]
}
2025-03-06 14:37:21,393 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml'}
2025-03-06 14:37:21,393 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycine, serine and threonine metabolism [bvu00260].graphml'}
2025-03-06 14:37:21,393 [DEBUG] py4...: --------------------
2025-03-06 14:37:21,393 [DEBUG] py4...: Calling export_network('networks_graphml/Sphingolipid metabolism [bvu00600].graphml', 'graphml', network=274303, overwrite_file=True)
2025-03-06 14:37:21,393 [DEBUG] py4...: ǀCalling get_network_suid(274303, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,393 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,393 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:21,396 [DEBUG] py4...: ǀǀOK[200], content: [276279,275363,274605,274303,275035]
2025-03-06 14:37:21,396 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [276279, 275363, 274605, 274303, 275035]
2025-03-06 14:37:21,396 [DEBUG] py4...: ǀReturning 'get_network_suid': 274303
2025-03-06 14:37:21,396 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Sphingolipid metabolism [bvu00600].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,396 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,396 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml'}
2025-03-06 14:37:21,399 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml","modifiedTime":"2025-03-06 13:59:59.0276","isFile":true},
 "errors":[]
}
2025-03-06 14:37:21,400 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml', 'modifiedTime': '2025-03-06 13:59:59.0276', 'isFile': True}
2025-03-06 14:37:21,400 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml', 'modifiedTime': '2025-03-06 13:59:59.0276', 'isFile': True}
2025-03-06 14:37:21,400 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Sphingolipid metabolism [bvu00600].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,400 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,400 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml'}
2025-03-06 14:37:21,403 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:21,404 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml', 'existed': True}
2025-03-06 14:37:21,404 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml', 'existed': True}
2025-03-06 14:37:21,404 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:274303" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,404 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:274303', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml'}
2025-03-06 14:37:21,411 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml"},
 "errors":[]
}
2025-03-06 14:37:21,411 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml'}
2025-03-06 14:37:21,411 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Sphingolipid metabolism [bvu00600].graphml'}
2025-03-06 14:37:21,411 [DEBUG] py4...: --------------------
2025-03-06 14:37:21,411 [DEBUG] py4...: Calling export_network('networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml', 'graphml', network=275035, overwrite_file=True)
2025-03-06 14:37:21,411 [DEBUG] py4...: ǀCalling get_network_suid(275035, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,411 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,411 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:21,414 [DEBUG] py4...: ǀǀOK[200], content: [276279,275363,274605,274303,275035]
2025-03-06 14:37:21,414 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [276279, 275363, 274605, 274303, 275035]
2025-03-06 14:37:21,415 [DEBUG] py4...: ǀReturning 'get_network_suid': 275035
2025-03-06 14:37:21,415 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,415 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,415 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml'}
2025-03-06 14:37:21,418 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml","modifiedTime":"2025-03-06 13:59:59.0289","isFile":true},
 "errors":[]
}
2025-03-06 14:37:21,418 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml', 'modifiedTime': '2025-03-06 13:59:59.0289', 'isFile': True}
2025-03-06 14:37:21,418 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml', 'modifiedTime': '2025-03-06 13:59:59.0289', 'isFile': True}
2025-03-06 14:37:21,418 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,418 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,418 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml'}
2025-03-06 14:37:21,422 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:21,423 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml', 'existed': True}
2025-03-06 14:37:21,423 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml', 'existed': True}
2025-03-06 14:37:21,423 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:275035" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,423 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:275035', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml'}
2025-03-06 14:37:21,431 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml"},
 "errors":[]
}
2025-03-06 14:37:21,431 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml'}
2025-03-06 14:37:21,432 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Alanine, aspartate and glutamate metabolism [bvu00250].graphml'}
2025-03-06 14:37:21,432 [DEBUG] py4...: --------------------
2025-03-06 14:37:21,432 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_2.cys')
2025-03-06 14:37:21,432 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_2.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:21,432 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_2.cys'}
2025-03-06 14:37:22,422 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:22,422 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:22,422 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:22,422 [DEBUG] py4...: --------------------
2025-03-06 14:37:22,422 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:22,422 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,422 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:22,425 [DEBUG] py4...: ǀOK[200], content: [{"name":"Glyoxylate and dicarboxylate metabolism [bvu00630]","SUID":287975},{"name":"Pyruvate metabolism [bvu00620]","SUID":287217},{"name":"Ascorbate and aldarate metabolism [bvu00053]","SUID":288401},{"name":"Galactose metabolism [bvu00052]","SUID":287597},{"name":"Starch and sucrose metabolism [bvu00500]","SUID":286715}]
2025-03-06 14:37:22,426 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Glyoxylate and dicarboxylate metabolism [bvu00630]', 'SUID': 287975}, {'name': 'Pyruvate metabolism [bvu00620]', 'SUID': 287217}, {'name': 'Ascorbate and aldarate metabolism [bvu00053]', 'SUID': 288401}, {'name': 'Galactose metabolism [bvu00052]', 'SUID': 287597}, {'name': 'Starch and sucrose metabolism [bvu00500]', 'SUID': 286715}]
2025-03-06 14:37:22,426 [DEBUG] py4...: Returning 'get_network_list': ['Glyoxylate and dicarboxylate metabolism [bvu00630]', 'Pyruvate metabolism [bvu00620]', 'Ascorbate and aldarate metabolism [bvu00053]', 'Galactose metabolism [bvu00052]', 'Starch and sucrose metabolism [bvu00500]']
2025-03-06 14:37:22,426 [DEBUG] py4...: --------------------
2025-03-06 14:37:22,426 [DEBUG] py4...: Calling get_network_suid('Glyoxylate and dicarboxylate metabolism [bvu00630]')
2025-03-06 14:37:22,426 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,426 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,426 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:22,429 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glyoxylate and dicarboxylate metabolism [bvu00630]","SUID":287975},{"name":"Pyruvate metabolism [bvu00620]","SUID":287217},{"name":"Ascorbate and aldarate metabolism [bvu00053]","SUID":288401},{"name":"Galactose metabolism [bvu00052]","SUID":287597},{"name":"Starch and sucrose metabolism [bvu00500]","SUID":286715}]
2025-03-06 14:37:22,430 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glyoxylate and dicarboxylate metabolism [bvu00630]', 'SUID': 287975}, {'name': 'Pyruvate metabolism [bvu00620]', 'SUID': 287217}, {'name': 'Ascorbate and aldarate metabolism [bvu00053]', 'SUID': 288401}, {'name': 'Galactose metabolism [bvu00052]', 'SUID': 287597}, {'name': 'Starch and sucrose metabolism [bvu00500]', 'SUID': 286715}]
2025-03-06 14:37:22,430 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glyoxylate and dicarboxylate metabolism [bvu00630]', 'Pyruvate metabolism [bvu00620]', 'Ascorbate and aldarate metabolism [bvu00053]', 'Galactose metabolism [bvu00052]', 'Starch and sucrose metabolism [bvu00500]']
2025-03-06 14:37:22,430 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glyoxylate and dicarboxylate metabolism [bvu00630]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,430 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glyoxylate and dicarboxylate metabolism [bvu00630]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:22,434 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 287975
}
],
 "errors":[]
}
2025-03-06 14:37:22,434 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 287975}]
2025-03-06 14:37:22,434 [DEBUG] py4...: Returning 'get_network_suid': 287975
2025-03-06 14:37:22,434 [DEBUG] py4...: --------------------
2025-03-06 14:37:22,435 [DEBUG] py4...: Calling get_network_suid('Pyruvate metabolism [bvu00620]')
2025-03-06 14:37:22,435 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,435 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,435 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:22,438 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glyoxylate and dicarboxylate metabolism [bvu00630]","SUID":287975},{"name":"Pyruvate metabolism [bvu00620]","SUID":287217},{"name":"Ascorbate and aldarate metabolism [bvu00053]","SUID":288401},{"name":"Galactose metabolism [bvu00052]","SUID":287597},{"name":"Starch and sucrose metabolism [bvu00500]","SUID":286715}]
2025-03-06 14:37:22,438 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glyoxylate and dicarboxylate metabolism [bvu00630]', 'SUID': 287975}, {'name': 'Pyruvate metabolism [bvu00620]', 'SUID': 287217}, {'name': 'Ascorbate and aldarate metabolism [bvu00053]', 'SUID': 288401}, {'name': 'Galactose metabolism [bvu00052]', 'SUID': 287597}, {'name': 'Starch and sucrose metabolism [bvu00500]', 'SUID': 286715}]
2025-03-06 14:37:22,438 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glyoxylate and dicarboxylate metabolism [bvu00630]', 'Pyruvate metabolism [bvu00620]', 'Ascorbate and aldarate metabolism [bvu00053]', 'Galactose metabolism [bvu00052]', 'Starch and sucrose metabolism [bvu00500]']
2025-03-06 14:37:22,438 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pyruvate metabolism [bvu00620]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,438 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pyruvate metabolism [bvu00620]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:22,441 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 287217
}
],
 "errors":[]
}
2025-03-06 14:37:22,442 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 287217}]
2025-03-06 14:37:22,442 [DEBUG] py4...: Returning 'get_network_suid': 287217
2025-03-06 14:37:22,442 [DEBUG] py4...: --------------------
2025-03-06 14:37:22,442 [DEBUG] py4...: Calling get_network_suid('Ascorbate and aldarate metabolism [bvu00053]')
2025-03-06 14:37:22,442 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,442 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,442 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:22,445 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glyoxylate and dicarboxylate metabolism [bvu00630]","SUID":287975},{"name":"Pyruvate metabolism [bvu00620]","SUID":287217},{"name":"Ascorbate and aldarate metabolism [bvu00053]","SUID":288401},{"name":"Galactose metabolism [bvu00052]","SUID":287597},{"name":"Starch and sucrose metabolism [bvu00500]","SUID":286715}]
2025-03-06 14:37:22,445 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glyoxylate and dicarboxylate metabolism [bvu00630]', 'SUID': 287975}, {'name': 'Pyruvate metabolism [bvu00620]', 'SUID': 287217}, {'name': 'Ascorbate and aldarate metabolism [bvu00053]', 'SUID': 288401}, {'name': 'Galactose metabolism [bvu00052]', 'SUID': 287597}, {'name': 'Starch and sucrose metabolism [bvu00500]', 'SUID': 286715}]
2025-03-06 14:37:22,445 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glyoxylate and dicarboxylate metabolism [bvu00630]', 'Pyruvate metabolism [bvu00620]', 'Ascorbate and aldarate metabolism [bvu00053]', 'Galactose metabolism [bvu00052]', 'Starch and sucrose metabolism [bvu00500]']
2025-03-06 14:37:22,445 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Ascorbate and aldarate metabolism [bvu00053]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,445 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Ascorbate and aldarate metabolism [bvu00053]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:22,448 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 288401
}
],
 "errors":[]
}
2025-03-06 14:37:22,448 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 288401}]
2025-03-06 14:37:22,448 [DEBUG] py4...: Returning 'get_network_suid': 288401
2025-03-06 14:37:22,448 [DEBUG] py4...: --------------------
2025-03-06 14:37:22,448 [DEBUG] py4...: Calling get_network_suid('Galactose metabolism [bvu00052]')
2025-03-06 14:37:22,448 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,448 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,448 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:22,451 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glyoxylate and dicarboxylate metabolism [bvu00630]","SUID":287975},{"name":"Pyruvate metabolism [bvu00620]","SUID":287217},{"name":"Ascorbate and aldarate metabolism [bvu00053]","SUID":288401},{"name":"Galactose metabolism [bvu00052]","SUID":287597},{"name":"Starch and sucrose metabolism [bvu00500]","SUID":286715}]
2025-03-06 14:37:22,451 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glyoxylate and dicarboxylate metabolism [bvu00630]', 'SUID': 287975}, {'name': 'Pyruvate metabolism [bvu00620]', 'SUID': 287217}, {'name': 'Ascorbate and aldarate metabolism [bvu00053]', 'SUID': 288401}, {'name': 'Galactose metabolism [bvu00052]', 'SUID': 287597}, {'name': 'Starch and sucrose metabolism [bvu00500]', 'SUID': 286715}]
2025-03-06 14:37:22,451 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glyoxylate and dicarboxylate metabolism [bvu00630]', 'Pyruvate metabolism [bvu00620]', 'Ascorbate and aldarate metabolism [bvu00053]', 'Galactose metabolism [bvu00052]', 'Starch and sucrose metabolism [bvu00500]']
2025-03-06 14:37:22,451 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Galactose metabolism [bvu00052]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,451 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Galactose metabolism [bvu00052]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:22,454 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 287597
}
],
 "errors":[]
}
2025-03-06 14:37:22,455 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 287597}]
2025-03-06 14:37:22,455 [DEBUG] py4...: Returning 'get_network_suid': 287597
2025-03-06 14:37:22,455 [DEBUG] py4...: --------------------
2025-03-06 14:37:22,455 [DEBUG] py4...: Calling get_network_suid('Starch and sucrose metabolism [bvu00500]')
2025-03-06 14:37:22,455 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,455 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,455 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:22,458 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glyoxylate and dicarboxylate metabolism [bvu00630]","SUID":287975},{"name":"Pyruvate metabolism [bvu00620]","SUID":287217},{"name":"Ascorbate and aldarate metabolism [bvu00053]","SUID":288401},{"name":"Galactose metabolism [bvu00052]","SUID":287597},{"name":"Starch and sucrose metabolism [bvu00500]","SUID":286715}]
2025-03-06 14:37:22,458 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glyoxylate and dicarboxylate metabolism [bvu00630]', 'SUID': 287975}, {'name': 'Pyruvate metabolism [bvu00620]', 'SUID': 287217}, {'name': 'Ascorbate and aldarate metabolism [bvu00053]', 'SUID': 288401}, {'name': 'Galactose metabolism [bvu00052]', 'SUID': 287597}, {'name': 'Starch and sucrose metabolism [bvu00500]', 'SUID': 286715}]
2025-03-06 14:37:22,458 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glyoxylate and dicarboxylate metabolism [bvu00630]', 'Pyruvate metabolism [bvu00620]', 'Ascorbate and aldarate metabolism [bvu00053]', 'Galactose metabolism [bvu00052]', 'Starch and sucrose metabolism [bvu00500]']
2025-03-06 14:37:22,458 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Starch and sucrose metabolism [bvu00500]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,458 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Starch and sucrose metabolism [bvu00500]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:22,461 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 286715
}
],
 "errors":[]
}
2025-03-06 14:37:22,461 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 286715}]
2025-03-06 14:37:22,461 [DEBUG] py4...: Returning 'get_network_suid': 286715
2025-03-06 14:37:22,461 [DEBUG] py4...: --------------------
2025-03-06 14:37:22,461 [DEBUG] py4...: Calling export_network('networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml', 'graphml', network=287975, overwrite_file=True)
2025-03-06 14:37:22,462 [DEBUG] py4...: ǀCalling get_network_suid(287975, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,462 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,462 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:22,464 [DEBUG] py4...: ǀǀOK[200], content: [287975,287217,288401,287597,286715]
2025-03-06 14:37:22,464 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [287975, 287217, 288401, 287597, 286715]
2025-03-06 14:37:22,464 [DEBUG] py4...: ǀReturning 'get_network_suid': 287975
2025-03-06 14:37:22,464 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,464 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,465 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml'}
2025-03-06 14:37:22,467 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml","modifiedTime":"2025-03-06 14:00:00.0476","isFile":true},
 "errors":[]
}
2025-03-06 14:37:22,468 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml', 'modifiedTime': '2025-03-06 14:00:00.0476', 'isFile': True}
2025-03-06 14:37:22,468 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml', 'modifiedTime': '2025-03-06 14:00:00.0476', 'isFile': True}
2025-03-06 14:37:22,468 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,468 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,468 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml'}
2025-03-06 14:37:22,472 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:22,472 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml', 'existed': True}
2025-03-06 14:37:22,472 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml', 'existed': True}
2025-03-06 14:37:22,472 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:287975" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,472 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:287975', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml'}
2025-03-06 14:37:22,479 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml"},
 "errors":[]
}
2025-03-06 14:37:22,479 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml'}
2025-03-06 14:37:22,479 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glyoxylate and dicarboxylate metabolism [bvu00630].graphml'}
2025-03-06 14:37:22,479 [DEBUG] py4...: --------------------
2025-03-06 14:37:22,479 [DEBUG] py4...: Calling export_network('networks_graphml/Pyruvate metabolism [bvu00620].graphml', 'graphml', network=287217, overwrite_file=True)
2025-03-06 14:37:22,479 [DEBUG] py4...: ǀCalling get_network_suid(287217, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,479 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,479 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:22,482 [DEBUG] py4...: ǀǀOK[200], content: [287975,287217,288401,287597,286715]
2025-03-06 14:37:22,482 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [287975, 287217, 288401, 287597, 286715]
2025-03-06 14:37:22,482 [DEBUG] py4...: ǀReturning 'get_network_suid': 287217
2025-03-06 14:37:22,482 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Pyruvate metabolism [bvu00620].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,482 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,482 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml'}
2025-03-06 14:37:22,486 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml","modifiedTime":"2025-03-06 14:00:00.0417","isFile":true},
 "errors":[]
}
2025-03-06 14:37:22,486 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml', 'modifiedTime': '2025-03-06 14:00:00.0417', 'isFile': True}
2025-03-06 14:37:22,486 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml', 'modifiedTime': '2025-03-06 14:00:00.0417', 'isFile': True}
2025-03-06 14:37:22,486 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Pyruvate metabolism [bvu00620].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,486 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,486 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml'}
2025-03-06 14:37:22,489 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:22,490 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml', 'existed': True}
2025-03-06 14:37:22,490 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml', 'existed': True}
2025-03-06 14:37:22,490 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:287217" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,490 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:287217', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml'}
2025-03-06 14:37:22,497 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml"},
 "errors":[]
}
2025-03-06 14:37:22,497 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml'}
2025-03-06 14:37:22,497 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pyruvate metabolism [bvu00620].graphml'}
2025-03-06 14:37:22,497 [DEBUG] py4...: --------------------
2025-03-06 14:37:22,497 [DEBUG] py4...: Calling export_network('networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml', 'graphml', network=288401, overwrite_file=True)
2025-03-06 14:37:22,497 [DEBUG] py4...: ǀCalling get_network_suid(288401, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,497 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,497 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:22,500 [DEBUG] py4...: ǀǀOK[200], content: [287975,287217,288401,287597,286715]
2025-03-06 14:37:22,500 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [287975, 287217, 288401, 287597, 286715]
2025-03-06 14:37:22,500 [DEBUG] py4...: ǀReturning 'get_network_suid': 288401
2025-03-06 14:37:22,500 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,500 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,500 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml'}
2025-03-06 14:37:22,503 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml","modifiedTime":"2025-03-06 14:00:00.0432","isFile":true},
 "errors":[]
}
2025-03-06 14:37:22,504 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml', 'modifiedTime': '2025-03-06 14:00:00.0432', 'isFile': True}
2025-03-06 14:37:22,504 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml', 'modifiedTime': '2025-03-06 14:00:00.0432', 'isFile': True}
2025-03-06 14:37:22,504 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,504 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,504 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml'}
2025-03-06 14:37:22,507 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:22,507 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml', 'existed': True}
2025-03-06 14:37:22,508 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml', 'existed': True}
2025-03-06 14:37:22,508 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:288401" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,508 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:288401', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml'}
2025-03-06 14:37:22,515 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml"},
 "errors":[]
}
2025-03-06 14:37:22,515 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml'}
2025-03-06 14:37:22,515 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Ascorbate and aldarate metabolism [bvu00053].graphml'}
2025-03-06 14:37:22,515 [DEBUG] py4...: --------------------
2025-03-06 14:37:22,515 [DEBUG] py4...: Calling export_network('networks_graphml/Galactose metabolism [bvu00052].graphml', 'graphml', network=287597, overwrite_file=True)
2025-03-06 14:37:22,515 [DEBUG] py4...: ǀCalling get_network_suid(287597, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,515 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,516 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:22,518 [DEBUG] py4...: ǀǀOK[200], content: [287975,287217,288401,287597,286715]
2025-03-06 14:37:22,518 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [287975, 287217, 288401, 287597, 286715]
2025-03-06 14:37:22,518 [DEBUG] py4...: ǀReturning 'get_network_suid': 287597
2025-03-06 14:37:22,518 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Galactose metabolism [bvu00052].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,518 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,518 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml'}
2025-03-06 14:37:22,522 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml","modifiedTime":"2025-03-06 14:00:00.0462","isFile":true},
 "errors":[]
}
2025-03-06 14:37:22,522 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml', 'modifiedTime': '2025-03-06 14:00:00.0462', 'isFile': True}
2025-03-06 14:37:22,522 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml', 'modifiedTime': '2025-03-06 14:00:00.0462', 'isFile': True}
2025-03-06 14:37:22,522 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Galactose metabolism [bvu00052].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,522 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,522 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml'}
2025-03-06 14:37:22,525 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:22,525 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml', 'existed': True}
2025-03-06 14:37:22,525 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml', 'existed': True}
2025-03-06 14:37:22,525 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:287597" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,525 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:287597', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml'}
2025-03-06 14:37:22,532 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml"},
 "errors":[]
}
2025-03-06 14:37:22,532 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml'}
2025-03-06 14:37:22,532 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Galactose metabolism [bvu00052].graphml'}
2025-03-06 14:37:22,532 [DEBUG] py4...: --------------------
2025-03-06 14:37:22,532 [DEBUG] py4...: Calling export_network('networks_graphml/Starch and sucrose metabolism [bvu00500].graphml', 'graphml', network=286715, overwrite_file=True)
2025-03-06 14:37:22,532 [DEBUG] py4...: ǀCalling get_network_suid(286715, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,532 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,532 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:22,535 [DEBUG] py4...: ǀǀOK[200], content: [287975,287217,288401,287597,286715]
2025-03-06 14:37:22,535 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [287975, 287217, 288401, 287597, 286715]
2025-03-06 14:37:22,536 [DEBUG] py4...: ǀReturning 'get_network_suid': 286715
2025-03-06 14:37:22,536 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Starch and sucrose metabolism [bvu00500].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,536 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,536 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml'}
2025-03-06 14:37:22,539 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml","modifiedTime":"2025-03-06 14:00:00.0447","isFile":true},
 "errors":[]
}
2025-03-06 14:37:22,539 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml', 'modifiedTime': '2025-03-06 14:00:00.0447', 'isFile': True}
2025-03-06 14:37:22,539 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml', 'modifiedTime': '2025-03-06 14:00:00.0447', 'isFile': True}
2025-03-06 14:37:22,539 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Starch and sucrose metabolism [bvu00500].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,539 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,539 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml'}
2025-03-06 14:37:22,542 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:22,542 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml', 'existed': True}
2025-03-06 14:37:22,542 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml', 'existed': True}
2025-03-06 14:37:22,543 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:286715" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,543 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:286715', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml'}
2025-03-06 14:37:22,549 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml"},
 "errors":[]
}
2025-03-06 14:37:22,549 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml'}
2025-03-06 14:37:22,549 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Starch and sucrose metabolism [bvu00500].graphml'}
2025-03-06 14:37:22,549 [DEBUG] py4...: --------------------
2025-03-06 14:37:22,550 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_20.cys')
2025-03-06 14:37:22,550 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_20.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:22,550 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_20.cys'}
2025-03-06 14:37:23,458 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:23,458 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:23,458 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:23,458 [DEBUG] py4...: --------------------
2025-03-06 14:37:23,458 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:23,458 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,458 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:23,462 [DEBUG] py4...: ǀOK[200], content: [{"name":"Flagellar assembly [bvu02040]","SUID":296708},{"name":"Folate transport and metabolism [bvu04981]","SUID":296884},{"name":"beta-Lactam resistance [bvu01501]","SUID":296454},{"name":"Cobalamin transport and metabolism [bvu04980]","SUID":297160},{"name":"Vancomycin resistance [bvu01502]","SUID":296186}]
2025-03-06 14:37:23,462 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Flagellar assembly [bvu02040]', 'SUID': 296708}, {'name': 'Folate transport and metabolism [bvu04981]', 'SUID': 296884}, {'name': 'beta-Lactam resistance [bvu01501]', 'SUID': 296454}, {'name': 'Cobalamin transport and metabolism [bvu04980]', 'SUID': 297160}, {'name': 'Vancomycin resistance [bvu01502]', 'SUID': 296186}]
2025-03-06 14:37:23,462 [DEBUG] py4...: Returning 'get_network_list': ['Flagellar assembly [bvu02040]', 'Folate transport and metabolism [bvu04981]', 'beta-Lactam resistance [bvu01501]', 'Cobalamin transport and metabolism [bvu04980]', 'Vancomycin resistance [bvu01502]']
2025-03-06 14:37:23,462 [DEBUG] py4...: --------------------
2025-03-06 14:37:23,462 [DEBUG] py4...: Calling get_network_suid('Flagellar assembly [bvu02040]')
2025-03-06 14:37:23,462 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,462 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,462 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:23,465 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Flagellar assembly [bvu02040]","SUID":296708},{"name":"Folate transport and metabolism [bvu04981]","SUID":296884},{"name":"beta-Lactam resistance [bvu01501]","SUID":296454},{"name":"Cobalamin transport and metabolism [bvu04980]","SUID":297160},{"name":"Vancomycin resistance [bvu01502]","SUID":296186}]
2025-03-06 14:37:23,465 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Flagellar assembly [bvu02040]', 'SUID': 296708}, {'name': 'Folate transport and metabolism [bvu04981]', 'SUID': 296884}, {'name': 'beta-Lactam resistance [bvu01501]', 'SUID': 296454}, {'name': 'Cobalamin transport and metabolism [bvu04980]', 'SUID': 297160}, {'name': 'Vancomycin resistance [bvu01502]', 'SUID': 296186}]
2025-03-06 14:37:23,465 [DEBUG] py4...: ǀReturning 'get_network_list': ['Flagellar assembly [bvu02040]', 'Folate transport and metabolism [bvu04981]', 'beta-Lactam resistance [bvu01501]', 'Cobalamin transport and metabolism [bvu04980]', 'Vancomycin resistance [bvu01502]']
2025-03-06 14:37:23,465 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Flagellar assembly [bvu02040]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,465 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Flagellar assembly [bvu02040]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:23,469 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 296708
}
],
 "errors":[]
}
2025-03-06 14:37:23,469 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 296708}]
2025-03-06 14:37:23,469 [DEBUG] py4...: Returning 'get_network_suid': 296708
2025-03-06 14:37:23,469 [DEBUG] py4...: --------------------
2025-03-06 14:37:23,469 [DEBUG] py4...: Calling get_network_suid('Folate transport and metabolism [bvu04981]')
2025-03-06 14:37:23,469 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,469 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,469 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:23,473 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Flagellar assembly [bvu02040]","SUID":296708},{"name":"Folate transport and metabolism [bvu04981]","SUID":296884},{"name":"beta-Lactam resistance [bvu01501]","SUID":296454},{"name":"Cobalamin transport and metabolism [bvu04980]","SUID":297160},{"name":"Vancomycin resistance [bvu01502]","SUID":296186}]
2025-03-06 14:37:23,473 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Flagellar assembly [bvu02040]', 'SUID': 296708}, {'name': 'Folate transport and metabolism [bvu04981]', 'SUID': 296884}, {'name': 'beta-Lactam resistance [bvu01501]', 'SUID': 296454}, {'name': 'Cobalamin transport and metabolism [bvu04980]', 'SUID': 297160}, {'name': 'Vancomycin resistance [bvu01502]', 'SUID': 296186}]
2025-03-06 14:37:23,473 [DEBUG] py4...: ǀReturning 'get_network_list': ['Flagellar assembly [bvu02040]', 'Folate transport and metabolism [bvu04981]', 'beta-Lactam resistance [bvu01501]', 'Cobalamin transport and metabolism [bvu04980]', 'Vancomycin resistance [bvu01502]']
2025-03-06 14:37:23,473 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Folate transport and metabolism [bvu04981]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,473 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Folate transport and metabolism [bvu04981]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:23,476 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 296884
}
],
 "errors":[]
}
2025-03-06 14:37:23,477 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 296884}]
2025-03-06 14:37:23,477 [DEBUG] py4...: Returning 'get_network_suid': 296884
2025-03-06 14:37:23,477 [DEBUG] py4...: --------------------
2025-03-06 14:37:23,477 [DEBUG] py4...: Calling get_network_suid('beta-Lactam resistance [bvu01501]')
2025-03-06 14:37:23,477 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,477 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,477 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:23,480 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Flagellar assembly [bvu02040]","SUID":296708},{"name":"Folate transport and metabolism [bvu04981]","SUID":296884},{"name":"beta-Lactam resistance [bvu01501]","SUID":296454},{"name":"Cobalamin transport and metabolism [bvu04980]","SUID":297160},{"name":"Vancomycin resistance [bvu01502]","SUID":296186}]
2025-03-06 14:37:23,480 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Flagellar assembly [bvu02040]', 'SUID': 296708}, {'name': 'Folate transport and metabolism [bvu04981]', 'SUID': 296884}, {'name': 'beta-Lactam resistance [bvu01501]', 'SUID': 296454}, {'name': 'Cobalamin transport and metabolism [bvu04980]', 'SUID': 297160}, {'name': 'Vancomycin resistance [bvu01502]', 'SUID': 296186}]
2025-03-06 14:37:23,480 [DEBUG] py4...: ǀReturning 'get_network_list': ['Flagellar assembly [bvu02040]', 'Folate transport and metabolism [bvu04981]', 'beta-Lactam resistance [bvu01501]', 'Cobalamin transport and metabolism [bvu04980]', 'Vancomycin resistance [bvu01502]']
2025-03-06 14:37:23,480 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="beta-Lactam resistance [bvu01501]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,480 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'beta-Lactam resistance [bvu01501]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:23,484 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 296454
}
],
 "errors":[]
}
2025-03-06 14:37:23,484 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 296454}]
2025-03-06 14:37:23,484 [DEBUG] py4...: Returning 'get_network_suid': 296454
2025-03-06 14:37:23,484 [DEBUG] py4...: --------------------
2025-03-06 14:37:23,484 [DEBUG] py4...: Calling get_network_suid('Cobalamin transport and metabolism [bvu04980]')
2025-03-06 14:37:23,484 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,484 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,484 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:23,487 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Flagellar assembly [bvu02040]","SUID":296708},{"name":"Folate transport and metabolism [bvu04981]","SUID":296884},{"name":"beta-Lactam resistance [bvu01501]","SUID":296454},{"name":"Cobalamin transport and metabolism [bvu04980]","SUID":297160},{"name":"Vancomycin resistance [bvu01502]","SUID":296186}]
2025-03-06 14:37:23,487 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Flagellar assembly [bvu02040]', 'SUID': 296708}, {'name': 'Folate transport and metabolism [bvu04981]', 'SUID': 296884}, {'name': 'beta-Lactam resistance [bvu01501]', 'SUID': 296454}, {'name': 'Cobalamin transport and metabolism [bvu04980]', 'SUID': 297160}, {'name': 'Vancomycin resistance [bvu01502]', 'SUID': 296186}]
2025-03-06 14:37:23,487 [DEBUG] py4...: ǀReturning 'get_network_list': ['Flagellar assembly [bvu02040]', 'Folate transport and metabolism [bvu04981]', 'beta-Lactam resistance [bvu01501]', 'Cobalamin transport and metabolism [bvu04980]', 'Vancomycin resistance [bvu01502]']
2025-03-06 14:37:23,487 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Cobalamin transport and metabolism [bvu04980]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,487 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Cobalamin transport and metabolism [bvu04980]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:23,491 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 297160
}
],
 "errors":[]
}
2025-03-06 14:37:23,492 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 297160}]
2025-03-06 14:37:23,492 [DEBUG] py4...: Returning 'get_network_suid': 297160
2025-03-06 14:37:23,492 [DEBUG] py4...: --------------------
2025-03-06 14:37:23,492 [DEBUG] py4...: Calling get_network_suid('Vancomycin resistance [bvu01502]')
2025-03-06 14:37:23,492 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,492 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,492 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:23,495 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Flagellar assembly [bvu02040]","SUID":296708},{"name":"Folate transport and metabolism [bvu04981]","SUID":296884},{"name":"beta-Lactam resistance [bvu01501]","SUID":296454},{"name":"Cobalamin transport and metabolism [bvu04980]","SUID":297160},{"name":"Vancomycin resistance [bvu01502]","SUID":296186}]
2025-03-06 14:37:23,495 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Flagellar assembly [bvu02040]', 'SUID': 296708}, {'name': 'Folate transport and metabolism [bvu04981]', 'SUID': 296884}, {'name': 'beta-Lactam resistance [bvu01501]', 'SUID': 296454}, {'name': 'Cobalamin transport and metabolism [bvu04980]', 'SUID': 297160}, {'name': 'Vancomycin resistance [bvu01502]', 'SUID': 296186}]
2025-03-06 14:37:23,495 [DEBUG] py4...: ǀReturning 'get_network_list': ['Flagellar assembly [bvu02040]', 'Folate transport and metabolism [bvu04981]', 'beta-Lactam resistance [bvu01501]', 'Cobalamin transport and metabolism [bvu04980]', 'Vancomycin resistance [bvu01502]']
2025-03-06 14:37:23,495 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Vancomycin resistance [bvu01502]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,495 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Vancomycin resistance [bvu01502]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:23,499 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 296186
}
],
 "errors":[]
}
2025-03-06 14:37:23,499 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 296186}]
2025-03-06 14:37:23,499 [DEBUG] py4...: Returning 'get_network_suid': 296186
2025-03-06 14:37:23,499 [DEBUG] py4...: --------------------
2025-03-06 14:37:23,499 [DEBUG] py4...: Calling export_network('networks_graphml/Flagellar assembly [bvu02040].graphml', 'graphml', network=296708, overwrite_file=True)
2025-03-06 14:37:23,499 [DEBUG] py4...: ǀCalling get_network_suid(296708, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,499 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,499 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:23,502 [DEBUG] py4...: ǀǀOK[200], content: [296708,296884,296454,297160,296186]
2025-03-06 14:37:23,502 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [296708, 296884, 296454, 297160, 296186]
2025-03-06 14:37:23,502 [DEBUG] py4...: ǀReturning 'get_network_suid': 296708
2025-03-06 14:37:23,502 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Flagellar assembly [bvu02040].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,502 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,502 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml'}
2025-03-06 14:37:23,505 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml","modifiedTime":"2025-03-06 14:00:01.0508","isFile":true},
 "errors":[]
}
2025-03-06 14:37:23,505 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml', 'modifiedTime': '2025-03-06 14:00:01.0508', 'isFile': True}
2025-03-06 14:37:23,505 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml', 'modifiedTime': '2025-03-06 14:00:01.0508', 'isFile': True}
2025-03-06 14:37:23,505 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Flagellar assembly [bvu02040].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,506 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,506 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml'}
2025-03-06 14:37:23,510 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:23,510 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml', 'existed': True}
2025-03-06 14:37:23,510 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml', 'existed': True}
2025-03-06 14:37:23,510 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:296708" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,510 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:296708', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml'}
2025-03-06 14:37:23,517 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml"},
 "errors":[]
}
2025-03-06 14:37:23,517 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml'}
2025-03-06 14:37:23,517 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Flagellar assembly [bvu02040].graphml'}
2025-03-06 14:37:23,517 [DEBUG] py4...: --------------------
2025-03-06 14:37:23,517 [DEBUG] py4...: Calling export_network('networks_graphml/Folate transport and metabolism [bvu04981].graphml', 'graphml', network=296884, overwrite_file=True)
2025-03-06 14:37:23,517 [DEBUG] py4...: ǀCalling get_network_suid(296884, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,517 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,517 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:23,520 [DEBUG] py4...: ǀǀOK[200], content: [296708,296884,296454,297160,296186]
2025-03-06 14:37:23,520 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [296708, 296884, 296454, 297160, 296186]
2025-03-06 14:37:23,520 [DEBUG] py4...: ǀReturning 'get_network_suid': 296884
2025-03-06 14:37:23,520 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Folate transport and metabolism [bvu04981].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,520 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,520 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml'}
2025-03-06 14:37:23,523 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml","modifiedTime":"2025-03-06 14:00:01.0521","isFile":true},
 "errors":[]
}
2025-03-06 14:37:23,523 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml', 'modifiedTime': '2025-03-06 14:00:01.0521', 'isFile': True}
2025-03-06 14:37:23,523 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml', 'modifiedTime': '2025-03-06 14:00:01.0521', 'isFile': True}
2025-03-06 14:37:23,523 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Folate transport and metabolism [bvu04981].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,523 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,523 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml'}
2025-03-06 14:37:23,526 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:23,527 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml', 'existed': True}
2025-03-06 14:37:23,527 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml', 'existed': True}
2025-03-06 14:37:23,527 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:296884" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,527 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:296884', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml'}
2025-03-06 14:37:23,533 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml"},
 "errors":[]
}
2025-03-06 14:37:23,533 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml'}
2025-03-06 14:37:23,533 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Folate transport and metabolism [bvu04981].graphml'}
2025-03-06 14:37:23,533 [DEBUG] py4...: --------------------
2025-03-06 14:37:23,533 [DEBUG] py4...: Calling export_network('networks_graphml/beta-Lactam resistance [bvu01501].graphml', 'graphml', network=296454, overwrite_file=True)
2025-03-06 14:37:23,533 [DEBUG] py4...: ǀCalling get_network_suid(296454, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,533 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,533 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:23,536 [DEBUG] py4...: ǀǀOK[200], content: [296708,296884,296454,297160,296186]
2025-03-06 14:37:23,536 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [296708, 296884, 296454, 297160, 296186]
2025-03-06 14:37:23,536 [DEBUG] py4...: ǀReturning 'get_network_suid': 296454
2025-03-06 14:37:23,536 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/beta-Lactam resistance [bvu01501].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,536 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,536 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml'}
2025-03-06 14:37:23,539 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml","modifiedTime":"2025-03-06 14:00:01.0546","isFile":true},
 "errors":[]
}
2025-03-06 14:37:23,540 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml', 'modifiedTime': '2025-03-06 14:00:01.0546', 'isFile': True}
2025-03-06 14:37:23,540 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml', 'modifiedTime': '2025-03-06 14:00:01.0546', 'isFile': True}
2025-03-06 14:37:23,540 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/beta-Lactam resistance [bvu01501].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,540 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,540 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml'}
2025-03-06 14:37:23,543 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:23,543 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml', 'existed': True}
2025-03-06 14:37:23,543 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml', 'existed': True}
2025-03-06 14:37:23,543 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:296454" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,543 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:296454', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml'}
2025-03-06 14:37:23,549 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml"},
 "errors":[]
}
2025-03-06 14:37:23,549 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml'}
2025-03-06 14:37:23,549 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/beta-Lactam resistance [bvu01501].graphml'}
2025-03-06 14:37:23,549 [DEBUG] py4...: --------------------
2025-03-06 14:37:23,549 [DEBUG] py4...: Calling export_network('networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml', 'graphml', network=297160, overwrite_file=True)
2025-03-06 14:37:23,549 [DEBUG] py4...: ǀCalling get_network_suid(297160, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,549 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,549 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:23,552 [DEBUG] py4...: ǀǀOK[200], content: [296708,296884,296454,297160,296186]
2025-03-06 14:37:23,552 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [296708, 296884, 296454, 297160, 296186]
2025-03-06 14:37:23,552 [DEBUG] py4...: ǀReturning 'get_network_suid': 297160
2025-03-06 14:37:23,552 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,552 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,552 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml'}
2025-03-06 14:37:23,556 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml","modifiedTime":"2025-03-06 14:00:01.0482","isFile":true},
 "errors":[]
}
2025-03-06 14:37:23,556 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml', 'modifiedTime': '2025-03-06 14:00:01.0482', 'isFile': True}
2025-03-06 14:37:23,556 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml', 'modifiedTime': '2025-03-06 14:00:01.0482', 'isFile': True}
2025-03-06 14:37:23,556 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,556 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,556 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml'}
2025-03-06 14:37:23,559 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:23,559 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml', 'existed': True}
2025-03-06 14:37:23,559 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml', 'existed': True}
2025-03-06 14:37:23,559 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:297160" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,559 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:297160', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml'}
2025-03-06 14:37:23,565 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml"},
 "errors":[]
}
2025-03-06 14:37:23,565 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml'}
2025-03-06 14:37:23,565 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Cobalamin transport and metabolism [bvu04980].graphml'}
2025-03-06 14:37:23,565 [DEBUG] py4...: --------------------
2025-03-06 14:37:23,565 [DEBUG] py4...: Calling export_network('networks_graphml/Vancomycin resistance [bvu01502].graphml', 'graphml', network=296186, overwrite_file=True)
2025-03-06 14:37:23,565 [DEBUG] py4...: ǀCalling get_network_suid(296186, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,565 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,565 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:23,568 [DEBUG] py4...: ǀǀOK[200], content: [296708,296884,296454,297160,296186]
2025-03-06 14:37:23,568 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [296708, 296884, 296454, 297160, 296186]
2025-03-06 14:37:23,568 [DEBUG] py4...: ǀReturning 'get_network_suid': 296186
2025-03-06 14:37:23,569 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Vancomycin resistance [bvu01502].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,569 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,569 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml'}
2025-03-06 14:37:23,572 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml","modifiedTime":"2025-03-06 14:00:01.0495","isFile":true},
 "errors":[]
}
2025-03-06 14:37:23,572 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml', 'modifiedTime': '2025-03-06 14:00:01.0495', 'isFile': True}
2025-03-06 14:37:23,572 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml', 'modifiedTime': '2025-03-06 14:00:01.0495', 'isFile': True}
2025-03-06 14:37:23,572 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Vancomycin resistance [bvu01502].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,572 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,572 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml'}
2025-03-06 14:37:23,575 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:23,575 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml', 'existed': True}
2025-03-06 14:37:23,576 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml', 'existed': True}
2025-03-06 14:37:23,576 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:296186" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,576 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:296186', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml'}
2025-03-06 14:37:23,581 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml"},
 "errors":[]
}
2025-03-06 14:37:23,581 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml'}
2025-03-06 14:37:23,581 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Vancomycin resistance [bvu01502].graphml'}
2025-03-06 14:37:23,581 [DEBUG] py4...: --------------------
2025-03-06 14:37:23,581 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_3.cys')
2025-03-06 14:37:23,581 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_3.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:23,581 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_3.cys'}
2025-03-06 14:37:24,864 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:24,865 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:24,865 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:24,865 [DEBUG] py4...: --------------------
2025-03-06 14:37:24,866 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:24,866 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,866 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:24,875 [DEBUG] py4...: ǀOK[200], content: [{"name":"Butanoate metabolism [bvu00650]","SUID":302901},{"name":"Oxidative phosphorylation [bvu00190]","SUID":302055},{"name":"Propanoate metabolism [bvu00640]","SUID":302561},{"name":"Inositol phosphate metabolism [bvu00562]","SUID":301683},{"name":"C5-Branched dibasic acid metabolism [bvu00660]","SUID":303229}]
2025-03-06 14:37:24,876 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Butanoate metabolism [bvu00650]', 'SUID': 302901}, {'name': 'Oxidative phosphorylation [bvu00190]', 'SUID': 302055}, {'name': 'Propanoate metabolism [bvu00640]', 'SUID': 302561}, {'name': 'Inositol phosphate metabolism [bvu00562]', 'SUID': 301683}, {'name': 'C5-Branched dibasic acid metabolism [bvu00660]', 'SUID': 303229}]
2025-03-06 14:37:24,876 [DEBUG] py4...: Returning 'get_network_list': ['Butanoate metabolism [bvu00650]', 'Oxidative phosphorylation [bvu00190]', 'Propanoate metabolism [bvu00640]', 'Inositol phosphate metabolism [bvu00562]', 'C5-Branched dibasic acid metabolism [bvu00660]']
2025-03-06 14:37:24,876 [DEBUG] py4...: --------------------
2025-03-06 14:37:24,876 [DEBUG] py4...: Calling get_network_suid('Butanoate metabolism [bvu00650]')
2025-03-06 14:37:24,876 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,876 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,876 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:24,881 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Butanoate metabolism [bvu00650]","SUID":302901},{"name":"Oxidative phosphorylation [bvu00190]","SUID":302055},{"name":"Propanoate metabolism [bvu00640]","SUID":302561},{"name":"Inositol phosphate metabolism [bvu00562]","SUID":301683},{"name":"C5-Branched dibasic acid metabolism [bvu00660]","SUID":303229}]
2025-03-06 14:37:24,881 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Butanoate metabolism [bvu00650]', 'SUID': 302901}, {'name': 'Oxidative phosphorylation [bvu00190]', 'SUID': 302055}, {'name': 'Propanoate metabolism [bvu00640]', 'SUID': 302561}, {'name': 'Inositol phosphate metabolism [bvu00562]', 'SUID': 301683}, {'name': 'C5-Branched dibasic acid metabolism [bvu00660]', 'SUID': 303229}]
2025-03-06 14:37:24,881 [DEBUG] py4...: ǀReturning 'get_network_list': ['Butanoate metabolism [bvu00650]', 'Oxidative phosphorylation [bvu00190]', 'Propanoate metabolism [bvu00640]', 'Inositol phosphate metabolism [bvu00562]', 'C5-Branched dibasic acid metabolism [bvu00660]']
2025-03-06 14:37:24,881 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Butanoate metabolism [bvu00650]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,882 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Butanoate metabolism [bvu00650]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:24,888 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 302901
}
],
 "errors":[]
}
2025-03-06 14:37:24,888 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 302901}]
2025-03-06 14:37:24,888 [DEBUG] py4...: Returning 'get_network_suid': 302901
2025-03-06 14:37:24,888 [DEBUG] py4...: --------------------
2025-03-06 14:37:24,888 [DEBUG] py4...: Calling get_network_suid('Oxidative phosphorylation [bvu00190]')
2025-03-06 14:37:24,888 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,888 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,888 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:24,892 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Butanoate metabolism [bvu00650]","SUID":302901},{"name":"Oxidative phosphorylation [bvu00190]","SUID":302055},{"name":"Propanoate metabolism [bvu00640]","SUID":302561},{"name":"Inositol phosphate metabolism [bvu00562]","SUID":301683},{"name":"C5-Branched dibasic acid metabolism [bvu00660]","SUID":303229}]
2025-03-06 14:37:24,893 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Butanoate metabolism [bvu00650]', 'SUID': 302901}, {'name': 'Oxidative phosphorylation [bvu00190]', 'SUID': 302055}, {'name': 'Propanoate metabolism [bvu00640]', 'SUID': 302561}, {'name': 'Inositol phosphate metabolism [bvu00562]', 'SUID': 301683}, {'name': 'C5-Branched dibasic acid metabolism [bvu00660]', 'SUID': 303229}]
2025-03-06 14:37:24,893 [DEBUG] py4...: ǀReturning 'get_network_list': ['Butanoate metabolism [bvu00650]', 'Oxidative phosphorylation [bvu00190]', 'Propanoate metabolism [bvu00640]', 'Inositol phosphate metabolism [bvu00562]', 'C5-Branched dibasic acid metabolism [bvu00660]']
2025-03-06 14:37:24,893 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Oxidative phosphorylation [bvu00190]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,893 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Oxidative phosphorylation [bvu00190]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:24,898 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 302055
}
],
 "errors":[]
}
2025-03-06 14:37:24,899 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 302055}]
2025-03-06 14:37:24,899 [DEBUG] py4...: Returning 'get_network_suid': 302055
2025-03-06 14:37:24,899 [DEBUG] py4...: --------------------
2025-03-06 14:37:24,899 [DEBUG] py4...: Calling get_network_suid('Propanoate metabolism [bvu00640]')
2025-03-06 14:37:24,899 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,899 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,899 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:24,902 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Butanoate metabolism [bvu00650]","SUID":302901},{"name":"Oxidative phosphorylation [bvu00190]","SUID":302055},{"name":"Propanoate metabolism [bvu00640]","SUID":302561},{"name":"Inositol phosphate metabolism [bvu00562]","SUID":301683},{"name":"C5-Branched dibasic acid metabolism [bvu00660]","SUID":303229}]
2025-03-06 14:37:24,903 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Butanoate metabolism [bvu00650]', 'SUID': 302901}, {'name': 'Oxidative phosphorylation [bvu00190]', 'SUID': 302055}, {'name': 'Propanoate metabolism [bvu00640]', 'SUID': 302561}, {'name': 'Inositol phosphate metabolism [bvu00562]', 'SUID': 301683}, {'name': 'C5-Branched dibasic acid metabolism [bvu00660]', 'SUID': 303229}]
2025-03-06 14:37:24,903 [DEBUG] py4...: ǀReturning 'get_network_list': ['Butanoate metabolism [bvu00650]', 'Oxidative phosphorylation [bvu00190]', 'Propanoate metabolism [bvu00640]', 'Inositol phosphate metabolism [bvu00562]', 'C5-Branched dibasic acid metabolism [bvu00660]']
2025-03-06 14:37:24,903 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Propanoate metabolism [bvu00640]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,903 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Propanoate metabolism [bvu00640]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:24,907 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 302561
}
],
 "errors":[]
}
2025-03-06 14:37:24,907 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 302561}]
2025-03-06 14:37:24,907 [DEBUG] py4...: Returning 'get_network_suid': 302561
2025-03-06 14:37:24,907 [DEBUG] py4...: --------------------
2025-03-06 14:37:24,907 [DEBUG] py4...: Calling get_network_suid('Inositol phosphate metabolism [bvu00562]')
2025-03-06 14:37:24,907 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,907 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,908 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:24,910 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Butanoate metabolism [bvu00650]","SUID":302901},{"name":"Oxidative phosphorylation [bvu00190]","SUID":302055},{"name":"Propanoate metabolism [bvu00640]","SUID":302561},{"name":"Inositol phosphate metabolism [bvu00562]","SUID":301683},{"name":"C5-Branched dibasic acid metabolism [bvu00660]","SUID":303229}]
2025-03-06 14:37:24,911 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Butanoate metabolism [bvu00650]', 'SUID': 302901}, {'name': 'Oxidative phosphorylation [bvu00190]', 'SUID': 302055}, {'name': 'Propanoate metabolism [bvu00640]', 'SUID': 302561}, {'name': 'Inositol phosphate metabolism [bvu00562]', 'SUID': 301683}, {'name': 'C5-Branched dibasic acid metabolism [bvu00660]', 'SUID': 303229}]
2025-03-06 14:37:24,911 [DEBUG] py4...: ǀReturning 'get_network_list': ['Butanoate metabolism [bvu00650]', 'Oxidative phosphorylation [bvu00190]', 'Propanoate metabolism [bvu00640]', 'Inositol phosphate metabolism [bvu00562]', 'C5-Branched dibasic acid metabolism [bvu00660]']
2025-03-06 14:37:24,911 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Inositol phosphate metabolism [bvu00562]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,911 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Inositol phosphate metabolism [bvu00562]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:24,915 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 301683
}
],
 "errors":[]
}
2025-03-06 14:37:24,915 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 301683}]
2025-03-06 14:37:24,915 [DEBUG] py4...: Returning 'get_network_suid': 301683
2025-03-06 14:37:24,915 [DEBUG] py4...: --------------------
2025-03-06 14:37:24,915 [DEBUG] py4...: Calling get_network_suid('C5-Branched dibasic acid metabolism [bvu00660]')
2025-03-06 14:37:24,915 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,915 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,915 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:24,918 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Butanoate metabolism [bvu00650]","SUID":302901},{"name":"Oxidative phosphorylation [bvu00190]","SUID":302055},{"name":"Propanoate metabolism [bvu00640]","SUID":302561},{"name":"Inositol phosphate metabolism [bvu00562]","SUID":301683},{"name":"C5-Branched dibasic acid metabolism [bvu00660]","SUID":303229}]
2025-03-06 14:37:24,918 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Butanoate metabolism [bvu00650]', 'SUID': 302901}, {'name': 'Oxidative phosphorylation [bvu00190]', 'SUID': 302055}, {'name': 'Propanoate metabolism [bvu00640]', 'SUID': 302561}, {'name': 'Inositol phosphate metabolism [bvu00562]', 'SUID': 301683}, {'name': 'C5-Branched dibasic acid metabolism [bvu00660]', 'SUID': 303229}]
2025-03-06 14:37:24,918 [DEBUG] py4...: ǀReturning 'get_network_list': ['Butanoate metabolism [bvu00650]', 'Oxidative phosphorylation [bvu00190]', 'Propanoate metabolism [bvu00640]', 'Inositol phosphate metabolism [bvu00562]', 'C5-Branched dibasic acid metabolism [bvu00660]']
2025-03-06 14:37:24,918 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="C5-Branched dibasic acid metabolism [bvu00660]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,918 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'C5-Branched dibasic acid metabolism [bvu00660]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:24,921 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 303229
}
],
 "errors":[]
}
2025-03-06 14:37:24,922 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 303229}]
2025-03-06 14:37:24,922 [DEBUG] py4...: Returning 'get_network_suid': 303229
2025-03-06 14:37:24,922 [DEBUG] py4...: --------------------
2025-03-06 14:37:24,922 [DEBUG] py4...: Calling export_network('networks_graphml/Butanoate metabolism [bvu00650].graphml', 'graphml', network=302901, overwrite_file=True)
2025-03-06 14:37:24,922 [DEBUG] py4...: ǀCalling get_network_suid(302901, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,922 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,922 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:24,925 [DEBUG] py4...: ǀǀOK[200], content: [302901,302055,302561,301683,303229]
2025-03-06 14:37:24,925 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [302901, 302055, 302561, 301683, 303229]
2025-03-06 14:37:24,925 [DEBUG] py4...: ǀReturning 'get_network_suid': 302901
2025-03-06 14:37:24,925 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Butanoate metabolism [bvu00650].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,925 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,925 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml'}
2025-03-06 14:37:24,932 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml","modifiedTime":"2025-03-06 14:00:02.0653","isFile":true},
 "errors":[]
}
2025-03-06 14:37:24,932 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml', 'modifiedTime': '2025-03-06 14:00:02.0653', 'isFile': True}
2025-03-06 14:37:24,932 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml', 'modifiedTime': '2025-03-06 14:00:02.0653', 'isFile': True}
2025-03-06 14:37:24,932 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Butanoate metabolism [bvu00650].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,932 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,932 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml'}
2025-03-06 14:37:24,937 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:24,938 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml', 'existed': True}
2025-03-06 14:37:24,938 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml', 'existed': True}
2025-03-06 14:37:24,938 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:302901" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,938 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:302901', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml'}
2025-03-06 14:37:24,947 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml"},
 "errors":[]
}
2025-03-06 14:37:24,947 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml'}
2025-03-06 14:37:24,947 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Butanoate metabolism [bvu00650].graphml'}
2025-03-06 14:37:24,947 [DEBUG] py4...: --------------------
2025-03-06 14:37:24,947 [DEBUG] py4...: Calling export_network('networks_graphml/Oxidative phosphorylation [bvu00190].graphml', 'graphml', network=302055, overwrite_file=True)
2025-03-06 14:37:24,947 [DEBUG] py4...: ǀCalling get_network_suid(302055, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,947 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,947 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:24,950 [DEBUG] py4...: ǀǀOK[200], content: [302901,302055,302561,301683,303229]
2025-03-06 14:37:24,950 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [302901, 302055, 302561, 301683, 303229]
2025-03-06 14:37:24,951 [DEBUG] py4...: ǀReturning 'get_network_suid': 302055
2025-03-06 14:37:24,951 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Oxidative phosphorylation [bvu00190].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,951 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,951 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml'}
2025-03-06 14:37:24,955 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml","modifiedTime":"2025-03-06 14:00:02.0621","isFile":true},
 "errors":[]
}
2025-03-06 14:37:24,956 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml', 'modifiedTime': '2025-03-06 14:00:02.0621', 'isFile': True}
2025-03-06 14:37:24,956 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml', 'modifiedTime': '2025-03-06 14:00:02.0621', 'isFile': True}
2025-03-06 14:37:24,957 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Oxidative phosphorylation [bvu00190].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,957 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,957 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml'}
2025-03-06 14:37:24,964 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:24,964 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml', 'existed': True}
2025-03-06 14:37:24,964 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml', 'existed': True}
2025-03-06 14:37:24,964 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:302055" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,964 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:302055', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml'}
2025-03-06 14:37:24,972 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml"},
 "errors":[]
}
2025-03-06 14:37:24,973 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml'}
2025-03-06 14:37:24,973 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Oxidative phosphorylation [bvu00190].graphml'}
2025-03-06 14:37:24,973 [DEBUG] py4...: --------------------
2025-03-06 14:37:24,973 [DEBUG] py4...: Calling export_network('networks_graphml/Propanoate metabolism [bvu00640].graphml', 'graphml', network=302561, overwrite_file=True)
2025-03-06 14:37:24,973 [DEBUG] py4...: ǀCalling get_network_suid(302561, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,973 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,973 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:24,980 [DEBUG] py4...: ǀǀOK[200], content: [302901,302055,302561,301683,303229]
2025-03-06 14:37:24,980 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [302901, 302055, 302561, 301683, 303229]
2025-03-06 14:37:24,980 [DEBUG] py4...: ǀReturning 'get_network_suid': 302561
2025-03-06 14:37:24,980 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Propanoate metabolism [bvu00640].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,980 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,980 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml'}
2025-03-06 14:37:24,984 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml","modifiedTime":"2025-03-06 14:00:02.0593","isFile":true},
 "errors":[]
}
2025-03-06 14:37:24,984 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml', 'modifiedTime': '2025-03-06 14:00:02.0593', 'isFile': True}
2025-03-06 14:37:24,984 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml', 'modifiedTime': '2025-03-06 14:00:02.0593', 'isFile': True}
2025-03-06 14:37:24,984 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Propanoate metabolism [bvu00640].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,984 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,984 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml'}
2025-03-06 14:37:24,987 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:24,988 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml', 'existed': True}
2025-03-06 14:37:24,988 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml', 'existed': True}
2025-03-06 14:37:24,988 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:302561" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:24,988 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:302561', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml'}
2025-03-06 14:37:25,001 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml"},
 "errors":[]
}
2025-03-06 14:37:25,001 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml'}
2025-03-06 14:37:25,001 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Propanoate metabolism [bvu00640].graphml'}
2025-03-06 14:37:25,001 [DEBUG] py4...: --------------------
2025-03-06 14:37:25,001 [DEBUG] py4...: Calling export_network('networks_graphml/Inositol phosphate metabolism [bvu00562].graphml', 'graphml', network=301683, overwrite_file=True)
2025-03-06 14:37:25,001 [DEBUG] py4...: ǀCalling get_network_suid(301683, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:25,001 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:25,001 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:25,004 [DEBUG] py4...: ǀǀOK[200], content: [302901,302055,302561,301683,303229]
2025-03-06 14:37:25,005 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [302901, 302055, 302561, 301683, 303229]
2025-03-06 14:37:25,005 [DEBUG] py4...: ǀReturning 'get_network_suid': 301683
2025-03-06 14:37:25,005 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Inositol phosphate metabolism [bvu00562].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:25,005 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:25,005 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml'}
2025-03-06 14:37:25,009 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml","modifiedTime":"2025-03-06 14:00:02.0637","isFile":true},
 "errors":[]
}
2025-03-06 14:37:25,009 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml', 'modifiedTime': '2025-03-06 14:00:02.0637', 'isFile': True}
2025-03-06 14:37:25,009 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml', 'modifiedTime': '2025-03-06 14:00:02.0637', 'isFile': True}
2025-03-06 14:37:25,010 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Inositol phosphate metabolism [bvu00562].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:25,010 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:25,010 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml'}
2025-03-06 14:37:25,020 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:25,020 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml', 'existed': True}
2025-03-06 14:37:25,022 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml', 'existed': True}
2025-03-06 14:37:25,022 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:301683" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:25,022 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:301683', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml'}
2025-03-06 14:37:25,033 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml"},
 "errors":[]
}
2025-03-06 14:37:25,033 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml'}
2025-03-06 14:37:25,033 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Inositol phosphate metabolism [bvu00562].graphml'}
2025-03-06 14:37:25,033 [DEBUG] py4...: --------------------
2025-03-06 14:37:25,033 [DEBUG] py4...: Calling export_network('networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml', 'graphml', network=303229, overwrite_file=True)
2025-03-06 14:37:25,033 [DEBUG] py4...: ǀCalling get_network_suid(303229, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:25,033 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:25,034 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:25,036 [DEBUG] py4...: ǀǀOK[200], content: [302901,302055,302561,301683,303229]
2025-03-06 14:37:25,037 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [302901, 302055, 302561, 301683, 303229]
2025-03-06 14:37:25,037 [DEBUG] py4...: ǀReturning 'get_network_suid': 303229
2025-03-06 14:37:25,037 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:25,037 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:25,037 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml'}
2025-03-06 14:37:25,041 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml","modifiedTime":"2025-03-06 14:00:02.0607","isFile":true},
 "errors":[]
}
2025-03-06 14:37:25,041 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml', 'modifiedTime': '2025-03-06 14:00:02.0607', 'isFile': True}
2025-03-06 14:37:25,041 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml', 'modifiedTime': '2025-03-06 14:00:02.0607', 'isFile': True}
2025-03-06 14:37:25,041 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:25,041 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:25,041 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml'}
2025-03-06 14:37:25,045 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:25,045 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml', 'existed': True}
2025-03-06 14:37:25,045 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml', 'existed': True}
2025-03-06 14:37:25,045 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:303229" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:25,046 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:303229', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml'}
2025-03-06 14:37:25,054 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml"},
 "errors":[]
}
2025-03-06 14:37:25,054 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml'}
2025-03-06 14:37:25,054 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/C5-Branched dibasic acid metabolism [bvu00660].graphml'}
2025-03-06 14:37:25,054 [DEBUG] py4...: --------------------
2025-03-06 14:37:25,054 [DEBUG] py4...: Calling open_session('aux_scripts/cytoscape_session_files/split_1.cys')
2025-03-06 14:37:25,054 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:25,054 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys'}
2025-03-06 14:37:26,163 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:37:26,163 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:37:26,163 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:37:26,164 [DEBUG] py4...: --------------------
2025-03-06 14:37:26,164 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:37:26,164 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,164 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:26,169 [DEBUG] py4...: ǀOK[200], content: [{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":310613},{"name":"Pentose phosphate pathway [bvu00030]","SUID":309927},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":311401},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":310299},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":310971}]
2025-03-06 14:37:26,169 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 310613}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 309927}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 311401}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 310299}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 310971}]
2025-03-06 14:37:26,170 [DEBUG] py4...: Returning 'get_network_list': ['Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]']
2025-03-06 14:37:26,170 [DEBUG] py4...: --------------------
2025-03-06 14:37:26,170 [DEBUG] py4...: Calling get_network_suid('Glycolysis / Gluconeogenesis [bvu00010]')
2025-03-06 14:37:26,170 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,170 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,170 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:26,176 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":310613},{"name":"Pentose phosphate pathway [bvu00030]","SUID":309927},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":311401},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":310299},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":310971}]
2025-03-06 14:37:26,176 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 310613}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 309927}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 311401}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 310299}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 310971}]
2025-03-06 14:37:26,177 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]']
2025-03-06 14:37:26,177 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glycolysis / Gluconeogenesis [bvu00010]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,177 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glycolysis / Gluconeogenesis [bvu00010]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:26,180 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 310613
}
],
 "errors":[]
}
2025-03-06 14:37:26,180 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 310613}]
2025-03-06 14:37:26,180 [DEBUG] py4...: Returning 'get_network_suid': 310613
2025-03-06 14:37:26,181 [DEBUG] py4...: --------------------
2025-03-06 14:37:26,181 [DEBUG] py4...: Calling get_network_suid('Pentose phosphate pathway [bvu00030]')
2025-03-06 14:37:26,181 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,181 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,181 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:26,186 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":310613},{"name":"Pentose phosphate pathway [bvu00030]","SUID":309927},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":311401},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":310299},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":310971}]
2025-03-06 14:37:26,186 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 310613}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 309927}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 311401}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 310299}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 310971}]
2025-03-06 14:37:26,186 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]']
2025-03-06 14:37:26,186 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pentose phosphate pathway [bvu00030]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,186 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pentose phosphate pathway [bvu00030]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:26,191 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 309927
}
],
 "errors":[]
}
2025-03-06 14:37:26,191 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 309927}]
2025-03-06 14:37:26,192 [DEBUG] py4...: Returning 'get_network_suid': 309927
2025-03-06 14:37:26,192 [DEBUG] py4...: --------------------
2025-03-06 14:37:26,192 [DEBUG] py4...: Calling get_network_suid('Fructose and mannose metabolism [bvu00051]')
2025-03-06 14:37:26,192 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,192 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,193 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:26,199 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":310613},{"name":"Pentose phosphate pathway [bvu00030]","SUID":309927},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":311401},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":310299},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":310971}]
2025-03-06 14:37:26,199 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 310613}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 309927}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 311401}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 310299}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 310971}]
2025-03-06 14:37:26,199 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]']
2025-03-06 14:37:26,199 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Fructose and mannose metabolism [bvu00051]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,199 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Fructose and mannose metabolism [bvu00051]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:26,203 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 311401
}
],
 "errors":[]
}
2025-03-06 14:37:26,203 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 311401}]
2025-03-06 14:37:26,203 [DEBUG] py4...: Returning 'get_network_suid': 311401
2025-03-06 14:37:26,203 [DEBUG] py4...: --------------------
2025-03-06 14:37:26,203 [DEBUG] py4...: Calling get_network_suid('Citrate cycle (TCA cycle) [bvu00020]')
2025-03-06 14:37:26,203 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,203 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,203 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:26,206 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":310613},{"name":"Pentose phosphate pathway [bvu00030]","SUID":309927},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":311401},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":310299},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":310971}]
2025-03-06 14:37:26,206 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 310613}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 309927}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 311401}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 310299}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 310971}]
2025-03-06 14:37:26,206 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]']
2025-03-06 14:37:26,206 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Citrate cycle (TCA cycle) [bvu00020]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,206 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Citrate cycle (TCA cycle) [bvu00020]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:26,213 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 310299
}
],
 "errors":[]
}
2025-03-06 14:37:26,213 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 310299}]
2025-03-06 14:37:26,213 [DEBUG] py4...: Returning 'get_network_suid': 310299
2025-03-06 14:37:26,213 [DEBUG] py4...: --------------------
2025-03-06 14:37:26,213 [DEBUG] py4...: Calling get_network_suid('Pentose and glucuronate interconversions [bvu00040]')
2025-03-06 14:37:26,213 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,213 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,213 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:37:26,218 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":310613},{"name":"Pentose phosphate pathway [bvu00030]","SUID":309927},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":311401},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":310299},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":310971}]
2025-03-06 14:37:26,218 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 310613}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 309927}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 311401}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 310299}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 310971}]
2025-03-06 14:37:26,218 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]']
2025-03-06 14:37:26,218 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pentose and glucuronate interconversions [bvu00040]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,218 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pentose and glucuronate interconversions [bvu00040]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:37:26,222 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 310971
}
],
 "errors":[]
}
2025-03-06 14:37:26,222 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 310971}]
2025-03-06 14:37:26,222 [DEBUG] py4...: Returning 'get_network_suid': 310971
2025-03-06 14:37:26,222 [DEBUG] py4...: --------------------
2025-03-06 14:37:26,222 [DEBUG] py4...: Calling export_network('networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'graphml', network=310613, overwrite_file=True)
2025-03-06 14:37:26,222 [DEBUG] py4...: ǀCalling get_network_suid(310613, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,222 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,222 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:26,225 [DEBUG] py4...: ǀǀOK[200], content: [310613,309927,311401,310299,310971]
2025-03-06 14:37:26,225 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [310613, 309927, 311401, 310299, 310971]
2025-03-06 14:37:26,225 [DEBUG] py4...: ǀReturning 'get_network_suid': 310613
2025-03-06 14:37:26,225 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,225 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,225 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:37:26,228 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml","modifiedTime":"2025-03-06 14:00:03.0903","isFile":true},
 "errors":[]
}
2025-03-06 14:37:26,228 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'modifiedTime': '2025-03-06 14:00:03.0903', 'isFile': True}
2025-03-06 14:37:26,228 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'modifiedTime': '2025-03-06 14:00:03.0903', 'isFile': True}
2025-03-06 14:37:26,228 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,228 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,228 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:37:26,233 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:26,233 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'existed': True}
2025-03-06 14:37:26,233 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'existed': True}
2025-03-06 14:37:26,233 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:310613" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,233 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:310613', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:37:26,240 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"},
 "errors":[]
}
2025-03-06 14:37:26,240 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:37:26,240 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:37:26,240 [DEBUG] py4...: --------------------
2025-03-06 14:37:26,240 [DEBUG] py4...: Calling export_network('networks_graphml/Pentose phosphate pathway [bvu00030].graphml', 'graphml', network=309927, overwrite_file=True)
2025-03-06 14:37:26,240 [DEBUG] py4...: ǀCalling get_network_suid(309927, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,240 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,240 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:26,243 [DEBUG] py4...: ǀǀOK[200], content: [310613,309927,311401,310299,310971]
2025-03-06 14:37:26,243 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [310613, 309927, 311401, 310299, 310971]
2025-03-06 14:37:26,243 [DEBUG] py4...: ǀReturning 'get_network_suid': 309927
2025-03-06 14:37:26,243 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Pentose phosphate pathway [bvu00030].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,243 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,243 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:37:26,246 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml","modifiedTime":"2025-03-06 14:00:03.0859","isFile":true},
 "errors":[]
}
2025-03-06 14:37:26,246 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml', 'modifiedTime': '2025-03-06 14:00:03.0859', 'isFile': True}
2025-03-06 14:37:26,246 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml', 'modifiedTime': '2025-03-06 14:00:03.0859', 'isFile': True}
2025-03-06 14:37:26,246 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Pentose phosphate pathway [bvu00030].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,246 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,246 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:37:26,249 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:26,249 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml', 'existed': True}
2025-03-06 14:37:26,249 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml', 'existed': True}
2025-03-06 14:37:26,249 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:309927" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,249 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:309927', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:37:26,259 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml"},
 "errors":[]
}
2025-03-06 14:37:26,259 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:37:26,259 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:37:26,259 [DEBUG] py4...: --------------------
2025-03-06 14:37:26,259 [DEBUG] py4...: Calling export_network('networks_graphml/Fructose and mannose metabolism [bvu00051].graphml', 'graphml', network=311401, overwrite_file=True)
2025-03-06 14:37:26,259 [DEBUG] py4...: ǀCalling get_network_suid(311401, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,259 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,259 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:26,262 [DEBUG] py4...: ǀǀOK[200], content: [310613,309927,311401,310299,310971]
2025-03-06 14:37:26,262 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [310613, 309927, 311401, 310299, 310971]
2025-03-06 14:37:26,262 [DEBUG] py4...: ǀReturning 'get_network_suid': 311401
2025-03-06 14:37:26,262 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Fructose and mannose metabolism [bvu00051].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,262 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,262 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:37:26,268 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml","modifiedTime":"2025-03-06 14:00:03.0880","isFile":true},
 "errors":[]
}
2025-03-06 14:37:26,269 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml', 'modifiedTime': '2025-03-06 14:00:03.0880', 'isFile': True}
2025-03-06 14:37:26,269 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml', 'modifiedTime': '2025-03-06 14:00:03.0880', 'isFile': True}
2025-03-06 14:37:26,269 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Fructose and mannose metabolism [bvu00051].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,269 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,269 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:37:26,273 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:26,273 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml', 'existed': True}
2025-03-06 14:37:26,274 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml', 'existed': True}
2025-03-06 14:37:26,274 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:311401" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,274 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:311401', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:37:26,281 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml"},
 "errors":[]
}
2025-03-06 14:37:26,281 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:37:26,282 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:37:26,282 [DEBUG] py4...: --------------------
2025-03-06 14:37:26,282 [DEBUG] py4...: Calling export_network('networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml', 'graphml', network=310299, overwrite_file=True)
2025-03-06 14:37:26,282 [DEBUG] py4...: ǀCalling get_network_suid(310299, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,282 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,282 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:26,286 [DEBUG] py4...: ǀǀOK[200], content: [310613,309927,311401,310299,310971]
2025-03-06 14:37:26,287 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [310613, 309927, 311401, 310299, 310971]
2025-03-06 14:37:26,287 [DEBUG] py4...: ǀReturning 'get_network_suid': 310299
2025-03-06 14:37:26,287 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,287 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,287 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:37:26,295 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml","modifiedTime":"2025-03-06 14:00:03.0822","isFile":true},
 "errors":[]
}
2025-03-06 14:37:26,295 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml', 'modifiedTime': '2025-03-06 14:00:03.0822', 'isFile': True}
2025-03-06 14:37:26,295 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml', 'modifiedTime': '2025-03-06 14:00:03.0822', 'isFile': True}
2025-03-06 14:37:26,295 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,295 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,296 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:37:26,301 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:26,301 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml', 'existed': True}
2025-03-06 14:37:26,301 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml', 'existed': True}
2025-03-06 14:37:26,301 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:310299" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,302 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:310299', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:37:26,310 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml"},
 "errors":[]
}
2025-03-06 14:37:26,311 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:37:26,311 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:37:26,311 [DEBUG] py4...: --------------------
2025-03-06 14:37:26,311 [DEBUG] py4...: Calling export_network('networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml', 'graphml', network=310971, overwrite_file=True)
2025-03-06 14:37:26,311 [DEBUG] py4...: ǀCalling get_network_suid(310971, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,311 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,312 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:37:26,315 [DEBUG] py4...: ǀǀOK[200], content: [310613,309927,311401,310299,310971]
2025-03-06 14:37:26,316 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [310613, 309927, 311401, 310299, 310971]
2025-03-06 14:37:26,316 [DEBUG] py4...: ǀReturning 'get_network_suid': 310971
2025-03-06 14:37:26,316 [DEBUG] py4...: ǀCalling sandbox_get_file_info('networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,316 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,316 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:37:26,319 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml","modifiedTime":"2025-03-06 14:00:03.0841","isFile":true},
 "errors":[]
}
2025-03-06 14:37:26,319 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml', 'modifiedTime': '2025-03-06 14:00:03.0841', 'isFile': True}
2025-03-06 14:37:26,319 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml', 'modifiedTime': '2025-03-06 14:00:03.0841', 'isFile': True}
2025-03-06 14:37:26,319 [DEBUG] py4...: ǀCalling sandbox_remove_file('networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,319 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,319 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:37:26,324 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:37:26,324 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml', 'existed': True}
2025-03-06 14:37:26,324 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml', 'existed': True}
2025-03-06 14:37:26,324 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:310971" options="GraphML" OutputFile="/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:37:26,324 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:310971', 'options': 'GraphML', 'OutputFile': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:37:26,333 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml"},
 "errors":[]
}
2025-03-06 14:37:26,333 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:37:26,333 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/network_connectivity_queries/networks_graphml/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:37:26,333 [DEBUG] py4...: --------------------
2025-03-06 14:41:27,524 [DEBUG] py4...: Calling open_session('/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys')
2025-03-06 14:41:27,524 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:27,524 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 14:41:27,590 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 14:41:27,591 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys'}
2025-03-06 14:41:37,699 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:41:37,700 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:41:37,700 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:41:37,700 [DEBUG] py4...: --------------------
2025-03-06 14:41:37,700 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:41:37,700 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:37,700 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:41:37,728 [DEBUG] py4...: ǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":328452},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":329124},{"name":"Pentose phosphate pathway [bvu00030]","SUID":328080},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":329554},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":328766}]
2025-03-06 14:41:37,729 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 328452}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 329124}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 328080}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 329554}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 328766}]
2025-03-06 14:41:37,729 [DEBUG] py4...: Returning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:41:37,729 [DEBUG] py4...: --------------------
2025-03-06 14:41:37,729 [DEBUG] py4...: Calling get_network_suid('Citrate cycle (TCA cycle) [bvu00020]')
2025-03-06 14:41:37,729 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:37,729 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:37,730 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:41:37,762 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":328452},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":329124},{"name":"Pentose phosphate pathway [bvu00030]","SUID":328080},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":329554},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":328766}]
2025-03-06 14:41:37,762 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 328452}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 329124}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 328080}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 329554}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 328766}]
2025-03-06 14:41:37,762 [DEBUG] py4...: ǀReturning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:41:37,763 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Citrate cycle (TCA cycle) [bvu00020]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:37,763 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Citrate cycle (TCA cycle) [bvu00020]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:41:37,784 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 328452
}
],
 "errors":[]
}
2025-03-06 14:41:37,785 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 328452}]
2025-03-06 14:41:37,785 [DEBUG] py4...: Returning 'get_network_suid': 328452
2025-03-06 14:41:37,785 [DEBUG] py4...: --------------------
2025-03-06 14:41:37,785 [DEBUG] py4...: Calling get_network_suid('Pentose and glucuronate interconversions [bvu00040]')
2025-03-06 14:41:37,785 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:37,785 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:37,785 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:41:37,794 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":328452},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":329124},{"name":"Pentose phosphate pathway [bvu00030]","SUID":328080},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":329554},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":328766}]
2025-03-06 14:41:37,795 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 328452}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 329124}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 328080}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 329554}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 328766}]
2025-03-06 14:41:37,795 [DEBUG] py4...: ǀReturning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:41:37,795 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pentose and glucuronate interconversions [bvu00040]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:37,796 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pentose and glucuronate interconversions [bvu00040]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:41:37,810 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 329124
}
],
 "errors":[]
}
2025-03-06 14:41:37,810 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 329124}]
2025-03-06 14:41:37,810 [DEBUG] py4...: Returning 'get_network_suid': 329124
2025-03-06 14:41:37,810 [DEBUG] py4...: --------------------
2025-03-06 14:41:37,810 [DEBUG] py4...: Calling get_network_suid('Pentose phosphate pathway [bvu00030]')
2025-03-06 14:41:37,810 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:37,810 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:37,811 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:41:37,820 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":328452},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":329124},{"name":"Pentose phosphate pathway [bvu00030]","SUID":328080},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":329554},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":328766}]
2025-03-06 14:41:37,821 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 328452}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 329124}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 328080}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 329554}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 328766}]
2025-03-06 14:41:37,822 [DEBUG] py4...: ǀReturning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:41:37,822 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pentose phosphate pathway [bvu00030]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:37,822 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pentose phosphate pathway [bvu00030]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:41:37,835 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 328080
}
],
 "errors":[]
}
2025-03-06 14:41:37,836 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 328080}]
2025-03-06 14:41:37,836 [DEBUG] py4...: Returning 'get_network_suid': 328080
2025-03-06 14:41:37,836 [DEBUG] py4...: --------------------
2025-03-06 14:41:37,836 [DEBUG] py4...: Calling get_network_suid('Fructose and mannose metabolism [bvu00051]')
2025-03-06 14:41:37,836 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:37,836 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:37,836 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:41:37,876 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":328452},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":329124},{"name":"Pentose phosphate pathway [bvu00030]","SUID":328080},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":329554},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":328766}]
2025-03-06 14:41:37,876 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 328452}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 329124}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 328080}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 329554}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 328766}]
2025-03-06 14:41:37,876 [DEBUG] py4...: ǀReturning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:41:37,876 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Fructose and mannose metabolism [bvu00051]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:37,876 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Fructose and mannose metabolism [bvu00051]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:41:37,899 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 329554
}
],
 "errors":[]
}
2025-03-06 14:41:37,899 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 329554}]
2025-03-06 14:41:37,899 [DEBUG] py4...: Returning 'get_network_suid': 329554
2025-03-06 14:41:37,900 [DEBUG] py4...: --------------------
2025-03-06 14:41:37,900 [DEBUG] py4...: Calling get_network_suid('Glycolysis / Gluconeogenesis [bvu00010]')
2025-03-06 14:41:37,900 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:37,900 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:37,900 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:41:37,915 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":328452},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":329124},{"name":"Pentose phosphate pathway [bvu00030]","SUID":328080},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":329554},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":328766}]
2025-03-06 14:41:37,916 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 328452}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 329124}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 328080}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 329554}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 328766}]
2025-03-06 14:41:37,916 [DEBUG] py4...: ǀReturning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:41:37,917 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glycolysis / Gluconeogenesis [bvu00010]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:41:37,917 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glycolysis / Gluconeogenesis [bvu00010]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:41:37,933 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 328766
}
],
 "errors":[]
}
2025-03-06 14:41:37,933 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 328766}]
2025-03-06 14:41:37,933 [DEBUG] py4...: Returning 'get_network_suid': 328766
2025-03-06 14:41:37,933 [DEBUG] py4...: --------------------
2025-03-06 14:42:54,539 [DEBUG] py4...: Calling open_session('/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys')
2025-03-06 14:42:54,540 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:54,540 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 14:42:54,577 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 14:42:54,577 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys'}
2025-03-06 14:42:55,670 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:42:55,670 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:42:55,671 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:42:55,671 [DEBUG] py4...: --------------------
2025-03-06 14:42:55,671 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:42:55,671 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,671 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:42:55,676 [DEBUG] py4...: ǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":337025},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":337697},{"name":"Pentose phosphate pathway [bvu00030]","SUID":336653},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":338127},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":337339}]
2025-03-06 14:42:55,676 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 337025}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 337697}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 336653}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 338127}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 337339}]
2025-03-06 14:42:55,676 [DEBUG] py4...: Returning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:42:55,676 [DEBUG] py4...: --------------------
2025-03-06 14:42:55,676 [DEBUG] py4...: Calling get_network_suid('Citrate cycle (TCA cycle) [bvu00020]')
2025-03-06 14:42:55,676 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,676 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,676 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:42:55,682 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":337025},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":337697},{"name":"Pentose phosphate pathway [bvu00030]","SUID":336653},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":338127},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":337339}]
2025-03-06 14:42:55,682 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 337025}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 337697}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 336653}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 338127}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 337339}]
2025-03-06 14:42:55,682 [DEBUG] py4...: ǀReturning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:42:55,682 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Citrate cycle (TCA cycle) [bvu00020]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,682 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Citrate cycle (TCA cycle) [bvu00020]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:42:55,685 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 337025
}
],
 "errors":[]
}
2025-03-06 14:42:55,686 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 337025}]
2025-03-06 14:42:55,686 [DEBUG] py4...: Returning 'get_network_suid': 337025
2025-03-06 14:42:55,686 [DEBUG] py4...: --------------------
2025-03-06 14:42:55,686 [DEBUG] py4...: Calling get_network_suid('Pentose and glucuronate interconversions [bvu00040]')
2025-03-06 14:42:55,686 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,686 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,686 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:42:55,689 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":337025},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":337697},{"name":"Pentose phosphate pathway [bvu00030]","SUID":336653},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":338127},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":337339}]
2025-03-06 14:42:55,689 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 337025}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 337697}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 336653}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 338127}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 337339}]
2025-03-06 14:42:55,689 [DEBUG] py4...: ǀReturning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:42:55,689 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pentose and glucuronate interconversions [bvu00040]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,689 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pentose and glucuronate interconversions [bvu00040]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:42:55,692 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 337697
}
],
 "errors":[]
}
2025-03-06 14:42:55,693 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 337697}]
2025-03-06 14:42:55,693 [DEBUG] py4...: Returning 'get_network_suid': 337697
2025-03-06 14:42:55,693 [DEBUG] py4...: --------------------
2025-03-06 14:42:55,693 [DEBUG] py4...: Calling get_network_suid('Pentose phosphate pathway [bvu00030]')
2025-03-06 14:42:55,693 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,693 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,693 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:42:55,696 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":337025},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":337697},{"name":"Pentose phosphate pathway [bvu00030]","SUID":336653},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":338127},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":337339}]
2025-03-06 14:42:55,696 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 337025}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 337697}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 336653}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 338127}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 337339}]
2025-03-06 14:42:55,696 [DEBUG] py4...: ǀReturning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:42:55,697 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pentose phosphate pathway [bvu00030]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,697 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pentose phosphate pathway [bvu00030]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:42:55,701 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 336653
}
],
 "errors":[]
}
2025-03-06 14:42:55,701 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 336653}]
2025-03-06 14:42:55,701 [DEBUG] py4...: Returning 'get_network_suid': 336653
2025-03-06 14:42:55,701 [DEBUG] py4...: --------------------
2025-03-06 14:42:55,701 [DEBUG] py4...: Calling get_network_suid('Fructose and mannose metabolism [bvu00051]')
2025-03-06 14:42:55,701 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,701 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,701 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:42:55,704 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":337025},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":337697},{"name":"Pentose phosphate pathway [bvu00030]","SUID":336653},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":338127},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":337339}]
2025-03-06 14:42:55,704 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 337025}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 337697}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 336653}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 338127}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 337339}]
2025-03-06 14:42:55,704 [DEBUG] py4...: ǀReturning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:42:55,704 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Fructose and mannose metabolism [bvu00051]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,704 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Fructose and mannose metabolism [bvu00051]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:42:55,708 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 338127
}
],
 "errors":[]
}
2025-03-06 14:42:55,708 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 338127}]
2025-03-06 14:42:55,708 [DEBUG] py4...: Returning 'get_network_suid': 338127
2025-03-06 14:42:55,708 [DEBUG] py4...: --------------------
2025-03-06 14:42:55,708 [DEBUG] py4...: Calling get_network_suid('Glycolysis / Gluconeogenesis [bvu00010]')
2025-03-06 14:42:55,708 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,708 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,709 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:42:55,711 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":337025},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":337697},{"name":"Pentose phosphate pathway [bvu00030]","SUID":336653},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":338127},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":337339}]
2025-03-06 14:42:55,711 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 337025}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 337697}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 336653}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 338127}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 337339}]
2025-03-06 14:42:55,711 [DEBUG] py4...: ǀReturning 'get_network_list': ['Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Glycolysis / Gluconeogenesis [bvu00010]']
2025-03-06 14:42:55,711 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glycolysis / Gluconeogenesis [bvu00010]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,711 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glycolysis / Gluconeogenesis [bvu00010]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:42:55,714 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 337339
}
],
 "errors":[]
}
2025-03-06 14:42:55,715 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 337339}]
2025-03-06 14:42:55,715 [DEBUG] py4...: Returning 'get_network_suid': 337339
2025-03-06 14:42:55,715 [DEBUG] py4...: --------------------
2025-03-06 14:42:55,715 [DEBUG] py4...: Calling export_network('/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', 'graphml', network=337025, overwrite_file=True)
2025-03-06 14:42:55,715 [DEBUG] py4...: ǀCalling get_network_suid(337025, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,715 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,715 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:42:55,717 [DEBUG] py4...: ǀǀOK[200], content: [337025,337697,336653,338127,337339]
2025-03-06 14:42:55,717 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [337025, 337697, 336653, 338127, 337339]
2025-03-06 14:42:55,717 [DEBUG] py4...: ǀReturning 'get_network_suid': 337025
2025-03-06 14:42:55,717 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,717 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,717 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:42:55,720 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:42:55,720 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:42:55,720 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:42:55,720 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:337025" options="GraphML" OutputFile="/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,720 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:337025', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:42:55,728 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml"},
 "errors":[]
}
2025-03-06 14:42:55,729 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:42:55,729 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:42:55,729 [DEBUG] py4...: --------------------
2025-03-06 14:42:55,729 [DEBUG] py4...: Calling export_network('/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', 'graphml', network=337697, overwrite_file=True)
2025-03-06 14:42:55,729 [DEBUG] py4...: ǀCalling get_network_suid(337697, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,729 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,729 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:42:55,731 [DEBUG] py4...: ǀǀOK[200], content: [337025,337697,336653,338127,337339]
2025-03-06 14:42:55,731 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [337025, 337697, 336653, 338127, 337339]
2025-03-06 14:42:55,731 [DEBUG] py4...: ǀReturning 'get_network_suid': 337697
2025-03-06 14:42:55,732 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,732 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,732 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:42:55,735 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:42:55,735 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:42:55,735 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:42:55,735 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:337697" options="GraphML" OutputFile="/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,735 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:337697', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:42:55,742 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml"},
 "errors":[]
}
2025-03-06 14:42:55,742 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:42:55,742 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:42:55,742 [DEBUG] py4...: --------------------
2025-03-06 14:42:55,742 [DEBUG] py4...: Calling export_network('/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', 'graphml', network=336653, overwrite_file=True)
2025-03-06 14:42:55,742 [DEBUG] py4...: ǀCalling get_network_suid(336653, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,742 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,742 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:42:55,744 [DEBUG] py4...: ǀǀOK[200], content: [337025,337697,336653,338127,337339]
2025-03-06 14:42:55,745 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [337025, 337697, 336653, 338127, 337339]
2025-03-06 14:42:55,745 [DEBUG] py4...: ǀReturning 'get_network_suid': 336653
2025-03-06 14:42:55,745 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,745 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Pentose phosphate pathway [bvu00030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,745 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:42:55,748 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Pentose phosphate pathway [bvu00030].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:42:55,748 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:42:55,748 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:42:55,748 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:336653" options="GraphML" OutputFile="/Users/karcher/Pentose phosphate pathway [bvu00030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,748 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:336653', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:42:55,754 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Pentose phosphate pathway [bvu00030].graphml"},
 "errors":[]
}
2025-03-06 14:42:55,754 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:42:55,754 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:42:55,754 [DEBUG] py4...: --------------------
2025-03-06 14:42:55,754 [DEBUG] py4...: Calling export_network('/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', 'graphml', network=338127, overwrite_file=True)
2025-03-06 14:42:55,754 [DEBUG] py4...: ǀCalling get_network_suid(338127, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,754 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,754 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:42:55,757 [DEBUG] py4...: ǀǀOK[200], content: [337025,337697,336653,338127,337339]
2025-03-06 14:42:55,757 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [337025, 337697, 336653, 338127, 337339]
2025-03-06 14:42:55,757 [DEBUG] py4...: ǀReturning 'get_network_suid': 338127
2025-03-06 14:42:55,757 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,757 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,757 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:42:55,760 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:42:55,760 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:42:55,760 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:42:55,760 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:338127" options="GraphML" OutputFile="/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,760 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:338127', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:42:55,766 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml"},
 "errors":[]
}
2025-03-06 14:42:55,766 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:42:55,766 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:42:55,766 [DEBUG] py4...: --------------------
2025-03-06 14:42:55,766 [DEBUG] py4...: Calling export_network('/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'graphml', network=337339, overwrite_file=True)
2025-03-06 14:42:55,766 [DEBUG] py4...: ǀCalling get_network_suid(337339, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,766 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,766 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:42:55,769 [DEBUG] py4...: ǀǀOK[200], content: [337025,337697,336653,338127,337339]
2025-03-06 14:42:55,769 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [337025, 337697, 336653, 338127, 337339]
2025-03-06 14:42:55,769 [DEBUG] py4...: ǀReturning 'get_network_suid': 337339
2025-03-06 14:42:55,769 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,769 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,769 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:42:55,773 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:42:55,773 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:42:55,773 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:42:55,773 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:337339" options="GraphML" OutputFile="/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:42:55,773 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:337339', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:42:55,779 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"},
 "errors":[]
}
2025-03-06 14:42:55,779 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:42:55,779 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:42:55,779 [DEBUG] py4...: --------------------
2025-03-06 14:43:55,715 [DEBUG] py4...: Calling open_session('/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys')
2025-03-06 14:43:55,715 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:43:55,715 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 14:43:55,772 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 14:43:55,772 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys'}
2025-03-06 14:44:01,530 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:44:01,531 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:44:01,531 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:44:01,531 [DEBUG] py4...: --------------------
2025-03-06 14:44:01,532 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:44:01,532 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,532 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:44:01,575 [DEBUG] py4...: ǀOK[200], content: [{"name":"Fructose and mannose metabolism [bvu00051]","SUID":346700},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":345598},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":346270},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":345912},{"name":"Pentose phosphate pathway [bvu00030]","SUID":345226}]
2025-03-06 14:44:01,575 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 346700}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 345598}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 346270}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 345912}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 345226}]
2025-03-06 14:44:01,575 [DEBUG] py4...: Returning 'get_network_list': ['Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]']
2025-03-06 14:44:01,575 [DEBUG] py4...: --------------------
2025-03-06 14:44:01,575 [DEBUG] py4...: Calling get_network_suid('Fructose and mannose metabolism [bvu00051]')
2025-03-06 14:44:01,575 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,575 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,575 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:44:01,612 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Fructose and mannose metabolism [bvu00051]","SUID":346700},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":345598},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":346270},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":345912},{"name":"Pentose phosphate pathway [bvu00030]","SUID":345226}]
2025-03-06 14:44:01,612 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 346700}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 345598}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 346270}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 345912}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 345226}]
2025-03-06 14:44:01,612 [DEBUG] py4...: ǀReturning 'get_network_list': ['Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]']
2025-03-06 14:44:01,612 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Fructose and mannose metabolism [bvu00051]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,612 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Fructose and mannose metabolism [bvu00051]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:44:01,624 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 346700
}
],
 "errors":[]
}
2025-03-06 14:44:01,624 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 346700}]
2025-03-06 14:44:01,624 [DEBUG] py4...: Returning 'get_network_suid': 346700
2025-03-06 14:44:01,624 [DEBUG] py4...: --------------------
2025-03-06 14:44:01,624 [DEBUG] py4...: Calling get_network_suid('Citrate cycle (TCA cycle) [bvu00020]')
2025-03-06 14:44:01,624 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,624 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,624 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:44:01,632 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Fructose and mannose metabolism [bvu00051]","SUID":346700},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":345598},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":346270},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":345912},{"name":"Pentose phosphate pathway [bvu00030]","SUID":345226}]
2025-03-06 14:44:01,633 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 346700}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 345598}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 346270}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 345912}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 345226}]
2025-03-06 14:44:01,633 [DEBUG] py4...: ǀReturning 'get_network_list': ['Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]']
2025-03-06 14:44:01,633 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Citrate cycle (TCA cycle) [bvu00020]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,633 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Citrate cycle (TCA cycle) [bvu00020]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:44:01,646 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 345598
}
],
 "errors":[]
}
2025-03-06 14:44:01,647 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 345598}]
2025-03-06 14:44:01,647 [DEBUG] py4...: Returning 'get_network_suid': 345598
2025-03-06 14:44:01,647 [DEBUG] py4...: --------------------
2025-03-06 14:44:01,647 [DEBUG] py4...: Calling get_network_suid('Pentose and glucuronate interconversions [bvu00040]')
2025-03-06 14:44:01,647 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,647 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,647 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:44:01,660 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Fructose and mannose metabolism [bvu00051]","SUID":346700},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":345598},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":346270},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":345912},{"name":"Pentose phosphate pathway [bvu00030]","SUID":345226}]
2025-03-06 14:44:01,660 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 346700}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 345598}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 346270}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 345912}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 345226}]
2025-03-06 14:44:01,660 [DEBUG] py4...: ǀReturning 'get_network_list': ['Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]']
2025-03-06 14:44:01,660 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pentose and glucuronate interconversions [bvu00040]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,661 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pentose and glucuronate interconversions [bvu00040]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:44:01,675 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 346270
}
],
 "errors":[]
}
2025-03-06 14:44:01,675 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 346270}]
2025-03-06 14:44:01,675 [DEBUG] py4...: Returning 'get_network_suid': 346270
2025-03-06 14:44:01,675 [DEBUG] py4...: --------------------
2025-03-06 14:44:01,675 [DEBUG] py4...: Calling get_network_suid('Glycolysis / Gluconeogenesis [bvu00010]')
2025-03-06 14:44:01,676 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,676 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,676 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:44:01,685 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Fructose and mannose metabolism [bvu00051]","SUID":346700},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":345598},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":346270},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":345912},{"name":"Pentose phosphate pathway [bvu00030]","SUID":345226}]
2025-03-06 14:44:01,685 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 346700}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 345598}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 346270}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 345912}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 345226}]
2025-03-06 14:44:01,686 [DEBUG] py4...: ǀReturning 'get_network_list': ['Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]']
2025-03-06 14:44:01,686 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glycolysis / Gluconeogenesis [bvu00010]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,686 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glycolysis / Gluconeogenesis [bvu00010]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:44:01,706 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 345912
}
],
 "errors":[]
}
2025-03-06 14:44:01,706 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 345912}]
2025-03-06 14:44:01,706 [DEBUG] py4...: Returning 'get_network_suid': 345912
2025-03-06 14:44:01,707 [DEBUG] py4...: --------------------
2025-03-06 14:44:01,707 [DEBUG] py4...: Calling get_network_suid('Pentose phosphate pathway [bvu00030]')
2025-03-06 14:44:01,707 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,707 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,707 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:44:01,719 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Fructose and mannose metabolism [bvu00051]","SUID":346700},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":345598},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":346270},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":345912},{"name":"Pentose phosphate pathway [bvu00030]","SUID":345226}]
2025-03-06 14:44:01,720 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 346700}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 345598}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 346270}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 345912}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 345226}]
2025-03-06 14:44:01,720 [DEBUG] py4...: ǀReturning 'get_network_list': ['Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]']
2025-03-06 14:44:01,720 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pentose phosphate pathway [bvu00030]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,720 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pentose phosphate pathway [bvu00030]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:44:01,738 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 345226
}
],
 "errors":[]
}
2025-03-06 14:44:01,738 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 345226}]
2025-03-06 14:44:01,738 [DEBUG] py4...: Returning 'get_network_suid': 345226
2025-03-06 14:44:01,739 [DEBUG] py4...: --------------------
2025-03-06 14:44:01,739 [DEBUG] py4...: Calling export_network('/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', 'graphml', network=346700, overwrite_file=True)
2025-03-06 14:44:01,739 [DEBUG] py4...: ǀCalling get_network_suid(346700, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,739 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,739 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:44:01,756 [DEBUG] py4...: ǀǀOK[200], content: [346700,345598,346270,345912,345226]
2025-03-06 14:44:01,756 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [346700, 345598, 346270, 345912, 345226]
2025-03-06 14:44:01,756 [DEBUG] py4...: ǀReturning 'get_network_suid': 346700
2025-03-06 14:44:01,756 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,756 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,756 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:44:01,776 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml","modifiedTime":"2025-03-06 14:42:55.0766","isFile":true},
 "errors":[]
}
2025-03-06 14:44:01,776 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', 'modifiedTime': '2025-03-06 14:42:55.0766', 'isFile': True}
2025-03-06 14:44:01,776 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', 'modifiedTime': '2025-03-06 14:42:55.0766', 'isFile': True}
2025-03-06 14:44:01,776 [DEBUG] py4...: ǀCalling sandbox_remove_file('/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,776 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,776 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:44:01,793 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:44:01,793 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', 'existed': True}
2025-03-06 14:44:01,793 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', 'existed': True}
2025-03-06 14:44:01,793 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:346700" options="GraphML" OutputFile="/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,794 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:346700', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:44:01,816 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml"},
 "errors":[]
}
2025-03-06 14:44:01,816 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:44:01,816 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:44:01,816 [DEBUG] py4...: --------------------
2025-03-06 14:44:01,816 [DEBUG] py4...: Calling export_network('/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', 'graphml', network=345598, overwrite_file=True)
2025-03-06 14:44:01,816 [DEBUG] py4...: ǀCalling get_network_suid(345598, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,816 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,816 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:44:01,822 [DEBUG] py4...: ǀǀOK[200], content: [346700,345598,346270,345912,345226]
2025-03-06 14:44:01,822 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [346700, 345598, 346270, 345912, 345226]
2025-03-06 14:44:01,822 [DEBUG] py4...: ǀReturning 'get_network_suid': 345598
2025-03-06 14:44:01,822 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,822 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,822 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:44:01,837 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml","modifiedTime":"2025-03-06 14:42:55.0728","isFile":true},
 "errors":[]
}
2025-03-06 14:44:01,837 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', 'modifiedTime': '2025-03-06 14:42:55.0728', 'isFile': True}
2025-03-06 14:44:01,837 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', 'modifiedTime': '2025-03-06 14:42:55.0728', 'isFile': True}
2025-03-06 14:44:01,837 [DEBUG] py4...: ǀCalling sandbox_remove_file('/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,837 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,837 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:44:01,845 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:44:01,845 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', 'existed': True}
2025-03-06 14:44:01,845 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', 'existed': True}
2025-03-06 14:44:01,845 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:345598" options="GraphML" OutputFile="/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,845 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:345598', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:44:01,871 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml"},
 "errors":[]
}
2025-03-06 14:44:01,871 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:44:01,871 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:44:01,871 [DEBUG] py4...: --------------------
2025-03-06 14:44:01,871 [DEBUG] py4...: Calling export_network('/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', 'graphml', network=346270, overwrite_file=True)
2025-03-06 14:44:01,871 [DEBUG] py4...: ǀCalling get_network_suid(346270, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,871 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,871 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:44:01,877 [DEBUG] py4...: ǀǀOK[200], content: [346700,345598,346270,345912,345226]
2025-03-06 14:44:01,877 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [346700, 345598, 346270, 345912, 345226]
2025-03-06 14:44:01,877 [DEBUG] py4...: ǀReturning 'get_network_suid': 346270
2025-03-06 14:44:01,877 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,877 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,877 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:44:01,884 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml","modifiedTime":"2025-03-06 14:42:55.0741","isFile":true},
 "errors":[]
}
2025-03-06 14:44:01,884 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', 'modifiedTime': '2025-03-06 14:42:55.0741', 'isFile': True}
2025-03-06 14:44:01,884 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', 'modifiedTime': '2025-03-06 14:42:55.0741', 'isFile': True}
2025-03-06 14:44:01,884 [DEBUG] py4...: ǀCalling sandbox_remove_file('/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,884 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,884 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:44:01,891 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:44:01,891 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', 'existed': True}
2025-03-06 14:44:01,891 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', 'existed': True}
2025-03-06 14:44:01,891 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:346270" options="GraphML" OutputFile="/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,891 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:346270', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:44:01,923 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml"},
 "errors":[]
}
2025-03-06 14:44:01,923 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:44:01,923 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:44:01,923 [DEBUG] py4...: --------------------
2025-03-06 14:44:01,923 [DEBUG] py4...: Calling export_network('/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'graphml', network=345912, overwrite_file=True)
2025-03-06 14:44:01,923 [DEBUG] py4...: ǀCalling get_network_suid(345912, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,923 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,923 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:44:01,930 [DEBUG] py4...: ǀǀOK[200], content: [346700,345598,346270,345912,345226]
2025-03-06 14:44:01,930 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [346700, 345598, 346270, 345912, 345226]
2025-03-06 14:44:01,930 [DEBUG] py4...: ǀReturning 'get_network_suid': 345912
2025-03-06 14:44:01,930 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,930 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,930 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:44:01,938 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml","modifiedTime":"2025-03-06 14:42:55.0778","isFile":true},
 "errors":[]
}
2025-03-06 14:44:01,938 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'modifiedTime': '2025-03-06 14:42:55.0778', 'isFile': True}
2025-03-06 14:44:01,938 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'modifiedTime': '2025-03-06 14:42:55.0778', 'isFile': True}
2025-03-06 14:44:01,938 [DEBUG] py4...: ǀCalling sandbox_remove_file('/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,938 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,938 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:44:01,953 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:44:01,953 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'existed': True}
2025-03-06 14:44:01,953 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'existed': True}
2025-03-06 14:44:01,953 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:345912" options="GraphML" OutputFile="/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,953 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:345912', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:44:01,971 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"},
 "errors":[]
}
2025-03-06 14:44:01,971 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:44:01,971 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:44:01,972 [DEBUG] py4...: --------------------
2025-03-06 14:44:01,972 [DEBUG] py4...: Calling export_network('/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', 'graphml', network=345226, overwrite_file=True)
2025-03-06 14:44:01,972 [DEBUG] py4...: ǀCalling get_network_suid(345226, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,972 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,972 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:44:01,978 [DEBUG] py4...: ǀǀOK[200], content: [346700,345598,346270,345912,345226]
2025-03-06 14:44:01,978 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [346700, 345598, 346270, 345912, 345226]
2025-03-06 14:44:01,978 [DEBUG] py4...: ǀReturning 'get_network_suid': 345226
2025-03-06 14:44:01,978 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,978 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Pentose phosphate pathway [bvu00030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,978 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:44:01,987 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Pentose phosphate pathway [bvu00030].graphml","modifiedTime":"2025-03-06 14:42:55.0753","isFile":true},
 "errors":[]
}
2025-03-06 14:44:01,987 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', 'modifiedTime': '2025-03-06 14:42:55.0753', 'isFile': True}
2025-03-06 14:44:01,987 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', 'modifiedTime': '2025-03-06 14:42:55.0753', 'isFile': True}
2025-03-06 14:44:01,987 [DEBUG] py4...: ǀCalling sandbox_remove_file('/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,987 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/Pentose phosphate pathway [bvu00030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:01,987 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:44:02,004 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Pentose phosphate pathway [bvu00030].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:44:02,004 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', 'existed': True}
2025-03-06 14:44:02,004 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', 'existed': True}
2025-03-06 14:44:02,004 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:345226" options="GraphML" OutputFile="/Users/karcher/Pentose phosphate pathway [bvu00030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:44:02,004 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:345226', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:44:02,041 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Pentose phosphate pathway [bvu00030].graphml"},
 "errors":[]
}
2025-03-06 14:44:02,041 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:44:02,041 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:44:02,041 [DEBUG] py4...: --------------------
2025-03-06 14:47:54,914 [DEBUG] py4...: Calling open_session('/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys')
2025-03-06 14:47:54,915 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:47:54,915 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 14:47:54,956 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 14:47:54,956 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys'}
2025-03-06 14:47:56,629 [DEBUG] py4...: --------------------
2025-03-06 14:48:02,647 [DEBUG] py4...: Calling open_session('/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys')
2025-03-06 14:48:02,647 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:02,647 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 14:48:02,738 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 14:48:02,738 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys'}
2025-03-06 14:48:07,848 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:48:07,849 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:48:07,849 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:48:07,849 [DEBUG] py4...: --------------------
2025-03-06 14:48:07,849 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:48:07,849 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:07,849 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:48:07,897 [DEBUG] py4...: ǀOK[200], content: [{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":371780},{"name":"Pentose phosphate pathway [bvu00030]","SUID":371094},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":372568},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":371466},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":372138}]
2025-03-06 14:48:07,898 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 371780}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 371094}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 372568}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 371466}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 372138}]
2025-03-06 14:48:07,898 [DEBUG] py4...: Returning 'get_network_list': ['Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]']
2025-03-06 14:48:07,898 [DEBUG] py4...: --------------------
2025-03-06 14:48:07,899 [DEBUG] py4...: Calling get_network_suid('Glycolysis / Gluconeogenesis [bvu00010]')
2025-03-06 14:48:07,899 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:07,899 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:07,899 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:48:07,914 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":371780},{"name":"Pentose phosphate pathway [bvu00030]","SUID":371094},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":372568},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":371466},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":372138}]
2025-03-06 14:48:07,914 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 371780}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 371094}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 372568}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 371466}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 372138}]
2025-03-06 14:48:07,914 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]']
2025-03-06 14:48:07,914 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glycolysis / Gluconeogenesis [bvu00010]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:07,915 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glycolysis / Gluconeogenesis [bvu00010]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:48:07,936 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 371780
}
],
 "errors":[]
}
2025-03-06 14:48:07,936 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 371780}]
2025-03-06 14:48:07,936 [DEBUG] py4...: Returning 'get_network_suid': 371780
2025-03-06 14:48:07,936 [DEBUG] py4...: --------------------
2025-03-06 14:48:07,936 [DEBUG] py4...: Calling get_network_suid('Pentose phosphate pathway [bvu00030]')
2025-03-06 14:48:07,936 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:07,936 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:07,936 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:48:07,944 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":371780},{"name":"Pentose phosphate pathway [bvu00030]","SUID":371094},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":372568},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":371466},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":372138}]
2025-03-06 14:48:07,944 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 371780}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 371094}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 372568}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 371466}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 372138}]
2025-03-06 14:48:07,944 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]']
2025-03-06 14:48:07,944 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pentose phosphate pathway [bvu00030]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:07,944 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pentose phosphate pathway [bvu00030]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:48:07,952 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 371094
}
],
 "errors":[]
}
2025-03-06 14:48:07,952 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 371094}]
2025-03-06 14:48:07,952 [DEBUG] py4...: Returning 'get_network_suid': 371094
2025-03-06 14:48:07,953 [DEBUG] py4...: --------------------
2025-03-06 14:48:07,953 [DEBUG] py4...: Calling get_network_suid('Fructose and mannose metabolism [bvu00051]')
2025-03-06 14:48:07,953 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:07,953 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:07,953 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:48:07,959 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":371780},{"name":"Pentose phosphate pathway [bvu00030]","SUID":371094},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":372568},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":371466},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":372138}]
2025-03-06 14:48:07,959 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 371780}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 371094}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 372568}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 371466}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 372138}]
2025-03-06 14:48:07,959 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]']
2025-03-06 14:48:07,959 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Fructose and mannose metabolism [bvu00051]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:07,959 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Fructose and mannose metabolism [bvu00051]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:48:07,967 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 372568
}
],
 "errors":[]
}
2025-03-06 14:48:07,967 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 372568}]
2025-03-06 14:48:07,967 [DEBUG] py4...: Returning 'get_network_suid': 372568
2025-03-06 14:48:07,967 [DEBUG] py4...: --------------------
2025-03-06 14:48:07,967 [DEBUG] py4...: Calling get_network_suid('Citrate cycle (TCA cycle) [bvu00020]')
2025-03-06 14:48:07,967 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:07,967 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:07,968 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:48:07,973 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":371780},{"name":"Pentose phosphate pathway [bvu00030]","SUID":371094},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":372568},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":371466},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":372138}]
2025-03-06 14:48:07,973 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 371780}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 371094}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 372568}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 371466}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 372138}]
2025-03-06 14:48:07,973 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]']
2025-03-06 14:48:07,973 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Citrate cycle (TCA cycle) [bvu00020]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:07,973 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Citrate cycle (TCA cycle) [bvu00020]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:48:07,997 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 371466
}
],
 "errors":[]
}
2025-03-06 14:48:07,997 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 371466}]
2025-03-06 14:48:07,998 [DEBUG] py4...: Returning 'get_network_suid': 371466
2025-03-06 14:48:07,998 [DEBUG] py4...: --------------------
2025-03-06 14:48:07,998 [DEBUG] py4...: Calling get_network_suid('Pentose and glucuronate interconversions [bvu00040]')
2025-03-06 14:48:07,998 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:07,998 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:07,998 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:48:08,009 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":371780},{"name":"Pentose phosphate pathway [bvu00030]","SUID":371094},{"name":"Fructose and mannose metabolism [bvu00051]","SUID":372568},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":371466},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":372138}]
2025-03-06 14:48:08,009 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 371780}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 371094}, {'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 372568}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 371466}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 372138}]
2025-03-06 14:48:08,009 [DEBUG] py4...: ǀReturning 'get_network_list': ['Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]', 'Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]']
2025-03-06 14:48:08,009 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pentose and glucuronate interconversions [bvu00040]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:08,010 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pentose and glucuronate interconversions [bvu00040]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:48:08,029 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 372138
}
],
 "errors":[]
}
2025-03-06 14:48:08,029 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 372138}]
2025-03-06 14:48:08,029 [DEBUG] py4...: Returning 'get_network_suid': 372138
2025-03-06 14:48:08,030 [DEBUG] py4...: --------------------
2025-03-06 14:48:08,030 [DEBUG] py4...: Calling export_network('/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'graphml', network=371780, overwrite_file=True)
2025-03-06 14:48:08,030 [DEBUG] py4...: ǀCalling get_network_suid(371780, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:08,030 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:08,030 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:48:08,040 [DEBUG] py4...: ǀǀOK[200], content: [371780,371094,372568,371466,372138]
2025-03-06 14:48:08,040 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [371780, 371094, 372568, 371466, 372138]
2025-03-06 14:48:08,040 [DEBUG] py4...: ǀReturning 'get_network_suid': 371780
2025-03-06 14:48:08,041 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:08,041 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:08,041 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:48:08,055 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml","modifiedTime":"2025-03-06 14:44:01.0970","isFile":true},
 "errors":[]
}
2025-03-06 14:48:08,055 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'modifiedTime': '2025-03-06 14:44:01.0970', 'isFile': True}
2025-03-06 14:48:08,055 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'modifiedTime': '2025-03-06 14:44:01.0970', 'isFile': True}
2025-03-06 14:48:08,056 [DEBUG] py4...: ǀCalling sandbox_remove_file('/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:08,056 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:08,056 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:48:08,072 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:48:08,072 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'existed': True}
2025-03-06 14:48:08,072 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'existed': True}
2025-03-06 14:48:17,679 [DEBUG] py4...: ǀCalling get_network_name(371780)
2025-03-06 14:48:17,680 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', {'column': 'suid', 'query': 371780}, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:17,680 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names), params: {'column': 'suid', 'query': 371780}
2025-03-06 14:48:17,730 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":371780}]
2025-03-06 14:48:17,730 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 371780}]
2025-03-06 14:48:17,730 [DEBUG] py4...: ǀReturning 'get_network_name': 'Glycolysis / Gluconeogenesis [bvu00010]'
2025-03-06 14:48:53,766 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:371780" options="GraphML" OutputFile="/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:53,768 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:371780', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:48:53,925 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"},
 "errors":[]
}
2025-03-06 14:48:53,925 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:48:53,925 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:48:53,925 [DEBUG] py4...: --------------------
2025-03-06 14:48:53,925 [DEBUG] py4...: Calling export_network('/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', 'graphml', network=371094, overwrite_file=True)
2025-03-06 14:48:53,925 [DEBUG] py4...: ǀCalling get_network_suid(371094, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:53,925 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:53,926 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:48:53,947 [DEBUG] py4...: ǀǀOK[200], content: [371780,371094,372568,371466,372138]
2025-03-06 14:48:53,948 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [371780, 371094, 372568, 371466, 372138]
2025-03-06 14:48:53,948 [DEBUG] py4...: ǀReturning 'get_network_suid': 371094
2025-03-06 14:48:53,948 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:53,948 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Pentose phosphate pathway [bvu00030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:53,948 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:48:53,978 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Pentose phosphate pathway [bvu00030].graphml","modifiedTime":"2025-03-06 14:44:02.0039","isFile":true},
 "errors":[]
}
2025-03-06 14:48:53,978 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', 'modifiedTime': '2025-03-06 14:44:02.0039', 'isFile': True}
2025-03-06 14:48:53,978 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', 'modifiedTime': '2025-03-06 14:44:02.0039', 'isFile': True}
2025-03-06 14:48:53,978 [DEBUG] py4...: ǀCalling sandbox_remove_file('/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:53,978 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/Pentose phosphate pathway [bvu00030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:53,978 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:48:54,001 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Pentose phosphate pathway [bvu00030].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:48:54,001 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', 'existed': True}
2025-03-06 14:48:54,001 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml', 'existed': True}
2025-03-06 14:48:58,713 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:371094" options="GraphML" OutputFile="/Users/karcher/Pentose phosphate pathway [bvu00030].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:58,713 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:371094', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:48:58,897 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Pentose phosphate pathway [bvu00030].graphml"},
 "errors":[]
}
2025-03-06 14:48:58,897 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:48:58,897 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Pentose phosphate pathway [bvu00030].graphml'}
2025-03-06 14:48:58,897 [DEBUG] py4...: --------------------
2025-03-06 14:48:58,897 [DEBUG] py4...: Calling export_network('/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', 'graphml', network=372568, overwrite_file=True)
2025-03-06 14:48:58,897 [DEBUG] py4...: ǀCalling get_network_suid(372568, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:58,897 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:58,897 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:48:58,921 [DEBUG] py4...: ǀǀOK[200], content: [371780,371094,372568,371466,372138]
2025-03-06 14:48:58,921 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [371780, 371094, 372568, 371466, 372138]
2025-03-06 14:48:58,921 [DEBUG] py4...: ǀReturning 'get_network_suid': 372568
2025-03-06 14:48:58,921 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:58,921 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:58,921 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:48:59,000 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml","modifiedTime":"2025-03-06 14:44:01.0814","isFile":true},
 "errors":[]
}
2025-03-06 14:48:59,000 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', 'modifiedTime': '2025-03-06 14:44:01.0814', 'isFile': True}
2025-03-06 14:48:59,000 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', 'modifiedTime': '2025-03-06 14:44:01.0814', 'isFile': True}
2025-03-06 14:48:59,000 [DEBUG] py4...: ǀCalling sandbox_remove_file('/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:59,000 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:48:59,000 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:48:59,054 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:48:59,055 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', 'existed': True}
2025-03-06 14:48:59,055 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', 'existed': True}
2025-03-06 14:49:00,631 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:372568" options="GraphML" OutputFile="/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:00,631 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:372568', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:49:00,664 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml"},
 "errors":[]
}
2025-03-06 14:49:00,665 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:49:00,665 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:49:00,665 [DEBUG] py4...: --------------------
2025-03-06 14:49:00,665 [DEBUG] py4...: Calling export_network('/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', 'graphml', network=371466, overwrite_file=True)
2025-03-06 14:49:00,665 [DEBUG] py4...: ǀCalling get_network_suid(371466, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:00,665 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:00,665 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:49:00,678 [DEBUG] py4...: ǀǀOK[200], content: [371780,371094,372568,371466,372138]
2025-03-06 14:49:00,678 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [371780, 371094, 372568, 371466, 372138]
2025-03-06 14:49:00,678 [DEBUG] py4...: ǀReturning 'get_network_suid': 371466
2025-03-06 14:49:00,678 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:00,678 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:00,678 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:49:00,697 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml","modifiedTime":"2025-03-06 14:44:01.0867","isFile":true},
 "errors":[]
}
2025-03-06 14:49:00,697 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', 'modifiedTime': '2025-03-06 14:44:01.0867', 'isFile': True}
2025-03-06 14:49:00,697 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', 'modifiedTime': '2025-03-06 14:44:01.0867', 'isFile': True}
2025-03-06 14:49:00,697 [DEBUG] py4...: ǀCalling sandbox_remove_file('/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:00,697 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:00,697 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:49:00,711 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:49:00,712 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', 'existed': True}
2025-03-06 14:49:00,712 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', 'existed': True}
2025-03-06 14:49:04,203 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:371466" options="GraphML" OutputFile="/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:04,203 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:371466', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:49:04,239 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml"},
 "errors":[]
}
2025-03-06 14:49:04,239 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:49:04,239 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:49:04,239 [DEBUG] py4...: --------------------
2025-03-06 14:49:04,239 [DEBUG] py4...: Calling export_network('/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', 'graphml', network=372138, overwrite_file=True)
2025-03-06 14:49:04,239 [DEBUG] py4...: ǀCalling get_network_suid(372138, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:04,239 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:04,239 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:49:04,257 [DEBUG] py4...: ǀǀOK[200], content: [371780,371094,372568,371466,372138]
2025-03-06 14:49:04,257 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [371780, 371094, 372568, 371466, 372138]
2025-03-06 14:49:04,257 [DEBUG] py4...: ǀReturning 'get_network_suid': 372138
2025-03-06 14:49:04,257 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:04,257 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:04,258 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:49:04,269 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml","modifiedTime":"2025-03-06 14:44:01.0921","isFile":true},
 "errors":[]
}
2025-03-06 14:49:04,269 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', 'modifiedTime': '2025-03-06 14:44:01.0921', 'isFile': True}
2025-03-06 14:49:04,269 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', 'modifiedTime': '2025-03-06 14:44:01.0921', 'isFile': True}
2025-03-06 14:49:04,269 [DEBUG] py4...: ǀCalling sandbox_remove_file('/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:04,269 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer removeFile fileName="/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:04,269 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:49:04,277 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml","existed":true},
 "errors":[]
}
2025-03-06 14:49:04,277 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', 'existed': True}
2025-03-06 14:49:04,277 [DEBUG] py4...: ǀReturning 'sandbox_remove_file': {'filePath': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', 'existed': True}
2025-03-06 14:49:05,331 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:372138" options="GraphML" OutputFile="/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:05,332 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:372138', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:49:05,377 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml"},
 "errors":[]
}
2025-03-06 14:49:05,377 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:49:05,377 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:49:05,377 [DEBUG] py4...: --------------------
2025-03-06 14:49:09,477 [DEBUG] py4...: Calling open_session('/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys')
2025-03-06 14:49:09,477 [DEBUG] py4...: ǀCalling commands_post('session open file="/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:09,477 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2025-03-06 14:49:09,497 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2025-03-06 14:49:09,497 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/session/open), json: {'file': '/Users/karcher/network_connectivity_queries/aux_scripts/cytoscape_session_files/split_1.cys'}
2025-03-06 14:49:16,233 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2025-03-06 14:49:16,234 [DEBUG] py4...: ǀReturning 'commands_post': {}
2025-03-06 14:49:16,234 [DEBUG] py4...: Returning 'open_session': {}
2025-03-06 14:49:16,234 [DEBUG] py4...: --------------------
2025-03-06 14:49:16,234 [DEBUG] py4...: Calling get_network_list()
2025-03-06 14:49:16,235 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,235 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:49:16,320 [DEBUG] py4...: ǀOK[200], content: [{"name":"Fructose and mannose metabolism [bvu00051]","SUID":381141},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":380039},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":380711},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":380353},{"name":"Pentose phosphate pathway [bvu00030]","SUID":379667}]
2025-03-06 14:49:16,322 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 381141}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 380039}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 380711}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 380353}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 379667}]
2025-03-06 14:49:16,322 [DEBUG] py4...: Returning 'get_network_list': ['Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]']
2025-03-06 14:49:16,322 [DEBUG] py4...: --------------------
2025-03-06 14:49:16,323 [DEBUG] py4...: Calling get_network_suid('Fructose and mannose metabolism [bvu00051]')
2025-03-06 14:49:16,323 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,324 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,324 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:49:16,334 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Fructose and mannose metabolism [bvu00051]","SUID":381141},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":380039},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":380711},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":380353},{"name":"Pentose phosphate pathway [bvu00030]","SUID":379667}]
2025-03-06 14:49:16,334 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 381141}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 380039}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 380711}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 380353}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 379667}]
2025-03-06 14:49:16,334 [DEBUG] py4...: ǀReturning 'get_network_list': ['Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]']
2025-03-06 14:49:16,335 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Fructose and mannose metabolism [bvu00051]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,335 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Fructose and mannose metabolism [bvu00051]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:49:16,355 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 381141
}
],
 "errors":[]
}
2025-03-06 14:49:16,355 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 381141}]
2025-03-06 14:49:16,355 [DEBUG] py4...: Returning 'get_network_suid': 381141
2025-03-06 14:49:16,355 [DEBUG] py4...: --------------------
2025-03-06 14:49:16,355 [DEBUG] py4...: Calling get_network_suid('Citrate cycle (TCA cycle) [bvu00020]')
2025-03-06 14:49:16,355 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,355 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,355 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:49:16,368 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Fructose and mannose metabolism [bvu00051]","SUID":381141},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":380039},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":380711},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":380353},{"name":"Pentose phosphate pathway [bvu00030]","SUID":379667}]
2025-03-06 14:49:16,368 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 381141}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 380039}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 380711}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 380353}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 379667}]
2025-03-06 14:49:16,368 [DEBUG] py4...: ǀReturning 'get_network_list': ['Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]']
2025-03-06 14:49:16,369 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Citrate cycle (TCA cycle) [bvu00020]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,369 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Citrate cycle (TCA cycle) [bvu00020]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:49:16,393 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 380039
}
],
 "errors":[]
}
2025-03-06 14:49:16,393 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 380039}]
2025-03-06 14:49:16,393 [DEBUG] py4...: Returning 'get_network_suid': 380039
2025-03-06 14:49:16,393 [DEBUG] py4...: --------------------
2025-03-06 14:49:16,393 [DEBUG] py4...: Calling get_network_suid('Pentose and glucuronate interconversions [bvu00040]')
2025-03-06 14:49:16,393 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,393 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,393 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:49:16,409 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Fructose and mannose metabolism [bvu00051]","SUID":381141},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":380039},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":380711},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":380353},{"name":"Pentose phosphate pathway [bvu00030]","SUID":379667}]
2025-03-06 14:49:16,410 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 381141}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 380039}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 380711}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 380353}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 379667}]
2025-03-06 14:49:16,410 [DEBUG] py4...: ǀReturning 'get_network_list': ['Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]']
2025-03-06 14:49:16,410 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pentose and glucuronate interconversions [bvu00040]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,410 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pentose and glucuronate interconversions [bvu00040]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:49:16,423 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 380711
}
],
 "errors":[]
}
2025-03-06 14:49:16,424 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 380711}]
2025-03-06 14:49:16,424 [DEBUG] py4...: Returning 'get_network_suid': 380711
2025-03-06 14:49:16,424 [DEBUG] py4...: --------------------
2025-03-06 14:49:16,424 [DEBUG] py4...: Calling get_network_suid('Glycolysis / Gluconeogenesis [bvu00010]')
2025-03-06 14:49:16,424 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,424 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,424 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:49:16,434 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Fructose and mannose metabolism [bvu00051]","SUID":381141},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":380039},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":380711},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":380353},{"name":"Pentose phosphate pathway [bvu00030]","SUID":379667}]
2025-03-06 14:49:16,434 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 381141}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 380039}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 380711}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 380353}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 379667}]
2025-03-06 14:49:16,435 [DEBUG] py4...: ǀReturning 'get_network_list': ['Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]']
2025-03-06 14:49:16,435 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Glycolysis / Gluconeogenesis [bvu00010]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,435 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Glycolysis / Gluconeogenesis [bvu00010]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:49:16,443 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 380353
}
],
 "errors":[]
}
2025-03-06 14:49:16,444 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 380353}]
2025-03-06 14:49:16,444 [DEBUG] py4...: Returning 'get_network_suid': 380353
2025-03-06 14:49:16,444 [DEBUG] py4...: --------------------
2025-03-06 14:49:16,444 [DEBUG] py4...: Calling get_network_suid('Pentose phosphate pathway [bvu00030]')
2025-03-06 14:49:16,444 [DEBUG] py4...: ǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,444 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,444 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2025-03-06 14:49:16,450 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Fructose and mannose metabolism [bvu00051]","SUID":381141},{"name":"Citrate cycle (TCA cycle) [bvu00020]","SUID":380039},{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":380711},{"name":"Glycolysis / Gluconeogenesis [bvu00010]","SUID":380353},{"name":"Pentose phosphate pathway [bvu00030]","SUID":379667}]
2025-03-06 14:49:16,450 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Fructose and mannose metabolism [bvu00051]', 'SUID': 381141}, {'name': 'Citrate cycle (TCA cycle) [bvu00020]', 'SUID': 380039}, {'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 380711}, {'name': 'Glycolysis / Gluconeogenesis [bvu00010]', 'SUID': 380353}, {'name': 'Pentose phosphate pathway [bvu00030]', 'SUID': 379667}]
2025-03-06 14:49:16,450 [DEBUG] py4...: ǀReturning 'get_network_list': ['Fructose and mannose metabolism [bvu00051]', 'Citrate cycle (TCA cycle) [bvu00020]', 'Pentose and glucuronate interconversions [bvu00040]', 'Glycolysis / Gluconeogenesis [bvu00010]', 'Pentose phosphate pathway [bvu00030]']
2025-03-06 14:49:16,450 [DEBUG] py4...: ǀCalling commands_post('network get attribute network="Pentose phosphate pathway [bvu00030]" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,450 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'Pentose phosphate pathway [bvu00030]', 'namespace': 'default', 'columnList': 'SUID'}
2025-03-06 14:49:16,457 [DEBUG] py4...: ǀOK[200], content: {
 "data": [ {
  "SUID": 379667
}
],
 "errors":[]
}
2025-03-06 14:49:16,457 [DEBUG] py4...: ǀReturning 'commands_post': [{'SUID': 379667}]
2025-03-06 14:49:16,457 [DEBUG] py4...: Returning 'get_network_suid': 379667
2025-03-06 14:49:16,457 [DEBUG] py4...: --------------------
2025-03-06 14:49:16,457 [DEBUG] py4...: Calling export_network('/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', 'graphml', network=381141, overwrite_file=True)
2025-03-06 14:49:16,457 [DEBUG] py4...: ǀCalling get_network_suid(381141, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,457 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,457 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:49:16,469 [DEBUG] py4...: ǀǀOK[200], content: [381141,380039,380711,380353,379667]
2025-03-06 14:49:16,469 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [381141, 380039, 380711, 380353, 379667]
2025-03-06 14:49:16,469 [DEBUG] py4...: ǀReturning 'get_network_suid': 381141
2025-03-06 14:49:16,469 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,469 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:16,469 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:49:16,500 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:49:16,500 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:49:16,500 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:49:18,155 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:381141" options="GraphML" OutputFile="/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:18,156 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:381141', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:49:18,182 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml"},
 "errors":[]
}
2025-03-06 14:49:18,182 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:49:18,182 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Fructose and mannose metabolism [bvu00051].graphml'}
2025-03-06 14:49:18,182 [DEBUG] py4...: --------------------
2025-03-06 14:49:18,182 [DEBUG] py4...: Calling export_network('/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', 'graphml', network=380039, overwrite_file=True)
2025-03-06 14:49:18,182 [DEBUG] py4...: ǀCalling get_network_suid(380039, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:18,182 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:18,182 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:49:18,189 [DEBUG] py4...: ǀǀOK[200], content: [381141,380039,380711,380353,379667]
2025-03-06 14:49:18,189 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [381141, 380039, 380711, 380353, 379667]
2025-03-06 14:49:18,189 [DEBUG] py4...: ǀReturning 'get_network_suid': 380039
2025-03-06 14:49:18,189 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:18,189 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:18,189 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:49:18,197 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:49:18,198 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:49:18,198 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:49:21,933 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:380039" options="GraphML" OutputFile="/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:21,934 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:380039', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:49:21,987 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml"},
 "errors":[]
}
2025-03-06 14:49:21,987 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:49:21,987 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Citrate cycle (TCA cycle) [bvu00020].graphml'}
2025-03-06 14:49:21,987 [DEBUG] py4...: --------------------
2025-03-06 14:49:21,987 [DEBUG] py4...: Calling export_network('/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', 'graphml', network=380711, overwrite_file=True)
2025-03-06 14:49:21,987 [DEBUG] py4...: ǀCalling get_network_suid(380711, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:21,987 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:21,987 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:49:22,031 [DEBUG] py4...: ǀǀOK[200], content: [381141,380039,380711,380353,379667]
2025-03-06 14:49:22,031 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [381141, 380039, 380711, 380353, 379667]
2025-03-06 14:49:22,031 [DEBUG] py4...: ǀReturning 'get_network_suid': 380711
2025-03-06 14:49:22,031 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:22,031 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:22,031 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:49:22,046 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:49:22,047 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:49:22,047 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:49:40,145 [DEBUG] py4...: ǀCalling get_network_name(380711)
2025-03-06 14:49:40,146 [DEBUG] py4...: ǀǀCalling cyrest_get('networks.names', {'column': 'suid', 'query': 380711}, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:40,147 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names), params: {'column': 'suid', 'query': 380711}
2025-03-06 14:49:40,161 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"Pentose and glucuronate interconversions [bvu00040]","SUID":380711}]
2025-03-06 14:49:40,161 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'Pentose and glucuronate interconversions [bvu00040]', 'SUID': 380711}]
2025-03-06 14:49:40,161 [DEBUG] py4...: ǀReturning 'get_network_name': 'Pentose and glucuronate interconversions [bvu00040]'
2025-03-06 14:49:49,282 [DEBUG] py4...: ǀCalling commands_post('network export network="SUID:380711" options="GraphML" OutputFile="/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:49,283 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/export), json: {'network': 'SUID:380711', 'options': 'GraphML', 'OutputFile': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:49:49,337 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"file":"/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml"},
 "errors":[]
}
2025-03-06 14:49:49,338 [DEBUG] py4...: ǀReturning 'commands_post': {'file': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:49:49,338 [DEBUG] py4...: Returning 'export_network': {'file': '/Users/karcher/Pentose and glucuronate interconversions [bvu00040].graphml'}
2025-03-06 14:49:49,338 [DEBUG] py4...: --------------------
2025-03-06 14:49:49,338 [DEBUG] py4...: Calling export_network('/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'graphml', network=380353, overwrite_file=True)
2025-03-06 14:49:49,338 [DEBUG] py4...: ǀCalling get_network_suid(380353, base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:49,338 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:49,338 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2025-03-06 14:49:49,353 [DEBUG] py4...: ǀǀOK[200], content: [381141,380039,380711,380353,379667]
2025-03-06 14:49:49,353 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [381141, 380039, 380711, 380353, 379667]
2025-03-06 14:49:49,353 [DEBUG] py4...: ǀReturning 'get_network_suid': 380353
2025-03-06 14:49:49,353 [DEBUG] py4...: ǀCalling sandbox_get_file_info('/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:49,353 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer getFileInfo fileName="/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml"', base_url='http://127.0.0.1:1234/v1')
2025-03-06 14:49:49,353 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml'}
2025-03-06 14:49:49,387 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml","modifiedTime":"","isFile":false},
 "errors":[]
}
2025-03-06 14:49:49,387 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:49:49,387 [DEBUG] py4...: ǀReturning 'sandbox_get_file_info': {'filePath': '/Users/karcher/Glycolysis ___ Gluconeogenesis [bvu00010].graphml', 'modifiedTime': '', 'isFile': False}
2025-03-06 14:52:26,291 [DEBUG] py4...: 'export_network' exception BdbQuit()
2025-03-06 14:52:26,292 [DEBUG] py4...: --------------------
